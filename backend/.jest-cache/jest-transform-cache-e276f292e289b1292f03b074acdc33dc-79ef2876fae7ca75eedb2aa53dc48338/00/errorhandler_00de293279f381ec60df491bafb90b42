fb9d8cd9068a0fc97d9f5208ccc11842
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.notFoundHandler = exports.asyncHandler = exports.errorHandler = void 0;
const logger_1 = require("../utils/logger");
const environment_1 = require("../config/environment");
const errors_1 = require("../utils/errors");
const zod_1 = require("zod");
// 錯誤處理中介軟體
const errorHandler = (error, req, res, next) => {
    let appError;
    // 建立請求上下文
    const requestContext = {
        url: req.url,
        method: req.method,
        ip: req.ip,
        userAgent: req.get("User-Agent"),
        userId: req.user?.id,
        timestamp: new Date().toISOString(),
    };
    // 轉換不同類型的錯誤為 AppError
    if (error instanceof errors_1.AppError) {
        appError = error;
    }
    else if (error instanceof zod_1.ZodError) {
        appError = errors_1.ErrorFactory.fromZodError(error);
    }
    else if (error.name === "ValidationError") {
        // Mongoose 驗證錯誤
        appError = errors_1.ErrorFactory.fromMongooseError(error);
    }
    else if (error.name === "MongoServerError" &&
        error.code === 11000) {
        // Mongoose 重複鍵錯誤
        appError = errors_1.ErrorFactory.fromMongooseError(error);
    }
    else if (error.name === "CastError") {
        // Mongoose CastError
        appError = errors_1.ErrorFactory.fromMongooseError(error);
    }
    else if (error.name === "JsonWebTokenError") {
        appError = errors_1.ErrorFactory.createAuthenticationError("invalid_token");
    }
    else if (error.name === "TokenExpiredError") {
        appError = errors_1.ErrorFactory.createAuthenticationError("token_expired");
    }
    else if (error.name === "MulterError") {
        // 檔案上傳錯誤
        appError = new errors_1.AppError("檔案上傳失敗: " + error.message, 400, errors_1.ErrorCode.VALIDATION_ERROR);
    }
    else {
        // 未知錯誤，轉換為內部伺服器錯誤
        appError = new errors_1.InternalServerError(environment_1.config.env === "development" ? error.message : "內部伺服器錯誤");
    }
    // 記錄錯誤
    const logData = (0, errors_1.formatErrorForLogging)(appError, requestContext);
    if ((0, errors_1.isOperationalError)(appError)) {
        logger_1.logger.warn("操作性錯誤:", logData);
    }
    else {
        logger_1.logger.error("系統錯誤:", logData);
    }
    // 格式化錯誤響應
    const errorResponse = (0, errors_1.formatErrorResponse)(appError, environment_1.config.env === "development");
    // 添加請求路徑和方法到響應中
    errorResponse.error.path = req.path;
    errorResponse.error.method = req.method;
    // 發送錯誤回應
    res.status(appError.statusCode).json(errorResponse);
};
exports.errorHandler = errorHandler;
// 非同步錯誤處理包裝器
const asyncHandler = (fn) => {
    return (req, res, next) => {
        Promise.resolve(fn(req, res, next)).catch(next);
    };
};
exports.asyncHandler = asyncHandler;
// 404 錯誤處理
const notFoundHandler = (req, res, next) => {
    const error = new errors_1.NotFoundError(`路由 ${req.originalUrl} 不存在`);
    next(error);
};
exports.notFoundHandler = notFoundHandler;
exports.default = exports.errorHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,