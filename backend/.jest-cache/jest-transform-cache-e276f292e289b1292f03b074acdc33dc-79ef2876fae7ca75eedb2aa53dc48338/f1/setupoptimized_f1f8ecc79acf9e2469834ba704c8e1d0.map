{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\test\\setup-optimized.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\test\\setup-optimized.ts"],"sourcesContent":["import { MongoMemoryServer } from 'mongodb-memory-server';\nimport mongoose from 'mongoose';\nimport { config } from '../src/config/environment';\n\n// 全局共享的 MongoDB 實例\nlet mongod: MongoMemoryServer;\nlet isSetup = false;\n\n// 優化的 MongoDB Memory Server 設置\nbeforeAll(async () => {\n  if (!isSetup) {\n    try {\n      // 使用更小的內存配置和優化選項\n      mongod = await MongoMemoryServer.create({\n        instance: {\n          dbSize: 1, // 1MB 數據庫大小\n          storageEngine: 'ephemeralForTest', // 使用內存存儲引擎\n          port: undefined, // 讓系統自動分配端口\n        },\n        binary: {\n          version: '6.0.0', // 使用較新但穩定的版本\n          skipMD5: true, // 跳過 MD5 檢查以提升啟動速度\n        }\n      });\n      \n      const uri = mongod.getUri();\n      \n      // 優化的連接配置\n      await mongoose.connect(uri, {\n        maxPoolSize: 5, // 限制連接池大小\n        serverSelectionTimeoutMS: 5000, // 5秒服務器選擇超時\n        socketTimeoutMS: 10000, // 10秒套接字超時\n        connectTimeoutMS: 5000, // 5秒連接超時\n        maxIdleTimeMS: 30000, // 30秒最大空閒時間\n        bufferMaxEntries: 0, // 禁用緩衝\n      });\n      \n      isSetup = true;\n      console.log('✅ 優化的測試數據庫已啟動');\n    } catch (error) {\n      console.error('❌ 測試數據庫啟動失敗:', error);\n      throw error;\n    }\n  }\n}, 30000); // 增加超時時間以應對慢速啟動\n\n// 優化的數據清理策略\nafterEach(async () => {\n  try {\n    // 只清理必要的集合，而不是所有集合\n    const collectionsToClean = ['users', 'pets', 'sessions'];\n    \n    // 並行清理集合以提升速度\n    const cleanupPromises = collectionsToClean.map(async (collectionName) => {\n      try {\n        const collection = mongoose.connection.collection(collectionName);\n        await collection.deleteMany({});\n      } catch (error) {\n        // 忽略不存在的集合錯誤\n        if (!error.message.includes('ns not found')) {\n          console.warn(`清理集合 ${collectionName} 時出現警告:`, error.message);\n        }\n      }\n    });\n    \n    await Promise.all(cleanupPromises);\n  } catch (error) {\n    console.warn('數據清理時出現警告:', error.message);\n  }\n});\n\n// 優化的測試後清理\nafterAll(async () => {\n  try {\n    if (mongoose.connection.readyState !== 0) {\n      await mongoose.connection.dropDatabase();\n      await mongoose.connection.close();\n    }\n    \n    if (mongod) {\n      await mongod.stop();\n    }\n    \n    console.log('✅ 測試數據庫已清理完成');\n  } catch (error) {\n    console.warn('測試清理時出現警告:', error.message);\n  }\n}, 10000);\n\n// 優化的環境變數設置\nprocess.env.NODE_ENV = 'test';\nprocess.env.MONGODB_URI = 'mongodb://localhost:27017/pet-finder-test';\nprocess.env.JWT_SECRET = 'test-jwt-secret-key-with-minimum-32-characters-length';\nprocess.env.EMAIL_FROM = 'test@example.com';\nprocess.env.FRONTEND_URL = 'http://localhost:3000';\nprocess.env.AWS_ACCESS_KEY_ID = 'test-access-key';\nprocess.env.AWS_SECRET_ACCESS_KEY = 'test-secret-key';\nprocess.env.AWS_REGION = 'us-east-1';\nprocess.env.S3_BUCKET_NAME = 'test-bucket';\nprocess.env.SMTP_HOST = 'smtp.test.com';\nprocess.env.SMTP_PORT = '587';\nprocess.env.SMTP_USER = 'test@example.com';\nprocess.env.SMTP_PASS = 'test-password';\nprocess.env.OPENAI_API_KEY = 'test-openai-key';\n\n// 優化的外部服務模擬\njest.mock('../src/services/emailService', () => ({\n  EmailService: {\n    sendVerificationEmail: jest.fn().mockResolvedValue(true),\n    sendPasswordResetEmail: jest.fn().mockResolvedValue(true),\n    sendWelcomeEmail: jest.fn().mockResolvedValue(true),\n    sendNotificationEmail: jest.fn().mockResolvedValue(true)\n  }\n}));\n\n// 優化的 AI 服務模擬 - 使用更快的響應\njest.mock('../src/services/aiService', () => ({\n  analyzeImage: jest.fn().mockResolvedValue({\n    breed: 'Golden Retriever',\n    confidence: 0.95,\n    features: {\n      color: 'golden',\n      size: 'large',\n      age: 'adult'\n    }\n  }),\n  findSimilarPets: jest.fn().mockResolvedValue([]),\n  generateSearchSuggestions: jest.fn().mockResolvedValue(['golden retriever', 'labrador'])\n}));\n\n// 全局錯誤處理\nprocess.on('unhandledRejection', (reason, promise) => {\n  console.warn('測試中出現未處理的 Promise 拒絕:', reason);\n});\n\nprocess.on('uncaughtException', (error) => {\n  console.warn('測試中出現未捕獲的異常:', error.message);\n});\n\n// 導出工具函數供測試使用\nexport const getTestDbUri = () => mongod?.getUri();\nexport const isTestDbReady = () => isSetup && mongoose.connection.readyState === 1;\n\n// 測試性能監控\nconst testStartTime = Date.now();\n\nafterAll(() => {\n  const testDuration = Date.now() - testStartTime;\n  console.log(`📊 測試總耗時: ${testDuration}ms`);\n});"],"version":3}