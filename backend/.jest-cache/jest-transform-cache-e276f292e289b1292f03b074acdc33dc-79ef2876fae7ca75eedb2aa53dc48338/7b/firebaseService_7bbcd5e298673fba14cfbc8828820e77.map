{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\services\\firebaseService.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\services\\firebaseService.ts"],"sourcesContent":["import admin from 'firebase-admin';\nimport { config } from '../config/environment';\nimport { logger } from '../utils/logger';\nimport { NotificationType, NotificationPriority } from '../models/Notification';\n\n/**\n * Firebase 推播通知介面\n */\nexport interface PushNotificationPayload {\n  title: string;\n  body: string;\n  data?: { [key: string]: string };\n  imageUrl?: string;\n  actionUrl?: string;\n  priority?: NotificationPriority;\n  type?: NotificationType;\n}\n\n/**\n * Firebase 服務類別\n */\nexport class FirebaseService {\n  private static app: admin.app.App | null = null;\n  private static messaging: admin.messaging.Messaging | null = null;\n\n  /**\n   * 初始化 Firebase Admin SDK\n   */\n  static initialize(): void {\n    try {\n      if (this.app) {\n        logger.info('Firebase Admin SDK 已經初始化');\n        return;\n      }\n\n      // 檢查必要的環境變數\n      if (!config.firebase.serviceAccountKey) {\n        logger.warn('Firebase 服務帳號金鑰未設定，推播通知功能將被停用');\n        return;\n      }\n\n      // 初始化 Firebase Admin SDK\n      this.app = admin.initializeApp({\n        credential: admin.credential.cert(config.firebase.serviceAccountKey),\n        projectId: config.firebase.projectId,\n      });\n\n      this.messaging = admin.messaging(this.app);\n      logger.info('Firebase Admin SDK 初始化成功');\n    } catch (error) {\n      logger.error('Firebase Admin SDK 初始化失敗', { error });\n      throw error;\n    }\n  }\n\n  /**\n   * 檢查 Firebase 是否已初始化\n   */\n  private static ensureInitialized(): void {\n    if (!this.messaging) {\n      throw new Error('Firebase Admin SDK 尚未初始化');\n    }\n  }\n\n  /**\n   * 發送推播通知給單一裝置\n   */\n  static async sendToDevice(\n    token: string,\n    payload: PushNotificationPayload\n  ): Promise<boolean> {\n    try {\n      this.ensureInitialized();\n\n      const message: admin.messaging.Message = {\n        token,\n        notification: {\n          title: payload.title,\n          body: payload.body,\n          imageUrl: payload.imageUrl,\n        },\n        data: {\n          ...payload.data,\n          type: payload.type || '',\n          actionUrl: payload.actionUrl || '',\n          priority: payload.priority || NotificationPriority.NORMAL,\n        },\n        android: {\n          priority: this.getAndroidPriority(payload.priority),\n          notification: {\n            channelId: this.getChannelId(payload.type),\n            priority: this.getAndroidNotificationPriority(payload.priority),\n            defaultSound: true,\n            defaultVibrateTimings: true,\n          },\n        },\n        apns: {\n          payload: {\n            aps: {\n              alert: {\n                title: payload.title,\n                body: payload.body,\n              },\n              sound: 'default',\n              badge: 1,\n            },\n          },\n        },\n        webpush: {\n          notification: {\n            title: payload.title,\n            body: payload.body,\n            icon: '/icons/icon-192x192.png',\n            badge: '/icons/badge-72x72.png',\n            image: payload.imageUrl,\n            requireInteraction: payload.priority === NotificationPriority.URGENT,\n          },\n          fcmOptions: {\n            link: payload.actionUrl,\n          },\n        },\n      };\n\n      const response = await this.messaging!.send(message);\n      logger.info('推播通知發送成功', {\n        messageId: response,\n        token: token.substring(0, 20) + '...',\n        title: payload.title,\n      });\n\n      return true;\n    } catch (error: any) {\n      logger.error('推播通知發送失敗', {\n        error: error.message,\n        token: token.substring(0, 20) + '...',\n        title: payload.title,\n      });\n\n      // 檢查是否為無效的 token\n      if (error.code === 'messaging/registration-token-not-registered') {\n        logger.info('裝置 token 已失效', { token: token.substring(0, 20) + '...' });\n        // 這裡可以觸發清理無效 token 的邏輯\n      }\n\n      return false;\n    }\n  }\n\n  /**\n   * 發送推播通知給多個裝置\n   */\n  static async sendToMultipleDevices(\n    tokens: string[],\n    payload: PushNotificationPayload\n  ): Promise<{ successCount: number; failureCount: number; invalidTokens: string[] }> {\n    try {\n      this.ensureInitialized();\n\n      if (tokens.length === 0) {\n        return { successCount: 0, failureCount: 0, invalidTokens: [] };\n      }\n\n      // 批次發送（Firebase 限制每次最多 500 個 token）\n      const batchSize = 500;\n      let successCount = 0;\n      let failureCount = 0;\n      const invalidTokens: string[] = [];\n\n      for (let i = 0; i < tokens.length; i += batchSize) {\n        const batch = tokens.slice(i, i + batchSize);\n        const message: admin.messaging.MulticastMessage = {\n          tokens: batch,\n          notification: {\n            title: payload.title,\n            body: payload.body,\n            imageUrl: payload.imageUrl,\n          },\n          data: {\n            ...payload.data,\n            type: payload.type || '',\n            actionUrl: payload.actionUrl || '',\n            priority: payload.priority || NotificationPriority.NORMAL,\n          },\n          android: {\n            priority: this.getAndroidPriority(payload.priority),\n            notification: {\n              channelId: this.getChannelId(payload.type),\n              priority: this.getAndroidNotificationPriority(payload.priority),\n              defaultSound: true,\n              defaultVibrateTimings: true,\n            },\n          },\n          apns: {\n            payload: {\n              aps: {\n                alert: {\n                  title: payload.title,\n                  body: payload.body,\n                },\n                sound: 'default',\n                badge: 1,\n              },\n            },\n          },\n          webpush: {\n            notification: {\n              title: payload.title,\n              body: payload.body,\n              icon: '/icons/icon-192x192.png',\n              badge: '/icons/badge-72x72.png',\n              image: payload.imageUrl,\n              requireInteraction: payload.priority === NotificationPriority.URGENT,\n            },\n            fcmOptions: {\n              link: payload.actionUrl,\n            },\n          },\n        };\n\n        const response = await this.messaging!.sendEachForMulticast(message);\n        successCount += response.successCount;\n        failureCount += response.failureCount;\n\n        // 處理失敗的 token\n        response.responses.forEach((resp: any, idx: number) => {\n          if (!resp.success && resp.error) {\n            const token = batch[idx];\n            if (token && resp.error.code === 'messaging/registration-token-not-registered') {\n              invalidTokens.push(token);\n            }\n            if (token) {\n              logger.warn('推播通知發送失敗', {\n                token: token.substring(0, 20) + '...',\n                error: resp.error.message,\n              });\n            }\n          }\n        });\n      }\n\n      logger.info('批次推播通知發送完成', {\n        totalTokens: tokens.length,\n        successCount,\n        failureCount,\n        invalidTokensCount: invalidTokens.length,\n      });\n\n      return { successCount, failureCount, invalidTokens };\n    } catch (error) {\n      logger.error('批次推播通知發送失敗', { error, tokenCount: tokens.length });\n      return { successCount: 0, failureCount: tokens.length, invalidTokens: [] };\n    }\n  }\n\n  /**\n   * 驗證裝置 token 是否有效\n   */\n  static async validateToken(token: string): Promise<boolean> {\n    try {\n      this.ensureInitialized();\n\n      // 發送一個測試訊息來驗證 token\n      const message: admin.messaging.Message = {\n        token,\n        data: {\n          test: 'true',\n        },\n      };\n      \n      const options = {\n        dryRun: true, // 不實際發送，只驗證\n      };\n\n      await this.messaging!.send(message, options.dryRun);\n      return true;\n    } catch (error: any) {\n      if (error.code === 'messaging/registration-token-not-registered') {\n        return false;\n      }\n      logger.error('Token 驗證失敗', { error: error.message, token: token.substring(0, 20) + '...' });\n      return false;\n    }\n  }\n\n  /**\n   * 取得 Android 優先級\n   */\n  private static getAndroidPriority(priority?: NotificationPriority): 'normal' | 'high' {\n    switch (priority) {\n      case NotificationPriority.HIGH:\n      case NotificationPriority.URGENT:\n        return 'high';\n      default:\n        return 'normal';\n    }\n  }\n\n  /**\n   * 取得 Android 通知優先級\n   */\n  private static getAndroidNotificationPriority(\n    priority?: NotificationPriority\n  ): 'min' | 'low' | 'default' | 'high' | 'max' {\n    switch (priority) {\n      case NotificationPriority.LOW:\n        return 'low';\n      case NotificationPriority.HIGH:\n        return 'high';\n      case NotificationPriority.URGENT:\n        return 'max';\n      default:\n        return 'default';\n    }\n  }\n\n  /**\n   * 取得通知頻道 ID\n   */\n  private static getChannelId(type?: NotificationType): string {\n    switch (type) {\n      case NotificationType.PET_FOUND:\n        return 'pet_found';\n      case NotificationType.PET_MISSING:\n        return 'pet_missing';\n      case NotificationType.MATCH_FOUND:\n        return 'match_found';\n      case NotificationType.MESSAGE_RECEIVED:\n        return 'messages';\n      case NotificationType.SYSTEM_UPDATE:\n        return 'system';\n      case NotificationType.ACCOUNT_SECURITY:\n        return 'security';\n      default:\n        return 'default';\n    }\n  }\n\n  /**\n   * 清理無效的裝置 token\n   */\n  static async cleanupInvalidTokens(tokens: string[]): Promise<string[]> {\n    const validTokens: string[] = [];\n\n    for (const token of tokens) {\n      const isValid = await this.validateToken(token);\n      if (isValid) {\n        validTokens.push(token);\n      }\n    }\n\n    return validTokens;\n  }\n}"],"version":3}