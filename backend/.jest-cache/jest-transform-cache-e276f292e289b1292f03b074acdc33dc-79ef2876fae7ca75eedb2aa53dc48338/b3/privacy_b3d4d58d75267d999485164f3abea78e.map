{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\privacy.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\privacy.ts"],"sourcesContent":["import { Router, Request, Response } from 'express';\nimport { authenticate } from '../middleware/auth';\nimport { validateRequest } from '../utils/validation';\nimport { privacySettingsSchema } from '../schemas/common';\nimport { IUser, User } from '../models/User';\nimport { logger } from '../utils/logger';\nimport { AppError } from '../utils/errors';\n\nconst router = Router();\n\n// 獲取用戶隱私設定\nrouter.get('/settings', authenticate, async (req: Request, res: Response): Promise<void> => {\n  try {\n    const userId = (req.user as IUser)?._id.toString();\n    \n    if (!userId) {\n      res.status(401).json({\n        success: false,\n        message: '未授權的請求',\n      });\n      return;\n    }\n\n    const user = await User.findById(userId).select('privacySettings');\n    if (!user) {\n      res.status(404).json({\n        success: false,\n        message: '用戶不存在',\n      });\n      return;\n    }\n\n    logger.info('獲取隱私設定成功', { userId });\n\n    res.json({\n      success: true,\n      data: {\n        privacySettings: user.privacySettings,\n      },\n    });\n  } catch (error) {\n    logger.error('獲取隱私設定失敗', { error });\n    res.status(500).json({\n      success: false,\n      message: '獲取隱私設定失敗，請稍後再試',\n    });\n  }\n});\n\n// 更新用戶隱私設定\nrouter.put('/settings', \n  authenticate, \n  validateRequest(privacySettingsSchema),\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const userId = (req.user as IUser)?._id.toString();\n      const privacySettings = req.body;\n      \n      if (!userId) {\n        res.status(401).json({\n          success: false,\n          message: '未授權的請求',\n        });\n        return;\n      }\n\n      const user = await User.findById(userId);\n      if (!user) {\n        res.status(404).json({\n          success: false,\n          message: '用戶不存在',\n        });\n        return;\n      }\n\n      // 更新隱私設定\n      user.privacySettings = {\n        ...user.privacySettings,\n        ...privacySettings,\n      };\n\n      await user.save();\n\n      logger.info('隱私設定更新成功', { userId, settings: privacySettings });\n\n      res.json({\n        success: true,\n        message: '隱私設定更新成功',\n        data: {\n          privacySettings: user.privacySettings,\n        },\n      });\n    } catch (error) {\n      logger.error('更新隱私設定失敗', { error });\n      \n      if (error instanceof AppError) {\n        res.status(error.statusCode).json({\n          success: false,\n          message: error.message,\n        });\n        return;\n      }\n\n      res.status(500).json({\n        success: false,\n        message: '更新隱私設定失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 重置隱私設定為預設值\nrouter.post('/settings/reset', authenticate, async (req: Request, res: Response): Promise<void> => {\n  try {\n    const userId = (req.user as IUser)?._id.toString();\n    \n    if (!userId) {\n      res.status(401).json({\n        success: false,\n        message: '未授權的請求',\n      });\n      return;\n    }\n\n    const user = await User.findById(userId);\n    if (!user) {\n      res.status(404).json({\n        success: false,\n        message: '用戶不存在',\n      });\n      return;\n    }\n\n    // 重置為預設隱私設定\n    user.privacySettings = {\n      showEmail: false,\n      showPhone: true,\n      allowDirectContact: true,\n      showFullName: false,\n      profileVisibility: 'registered',\n      emailNotifications: {\n        newMatches: true,\n        messages: true,\n        updates: false,\n        marketing: false,\n      },\n      smsNotifications: {\n        urgentAlerts: true,\n        matches: false,\n      },\n    };\n\n    await user.save();\n\n    logger.info('隱私設定重置成功', { userId });\n\n    res.json({\n      success: true,\n      message: '隱私設定已重置為預設值',\n      data: {\n        privacySettings: user.privacySettings,\n      },\n    });\n  } catch (error) {\n    logger.error('重置隱私設定失敗', { error });\n    res.status(500).json({\n      success: false,\n      message: '重置隱私設定失敗，請稍後再試',\n    });\n  }\n});\n\n// 獲取隱私設定選項說明\nrouter.get('/settings/options', async (req: Request, res: Response): Promise<void> => {\n  try {\n    const options = {\n      profileVisibility: {\n        public: {\n          label: '公開',\n          description: '任何人都可以查看您的個人資料',\n        },\n        registered: {\n          label: '僅註冊用戶',\n          description: '只有註冊用戶可以查看您的個人資料',\n        },\n        private: {\n          label: '私人',\n          description: '只有您自己可以查看完整的個人資料',\n        },\n      },\n      contactSettings: {\n        showEmail: {\n          label: '顯示電子郵件',\n          description: '在您的個人資料中顯示電子郵件地址',\n        },\n        showPhone: {\n          label: '顯示電話號碼',\n          description: '在您的個人資料中顯示電話號碼',\n        },\n        allowDirectContact: {\n          label: '允許直接聯絡',\n          description: '允許其他用戶通過網站直接聯絡您',\n        },\n        showFullName: {\n          label: '顯示完整姓名',\n          description: '顯示您的完整姓名而非暱稱',\n        },\n      },\n      notifications: {\n        email: {\n          newMatches: '新的寵物匹配通知',\n          messages: '新訊息通知',\n          updates: '系統更新通知',\n          marketing: '行銷資訊',\n        },\n        sms: {\n          urgentAlerts: '緊急警報',\n          matches: '匹配通知',\n        },\n      },\n    };\n\n    res.json({\n      success: true,\n      data: { options },\n    });\n  } catch (error) {\n    logger.error('獲取隱私設定選項失敗', { error });\n    res.status(500).json({\n      success: false,\n      message: '獲取選項失敗，請稍後再試',\n    });\n  }\n});\n\nexport { router as privacyRoutes };"],"version":3}