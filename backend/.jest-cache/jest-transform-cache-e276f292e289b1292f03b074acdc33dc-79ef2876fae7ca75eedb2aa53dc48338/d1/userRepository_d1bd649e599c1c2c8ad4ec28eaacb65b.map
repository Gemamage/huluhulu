{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\repositories\\userRepository.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\repositories\\userRepository.ts"],"sourcesContent":["import { User, IUser } from '../models/User';\n\nexport class UserRepository {\n  async findById(id: string): Promise<IUser | null> {\n    return User.findById(id).exec();\n  }\n\n  async findByEmail(email: string): Promise<IUser | null> {\n    return User.findOne({ email }).exec();\n  }\n\n  async create(userData: Partial<IUser>): Promise<IUser> {\n    const user = new User(userData);\n    return user.save();\n  }\n\n  async update(id: string, userData: Partial<IUser>): Promise<IUser | null> {\n    return User.findByIdAndUpdate(id, userData, { new: true }).exec();\n  }\n\n  async delete(id: string): Promise<IUser | null> {\n    return User.findByIdAndDelete(id).exec();\n  }\n\n  async findAll(): Promise<IUser[]> {\n    return User.find().exec();\n  }\n\n  async findByEmailVerificationToken(token: string): Promise<IUser | null> {\n    return User.findOne({ emailVerificationToken: token }).exec();\n  }\n\n  async findByPasswordResetToken(token: string): Promise<IUser | null> {\n    return User.findOne({ passwordResetToken: token }).exec();\n  }\n\n\n\n  async verifyEmail(id: string): Promise<IUser | null> {\n    return User.findByIdAndUpdate(\n      id,\n      {\n        isEmailVerified: true,\n        emailVerificationToken: undefined\n      },\n      { new: true }\n    ).exec();\n  }\n\n  async deactivate(id: string): Promise<IUser | null> {\n    return User.findByIdAndUpdate(\n      id,\n      { isActive: false },\n      { new: true }\n    ).exec();\n  }\n\n  async findWithPagination(query: any, options: {\n    page: number;\n    limit: number;\n    sortBy: string;\n    sortOrder: 'asc' | 'desc';\n  }): Promise<{ users: IUser[]; total: number }> {\n    const { page, limit, sortBy, sortOrder } = options;\n    const skip = (page - 1) * limit;\n    \n    const sort: any = {};\n    sort[sortBy] = sortOrder === 'asc' ? 1 : -1;\n    \n    const [users, total] = await Promise.all([\n      User.find(query)\n        .sort(sort)\n        .skip(skip)\n        .limit(limit)\n        .exec(),\n      User.countDocuments(query),\n    ]);\n    \n    return { users, total };\n  }\n\n  async findByPasswordResetTokenWithExpiry(token: string): Promise<IUser | null> {\n    return User.findOne({\n      passwordResetToken: token,\n      passwordResetExpires: { $gt: new Date() },\n    }).select('+passwordResetToken +passwordResetExpires').exec();\n  }\n\n  // 管理員功能相關方法\n  async countDocuments(filter: any = {}): Promise<number> {\n    return User.countDocuments(filter).exec();\n  }\n\n  async findWithSelect(filter: any, select: string, options?: any): Promise<IUser[]> {\n    let query = User.find(filter).select(select);\n    \n    if (options?.sort) {\n      query = query.sort(options.sort);\n    }\n    \n    if (options?.skip) {\n      query = query.skip(options.skip);\n    }\n    \n    if (options?.limit) {\n      query = query.limit(options.limit);\n    }\n    \n    return query.exec();\n  }\n\n  async findByIdWithSelect(id: string, select: string): Promise<IUser | null> {\n    return User.findById(id).select(select).exec();\n  }\n\n  async updateWithValidation(id: string, updateData: any): Promise<IUser | null> {\n    return User.findByIdAndUpdate(\n      id,\n      updateData,\n      { new: true, runValidators: true }\n    ).select('-password -passwordResetToken -passwordResetExpires -emailVerificationToken -emailVerificationExpires').exec();\n  }\n\n  async softDelete(id: string, email: string): Promise<IUser | null> {\n    return User.findByIdAndUpdate(id, {\n      isActive: false,\n      email: `deleted_${Date.now()}_${email}`,\n    }).exec();\n  }\n\n  async updatePassword(id: string, password: string): Promise<IUser | null> {\n    const user = await User.findById(id);\n    if (user) {\n      user.password = password;\n      await user.save();\n      return user;\n    }\n    return null;\n  }\n\n  async getStatistics(): Promise<{\n    total: number;\n    active: number;\n    verified: number;\n    admins: number;\n    recent: number;\n  }> {\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n\n    const [total, active, verified, admins, recent] = await Promise.all([\n      User.countDocuments(),\n      User.countDocuments({ isActive: true }),\n      User.countDocuments({ isEmailVerified: true }),\n      User.countDocuments({ role: { $in: ['admin', 'moderator'] } }),\n      User.countDocuments({ createdAt: { $gte: thirtyDaysAgo } }),\n    ]);\n\n    return { total, active, verified, admins, recent };\n  }\n\n  // 清理過期驗證令牌\n  async cleanupExpiredTokens(): Promise<{ deletedCount: number }> {\n    const now = new Date();\n    const result = await User.updateMany(\n      {\n        $or: [\n          {\n            emailVerificationExpires: { $lt: now },\n            emailVerificationToken: { $exists: true, $ne: null }\n          },\n          {\n            passwordResetExpires: { $lt: now },\n            passwordResetToken: { $exists: true, $ne: null }\n          }\n        ]\n      },\n      {\n        $unset: {\n          emailVerificationToken: 1,\n          emailVerificationExpires: 1,\n          passwordResetToken: 1,\n          passwordResetExpires: 1\n        }\n      }\n    );\n\n    return { deletedCount: result.modifiedCount };\n  }\n}"],"version":3}