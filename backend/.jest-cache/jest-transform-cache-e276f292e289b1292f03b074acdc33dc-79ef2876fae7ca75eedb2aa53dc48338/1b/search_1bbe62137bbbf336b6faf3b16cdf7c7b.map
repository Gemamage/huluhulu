{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\pets\\search.ts","mappings":";;;;;AAAA,qCAAiC;AACjC,kEAA8D;AAC9D,+CAAqD;AACrD,+CAA4C;AAC5C,sEAG0C;AAC1C,uDAAuD;AACvD,iDAAuD;AACvD,0CAAuC;AACvC,wDAAgC;AAEhC,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB;;;;GAIG;AACH,MAAM,CAAC,GAAG,CAAC,cAAc,EACvB,IAAA,0BAAa,EAAC,wBAAe,CAAC,EAC9B,IAAA,uCAAqB,EAAC;IACpB,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,SAAS;IAC9B,YAAY,EAAE,sCAAoB;CACnC,CAAC,EACF,IAAA,4BAAY,EAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAChC,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAC1B,MAAM,EACJ,KAAK,GAAG,CAAC,EACT,MAAM,GAAG,EAAE,EACZ,GAAG,GAAG,CAAC,cAAc,CAAC;IAEvB,IAAI,CAAC,EAAE,IAAI,CAAC,kBAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC;QAChD,MAAM,IAAI,wBAAe,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;IAED,eAAM,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;IAEtD,WAAW;IACX,MAAM,WAAW,GAAG,MAAM,SAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;IAClD,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,MAAM,IAAI,wBAAe,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IAED,YAAY;IACZ,MAAM,eAAe,GAAQ;QAC3B,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,kBAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO;QACtD,MAAM,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE,CAAC,WAAW;KACxC,CAAC;IAEF,YAAY;IACZ,IAAI,WAAW,CAAC,IAAI,EAAE,CAAC;QACrB,eAAe,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;IAC1C,CAAC;IAED,iBAAiB;IACjB,MAAM,UAAU,GAAG,EAAE,GAAG,eAAe,EAAE,CAAC;IAC1C,IAAI,WAAW,CAAC,KAAK,EAAE,CAAC;QACtB,UAAU,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxD,CAAC;IAED,iBAAiB;IACjB,MAAM,UAAU,GAAG,EAAE,GAAG,eAAe,EAAE,CAAC;IAC1C,IAAI,WAAW,CAAC,KAAK,EAAE,CAAC;QACtB,UAAU,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxD,CAAC;IAED,cAAc;IACd,MAAM,aAAa,GAAG,EAAE,GAAG,eAAe,EAAE,CAAC;IAC7C,IAAI,WAAW,CAAC,gBAAgB,EAAE,CAAC;QACjC,aAAa,CAAC,gBAAgB,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;IACjF,CAAC;IAED,oBAAoB;IACpB,MAAM,CAAC,YAAY,EAAE,YAAY,EAAE,eAAe,EAAE,WAAW,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QACnF,UAAU;QACV,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,SAAG,CAAC,IAAI,CAAC,UAAU,CAAC;aACrC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC;aACvB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;aAC3B,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC;aAC1B,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;QAEd,UAAU;QACV,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,SAAG,CAAC,IAAI,CAAC,UAAU,CAAC;aACrC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC;aACvB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;aAC3B,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC;aAC1B,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;QAEd,UAAU;QACV,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAG,CAAC,IAAI,CAAC,aAAa,CAAC;aACnD,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC;aACvB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;aAC3B,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC;aAC1B,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;QAEd,eAAe;QACf,SAAG,CAAC,IAAI,CAAC,eAAe,CAAC;aACtB,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC;aACvB,KAAK,CAAC,KAAK,CAAC;aACZ,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC;aAC1B,IAAI,EAAE;KACV,CAAC,CAAC;IAEH,UAAU;IACV,MAAM,UAAU,GAAG,CAAC,GAAG,YAAY,EAAE,GAAG,YAAY,EAAE,GAAG,eAAe,EAAE,GAAG,WAAW,CAAC,CAAC;IAC1F,MAAM,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAC3D,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CACvE,CAAC;IAEF,4BAA4B;IAC5B,MAAM,aAAa,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;QAChD,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,MAAM,GAAG,CAAC,CAAC;QAEf,WAAW;QACX,IAAI,WAAW,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK;YAC5B,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;YACpE,MAAM,IAAI,CAAC,CAAC;QACd,CAAC;QACD,IAAI,WAAW,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK;YAC5B,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;YACpE,MAAM,IAAI,CAAC,CAAC;QACd,CAAC;QAED,OAAO;QACP,IAAI,WAAW,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK;YAC5B,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;YACpE,MAAM,IAAI,CAAC,CAAC;QACd,CAAC;QACD,IAAI,WAAW,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK;YAC5B,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;YACpE,MAAM,IAAI,CAAC,CAAC;QACd,CAAC;QAED,OAAO;QACP,IAAI,WAAW,CAAC,gBAAgB,IAAI,CAAC,CAAC,gBAAgB;YAClD,CAAC,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;YAC1F,MAAM,IAAI,CAAC,CAAC;QACd,CAAC;QACD,IAAI,WAAW,CAAC,gBAAgB,IAAI,CAAC,CAAC,gBAAgB;YAClD,CAAC,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;YAC1F,MAAM,IAAI,CAAC,CAAC;QACd,CAAC;QAED,OAAO;QACP,IAAI,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI;YAAE,MAAM,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI;YAAE,MAAM,IAAI,CAAC,CAAC;QAE7C,OAAO,MAAM,GAAG,MAAM,CAAC,CAAC,OAAO;IACjC,CAAC,CAAC,CAAC;IAEH,SAAS;IACT,MAAM,YAAY,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAEnD,GAAG,CAAC,IAAI,CAAC;QACP,OAAO,EAAE,IAAI;QACb,IAAI,EAAE;YACJ,WAAW,EAAE;gBACX,EAAE,EAAE,WAAW,CAAC,GAAG;gBACnB,IAAI,EAAE,WAAW,CAAC,IAAI;gBACtB,IAAI,EAAE,WAAW,CAAC,IAAI;gBACtB,KAAK,EAAE,WAAW,CAAC,KAAK;gBACxB,KAAK,EAAE,WAAW,CAAC,KAAK;gBACxB,gBAAgB,EAAE,WAAW,CAAC,gBAAgB;aAC/C;YACD,WAAW,EAAE,YAAY;YACzB,UAAU,EAAE,YAAY,CAAC,MAAM;YAC/B,cAAc,EAAE;gBACd,IAAI,EAAE,WAAW,CAAC,IAAI;gBACtB,KAAK,EAAE,WAAW,CAAC,KAAK;gBACxB,KAAK,EAAE,WAAW,CAAC,KAAK;gBACxB,QAAQ,EAAE,WAAW,CAAC,gBAAgB;gBACtC,MAAM;aACP;SACF;KACF,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AAEJ,kBAAe,MAAM,CAAC","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\pets\\search.ts"],"sourcesContent":["import { Router } from 'express';\nimport { asyncHandler } from '../../middleware/error-handler';\nimport { ValidationError } from '../../utils/errors';\nimport { logger } from '../../utils/logger';\nimport { \n  createCacheMiddleware,\n  petCacheKeyGenerator\n} from '../../middleware/cacheMiddleware';\nimport { validateQuery } from '../../utils/validation';\nimport { petSearchSchema } from '../../schemas/search';\nimport { Pet } from '../../models/Pet';\nimport mongoose from 'mongoose';\n\nconst router = Router();\n\n/**\n * @route   GET /api/pets/:id/similar\n * @desc    搜尋相似的寵物\n * @access  Public\n */\nrouter.get('/:id/similar', \n  validateQuery(petSearchSchema),\n  createCacheMiddleware({\n    ttl: 15 * 60 * 1000, // 15分鐘快取\n    keyGenerator: petCacheKeyGenerator\n  }),\n  asyncHandler(async (req, res) => {\n  const { id } = req.params;\n  const {\n    limit = 6,\n    radius = 10\n  } = req.validatedQuery;\n\n  if (!id || !mongoose.Types.ObjectId.isValid(id)) {\n    throw new ValidationError('請提供有效的寵物 ID');\n  }\n\n  logger.info('搜尋相似寵物請求', { petId: id, limit, radius });\n\n  // 獲取原始寵物資訊\n  const originalPet = await Pet.findById(id).lean();\n  if (!originalPet) {\n    throw new ValidationError('找不到指定的寵物資訊');\n  }\n\n  // 建立相似性查詢條件\n  const similarityQuery: any = {\n    _id: { $ne: new mongoose.Types.ObjectId(id) }, // 排除自己\n    status: { $ne: 'reunited' } // 排除已團聚的案例\n  };\n\n  // 優先條件：相同類型\n  if (originalPet.type) {\n    similarityQuery.type = originalPet.type;\n  }\n\n  // 次要條件：相同品種（如果有）\n  const breedQuery = { ...similarityQuery };\n  if (originalPet.breed) {\n    breedQuery.breed = new RegExp(originalPet.breed, 'i');\n  }\n\n  // 第三條件：相同顏色（如果有）\n  const colorQuery = { ...similarityQuery };\n  if (originalPet.color) {\n    colorQuery.color = new RegExp(originalPet.color, 'i');\n  }\n\n  // 地理位置條件（如果有）\n  const locationQuery = { ...similarityQuery };\n  if (originalPet.lastSeenLocation) {\n    locationQuery.lastSeenLocation = new RegExp(originalPet.lastSeenLocation, 'i');\n  }\n\n  // 執行多個查詢以獲得不同層級的相似性\n  const [breedMatches, colorMatches, locationMatches, typeMatches] = await Promise.all([\n    // 品種相同的寵物\n    originalPet.breed ? Pet.find(breedQuery)\n      .sort({ createdAt: -1 })\n      .limit(Math.ceil(limit / 2))\n      .populate('userId', 'name')\n      .lean() : [],\n    \n    // 顏色相同的寵物\n    originalPet.color ? Pet.find(colorQuery)\n      .sort({ createdAt: -1 })\n      .limit(Math.ceil(limit / 3))\n      .populate('userId', 'name')\n      .lean() : [],\n    \n    // 地點相近的寵物\n    originalPet.lastSeenLocation ? Pet.find(locationQuery)\n      .sort({ createdAt: -1 })\n      .limit(Math.ceil(limit / 3))\n      .populate('userId', 'name')\n      .lean() : [],\n    \n    // 同類型的寵物（作為後備）\n    Pet.find(similarityQuery)\n      .sort({ createdAt: -1 })\n      .limit(limit)\n      .populate('userId', 'name')\n      .lean()\n  ]);\n\n  // 合併結果並去重\n  const allMatches = [...breedMatches, ...colorMatches, ...locationMatches, ...typeMatches];\n  const uniqueMatches = allMatches.filter((pet, index, self) => \n    index === self.findIndex(p => p._id.toString() === pet._id.toString())\n  );\n\n  // 按相似度排序（品種 > 顏色 > 地點 > 類型）\n  const sortedMatches = uniqueMatches.sort((a, b) => {\n    let scoreA = 0;\n    let scoreB = 0;\n\n    // 品種匹配得分最高\n    if (originalPet.breed && a.breed && \n        a.breed.toLowerCase().includes(originalPet.breed.toLowerCase())) {\n      scoreA += 4;\n    }\n    if (originalPet.breed && b.breed && \n        b.breed.toLowerCase().includes(originalPet.breed.toLowerCase())) {\n      scoreB += 4;\n    }\n\n    // 顏色匹配\n    if (originalPet.color && a.color && \n        a.color.toLowerCase().includes(originalPet.color.toLowerCase())) {\n      scoreA += 3;\n    }\n    if (originalPet.color && b.color && \n        b.color.toLowerCase().includes(originalPet.color.toLowerCase())) {\n      scoreB += 3;\n    }\n\n    // 地點匹配\n    if (originalPet.lastSeenLocation && a.lastSeenLocation && \n        a.lastSeenLocation.toLowerCase().includes(originalPet.lastSeenLocation.toLowerCase())) {\n      scoreA += 2;\n    }\n    if (originalPet.lastSeenLocation && b.lastSeenLocation && \n        b.lastSeenLocation.toLowerCase().includes(originalPet.lastSeenLocation.toLowerCase())) {\n      scoreB += 2;\n    }\n\n    // 類型匹配\n    if (a.type === originalPet.type) scoreA += 1;\n    if (b.type === originalPet.type) scoreB += 1;\n\n    return scoreB - scoreA; // 降序排列\n  });\n\n  // 限制結果數量\n  const finalResults = sortedMatches.slice(0, limit);\n\n  res.json({\n    success: true,\n    data: {\n      originalPet: {\n        id: originalPet._id,\n        name: originalPet.name,\n        type: originalPet.type,\n        breed: originalPet.breed,\n        color: originalPet.color,\n        lastSeenLocation: originalPet.lastSeenLocation\n      },\n      similarPets: finalResults,\n      totalFound: finalResults.length,\n      searchCriteria: {\n        type: originalPet.type,\n        breed: originalPet.breed,\n        color: originalPet.color,\n        location: originalPet.lastSeenLocation,\n        radius\n      }\n    },\n  });\n}));\n\nexport default router;"],"version":3}