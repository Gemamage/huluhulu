4971e630dae4ab7cdb1b36ea35011fa0
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Notification = exports.NotificationStatus = exports.NotificationPriority = exports.NotificationType = void 0;
const mongoose_1 = __importStar(require("mongoose"));
/**
 * 通知類型枚舉
 */
var NotificationType;
(function (NotificationType) {
    NotificationType["PET_FOUND"] = "pet_found";
    NotificationType["PET_MISSING"] = "pet_missing";
    NotificationType["MATCH_FOUND"] = "match_found";
    NotificationType["MESSAGE_RECEIVED"] = "message_received";
    NotificationType["MESSAGE"] = "message";
    NotificationType["COMMENT"] = "comment";
    NotificationType["REPLY"] = "reply";
    NotificationType["REVIEW"] = "review";
    NotificationType["REPORT"] = "report";
    NotificationType["REPORT_RESOLVED"] = "report_resolved";
    NotificationType["SYSTEM_UPDATE"] = "system_update";
    NotificationType["ACCOUNT_SECURITY"] = "account_security";
})(NotificationType || (exports.NotificationType = NotificationType = {}));
/**
 * 通知優先級
 */
var NotificationPriority;
(function (NotificationPriority) {
    NotificationPriority["LOW"] = "low";
    NotificationPriority["NORMAL"] = "normal";
    NotificationPriority["HIGH"] = "high";
    NotificationPriority["URGENT"] = "urgent";
})(NotificationPriority || (exports.NotificationPriority = NotificationPriority = {}));
/**
 * 通知狀態
 */
var NotificationStatus;
(function (NotificationStatus) {
    NotificationStatus["PENDING"] = "pending";
    NotificationStatus["SCHEDULED"] = "scheduled";
    NotificationStatus["SENT"] = "sent";
    NotificationStatus["DELIVERED"] = "delivered";
    NotificationStatus["READ"] = "read";
    NotificationStatus["FAILED"] = "failed";
})(NotificationStatus || (exports.NotificationStatus = NotificationStatus = {}));
/**
 * 通知 Schema
 */
const notificationSchema = new mongoose_1.Schema({
    userId: {
        type: mongoose_1.Schema.Types.ObjectId,
        ref: "User",
        required: true,
        index: true,
    },
    type: {
        type: String,
        enum: Object.values(NotificationType),
        required: true,
        index: true,
    },
    title: {
        type: String,
        required: true,
        maxlength: 100,
    },
    message: {
        type: String,
        required: true,
        maxlength: 500,
    },
    priority: {
        type: String,
        enum: Object.values(NotificationPriority),
        default: NotificationPriority.NORMAL,
        index: true,
    },
    status: {
        type: String,
        enum: Object.values(NotificationStatus),
        default: NotificationStatus.PENDING,
        index: true,
    },
    channels: {
        push: {
            enabled: {
                type: Boolean,
                default: true,
            },
            sent: {
                type: Boolean,
                default: false,
            },
            sentAt: {
                type: Date,
            },
        },
        email: {
            enabled: {
                type: Boolean,
                default: false,
            },
            sent: {
                type: Boolean,
                default: false,
            },
            sentAt: {
                type: Date,
            },
        },
        inApp: {
            enabled: {
                type: Boolean,
                default: true,
            },
            sent: {
                type: Boolean,
                default: false,
            },
            sentAt: {
                type: Date,
            },
        },
    },
    data: {
        type: mongoose_1.Schema.Types.Mixed,
        default: {},
    },
    actionUrl: {
        type: String,
    },
    imageUrl: {
        type: String,
    },
    metadata: {
        type: mongoose_1.Schema.Types.Mixed,
        default: {},
    },
    scheduledAt: {
        type: Date,
        index: true,
    },
    sentAt: {
        type: Date,
        index: true,
    },
    readAt: {
        type: Date,
        index: true,
    },
    expiresAt: {
        type: Date,
    },
}, {
    timestamps: true,
    collection: "notifications",
});
// 複合索引
notificationSchema.index({ userId: 1, status: 1, createdAt: -1 });
notificationSchema.index({ userId: 1, type: 1, createdAt: -1 });
notificationSchema.index({ status: 1, scheduledAt: 1 });
notificationSchema.index({ expiresAt: 1 }, { expireAfterSeconds: 0 });
// 虛擬欄位
notificationSchema.virtual("isRead").get(function () {
    return this.status === NotificationStatus.READ;
});
notificationSchema.virtual("isExpired").get(function () {
    return this.expiresAt && this.expiresAt < new Date();
});
// 實例方法
notificationSchema.methods.markAsRead = function () {
    this.status = NotificationStatus.READ;
    this.readAt = new Date();
    return this.save();
};
notificationSchema.methods.markAsSent = function () {
    this.status = NotificationStatus.SENT;
    this.sentAt = new Date();
    return this.save();
};
notificationSchema.methods.markAsDelivered = function () {
    this.status = NotificationStatus.DELIVERED;
    return this.save();
};
notificationSchema.methods.markAsFailed = function () {
    this.status = NotificationStatus.FAILED;
    return this.save();
};
// 靜態方法
notificationSchema.statics.findUnreadByUser = function (userId) {
    return this.find({
        userId,
        status: { $ne: NotificationStatus.READ },
        $or: [
            { expiresAt: { $exists: false } },
            { expiresAt: { $gt: new Date() } },
        ],
    }).sort({ createdAt: -1 });
};
notificationSchema.statics.findByUserAndType = function (userId, type) {
    return this.find({ userId, type }).sort({ createdAt: -1 });
};
notificationSchema.statics.findPendingNotifications = function () {
    return this.find({
        status: NotificationStatus.PENDING,
        $and: [
            {
                $or: [
                    { scheduledAt: { $exists: false } },
                    { scheduledAt: { $lte: new Date() } },
                ],
            },
            {
                $or: [
                    { expiresAt: { $exists: false } },
                    { expiresAt: { $gt: new Date() } },
                ],
            },
        ],
    }).sort({ priority: -1, createdAt: 1 });
};
exports.Notification = mongoose_1.default.model("Notification", notificationSchema);
exports.default = exports.Notification;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,