{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\advancedSearch.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\advancedSearch.ts"],"sourcesContent":["import express from \"express\";\nimport { Request, Response } from \"express\";\nimport { petSearchService, PetSearchQuery } from \"../services/petSearchService\";\nimport { elasticsearchService } from \"../services/elasticsearchService\";\nimport { mockElasticsearchService } from \"../services/mockElasticsearchService\";\nimport { auth } from \"../middleware/auth\";\nimport { logger } from \"../utils/logger\";\nimport rateLimit from \"express-rate-limit\";\n\nconst router = express.Router();\n\n// 檢測是否使用模擬服務\nconst USE_MOCK_ELASTICSEARCH =\n  process.env.NODE_ENV === \"development\" && !process.env.ELASTICSEARCH_URL;\n\n// 搜尋頻率限制\nconst searchLimiter = rateLimit({\n  windowMs: 1 * 60 * 1000, // 1分鐘\n  max: 30, // 每分鐘最多30次搜尋\n  message: {\n    error: \"搜尋頻率過高，請稍後再試\",\n    code: \"RATE_LIMIT_EXCEEDED\",\n  },\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\n// 建議搜尋頻率限制\nconst suggestionLimiter = rateLimit({\n  windowMs: 1 * 60 * 1000, // 1分鐘\n  max: 60, // 每分鐘最多60次建議請求\n  message: {\n    error: \"建議請求頻率過高，請稍後再試\",\n    code: \"RATE_LIMIT_EXCEEDED\",\n  },\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\n/**\n * @route POST /api/advanced-search/pets\n * @desc 進階寵物搜尋\n * @access Public\n */\nrouter.post(\"/pets\", searchLimiter, async (req: Request, res: Response) => {\n  try {\n    const {\n      query = \"\",\n      type,\n      status,\n      breed,\n      location,\n      size,\n      gender,\n      color,\n      page = 1,\n      limit = 12,\n      sortBy = \"createdAt\",\n      sortOrder = \"desc\",\n      fuzzy = false,\n      radius = 10,\n      coordinates,\n    } = req.body as PetSearchQuery;\n\n    // 驗證參數\n    if (page < 1 || limit < 1 || limit > 50) {\n      return res.status(400).json({\n        error: \"無效的分頁參數\",\n        code: \"INVALID_PAGINATION\",\n      });\n    }\n\n    if (radius && (radius < 1 || radius > 100)) {\n      return res.status(400).json({\n        error: \"搜尋半徑必須在 1-100 公里之間\",\n        code: \"INVALID_RADIUS\",\n      });\n    }\n\n    const searchQuery: PetSearchQuery = {\n      query: query.trim(),\n      type,\n      status,\n      breed,\n      location,\n      size,\n      gender,\n      color,\n      page,\n      limit,\n      sortBy,\n      sortOrder,\n      fuzzy,\n      radius,\n      coordinates,\n    };\n\n    let searchResult;\n    let searchTime;\n    const startTime = Date.now();\n\n    if (USE_MOCK_ELASTICSEARCH) {\n      // 使用模擬服務\n      searchResult = await mockElasticsearchService.searchPets(searchQuery);\n      searchTime = Date.now() - startTime;\n    } else {\n      // 檢查 Elasticsearch 連接\n      if (!elasticsearchService.isConnected()) {\n        logger.warn(\"Elasticsearch 未連接，使用基礎搜尋\");\n        return res.status(503).json({\n          error: \"搜尋服務暫時不可用，請稍後再試\",\n          code: \"SEARCH_SERVICE_UNAVAILABLE\",\n        });\n      }\n\n      // 執行搜尋\n      searchResult = await petSearchService.searchPets(searchQuery);\n      searchTime = Date.now() - startTime;\n\n      // 記錄搜尋分析\n      const userId = req.user?.id;\n      const sessionId = req.sessionID;\n      const userAgent = req.get(\"User-Agent\");\n      const ipAddress = req.ip;\n\n      await petSearchService.recordSearchAnalytics(\n        query,\n        { type, status, breed, location, size, gender, color },\n        userId,\n        searchResult.total,\n        sessionId,\n        userAgent,\n        ipAddress,\n      );\n    }\n\n    // 回傳結果\n    res.json({\n      success: true,\n      data: {\n        pets: searchResult.hits.map((hit) => ({\n          id: hit.id,\n          ...hit.source,\n          highlights: hit.highlights,\n          relevanceScore: hit.score,\n        })),\n        pagination: {\n          page,\n          limit,\n          total: searchResult.total,\n          totalPages: Math.ceil(searchResult.total / limit),\n          hasNext: page * limit < searchResult.total,\n          hasPrev: page > 1,\n        },\n        searchInfo: {\n          query: query.trim(),\n          filters: { type, status, breed, location, size, gender, color },\n          fuzzy,\n          searchTime,\n          maxScore: searchResult.maxScore,\n        },\n      },\n      mock: USE_MOCK_ELASTICSEARCH,\n    });\n  } catch (error) {\n    logger.error(\"進階搜尋失敗:\", error);\n    res.status(500).json({\n      error: \"搜尋失敗，請稍後再試\",\n      code: \"SEARCH_ERROR\",\n    });\n  }\n});\n\n/**\n * @route GET /api/advanced-search/suggestions\n * @desc 獲取搜尋建議\n * @access Public\n */\nrouter.get(\n  \"/suggestions\",\n  suggestionLimiter,\n  async (req: Request, res: Response) => {\n    try {\n      const { q: query, limit = 5 } = req.query;\n\n      if (!query || typeof query !== \"string\") {\n        return res.status(400).json({\n          error: \"請提供搜尋關鍵字\",\n          code: \"MISSING_QUERY\",\n        });\n      }\n\n      if (query.length < 1) {\n        return res.json({\n          success: true,\n          data: {\n            suggestions: [],\n          },\n        });\n      }\n\n      const limitNum = Math.min(parseInt(limit as string) || 5, 10);\n\n      let suggestions;\n\n      if (USE_MOCK_ELASTICSEARCH) {\n        // 使用模擬服務\n        suggestions = await mockElasticsearchService.getSearchSuggestions(\n          query,\n          limitNum,\n        );\n      } else {\n        // 檢查 Elasticsearch 連接\n        if (!elasticsearchService.isConnected()) {\n          return res.json({\n            success: true,\n            data: {\n              suggestions: [],\n            },\n          });\n        }\n\n        suggestions = await petSearchService.getSearchSuggestions(\n          query,\n          limitNum,\n        );\n      }\n\n      res.json({\n        success: true,\n        data: {\n          suggestions: suggestions.map((suggestion) => ({\n            text: suggestion.text,\n            type: suggestion.type,\n            score: suggestion.score,\n          })),\n        },\n        mock: USE_MOCK_ELASTICSEARCH,\n      });\n    } catch (error) {\n      logger.error(\"獲取搜尋建議失敗:\", error);\n      res.status(500).json({\n        error: \"獲取建議失敗\",\n        code: \"SUGGESTION_ERROR\",\n      });\n    }\n  },\n);\n\n/**\n * @route GET /api/advanced-search/analytics\n * @desc 獲取搜尋分析數據\n * @access Private (Admin)\n */\nrouter.get(\"/analytics\", auth, async (req: Request, res: Response) => {\n  try {\n    // 檢查管理員權限\n    if (req.user?.role !== \"admin\") {\n      return res.status(403).json({\n        error: \"權限不足\",\n        code: \"INSUFFICIENT_PERMISSIONS\",\n      });\n    }\n\n    const { days = 30 } = req.query;\n    const daysNum = Math.min(parseInt(days as string) || 30, 365);\n\n    let analytics;\n\n    if (USE_MOCK_ELASTICSEARCH) {\n      // 使用模擬服務\n      analytics = await mockElasticsearchService.getSearchAnalytics(daysNum);\n    } else {\n      // 檢查 Elasticsearch 連接\n      if (!elasticsearchService.isConnected()) {\n        return res.status(503).json({\n          error: \"分析服務暫時不可用\",\n          code: \"ANALYTICS_SERVICE_UNAVAILABLE\",\n        });\n      }\n\n      analytics = await petSearchService.getSearchAnalytics(daysNum);\n    }\n\n    res.json({\n      success: true,\n      data: {\n        analytics,\n        period: {\n          days: daysNum,\n          from: new Date(\n            Date.now() - daysNum * 24 * 60 * 60 * 1000,\n          ).toISOString(),\n          to: new Date().toISOString(),\n        },\n      },\n      mock: USE_MOCK_ELASTICSEARCH,\n    });\n  } catch (error) {\n    logger.error(\"獲取搜尋分析失敗:\", error);\n    res.status(500).json({\n      error: \"獲取分析數據失敗\",\n      code: \"ANALYTICS_ERROR\",\n    });\n  }\n});\n\n/**\n * @route GET /api/advanced-search/health\n * @desc 檢查搜尋服務健康狀態\n * @access Public\n */\nrouter.get(\"/health\", async (req: Request, res: Response) => {\n  try {\n    let isConnected, metrics;\n\n    if (USE_MOCK_ELASTICSEARCH) {\n      // 使用模擬服務\n      isConnected = await mockElasticsearchService.checkConnection();\n      metrics = mockElasticsearchService.getPerformanceMetrics();\n    } else {\n      // 使用真實 Elasticsearch 服務\n      isConnected = await elasticsearchService.checkConnection();\n      metrics = elasticsearchService.getPerformanceMetrics();\n    }\n\n    res.json({\n      success: true,\n      data: {\n        elasticsearch: {\n          connected: isConnected,\n          status: isConnected ? \"healthy\" : \"disconnected\",\n          mock: USE_MOCK_ELASTICSEARCH,\n        },\n        performance: {\n          totalQueries: metrics.totalQueries,\n          averageResponseTime: Math.round(metrics.averageResponseTime),\n          slowQueries: metrics.slowQueries,\n          errorRate: Math.round(metrics.errorRate * 100) / 100,\n          lastUpdated: metrics.lastUpdated,\n        },\n        features: {\n          advancedSearch: isConnected,\n          fuzzySearch: isConnected,\n          suggestions: isConnected,\n          analytics: isConnected,\n          geoSearch: isConnected,\n        },\n      },\n    });\n  } catch (error) {\n    logger.error(\"檢查搜尋服務健康狀態失敗:\", error);\n    res.status(500).json({\n      error: \"健康檢查失敗\",\n      code: \"HEALTH_CHECK_ERROR\",\n    });\n  }\n});\n\n/**\n * @route POST /api/advanced-search/reindex\n * @desc 重新索引所有寵物數據\n * @access Private (Admin)\n */\nrouter.post(\"/reindex\", auth, async (req: Request, res: Response) => {\n  try {\n    // 檢查管理員權限\n    if (req.user?.role !== \"admin\") {\n      return res.status(403).json({\n        error: \"權限不足\",\n        code: \"INSUFFICIENT_PERMISSIONS\",\n      });\n    }\n\n    let result;\n\n    if (USE_MOCK_ELASTICSEARCH) {\n      // 使用模擬服務\n      result = await mockElasticsearchService.reindexAllPets();\n    } else {\n      // 檢查 Elasticsearch 連接\n      if (!elasticsearchService.isConnected()) {\n        return res.status(503).json({\n          error: \"搜尋服務暫時不可用\",\n          code: \"SEARCH_SERVICE_UNAVAILABLE\",\n        });\n      }\n\n      // 使用真實 Elasticsearch 服務\n      result = await petSearchService.reindexAllPets();\n    }\n\n    logger.info(\"重新索引寵物數據完成\");\n\n    res.json({\n      success: true,\n      message: \"重新索引任務已完成\",\n      data: {\n        ...result,\n        mock: USE_MOCK_ELASTICSEARCH,\n      },\n    });\n  } catch (error) {\n    logger.error(\"重新索引失敗:\", error);\n    res.status(500).json({\n      error: \"重新索引失敗\",\n      code: \"REINDEX_ERROR\",\n    });\n  }\n});\n\nexport default router;\n"],"version":3}