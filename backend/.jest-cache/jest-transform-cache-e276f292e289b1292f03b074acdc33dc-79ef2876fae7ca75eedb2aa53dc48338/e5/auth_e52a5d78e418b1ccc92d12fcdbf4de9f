cd83134c4dedba369818ccfb42692026
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.requireEmailVerification = exports.authorizeOwnerOrAdmin = exports.authorize = exports.optionalAuthenticate = exports.authenticate = void 0;
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
const User_1 = require("../models/User");
const environment_1 = require("../config/environment");
const errors_1 = require("../utils/errors");
const logger_1 = require("../utils/logger");
/**
 * 認證中介軟體 - 驗證 JWT 令牌
 */
const authenticate = async (req, res, next) => {
    try {
        // 從請求標頭中獲取令牌
        const authHeader = req.header("Authorization");
        if (!authHeader || !authHeader.startsWith("Bearer ")) {
            throw new errors_1.AuthenticationError("請提供有效的認證令牌");
        }
        const token = authHeader.substring(7); // 移除 'Bearer ' 前綴
        if (!token) {
            throw new errors_1.AuthenticationError("認證令牌不能為空");
        }
        // 驗證令牌
        const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);
        // 查找用戶
        const user = await User_1.User.findById(decoded.id).select("+password");
        if (!user) {
            throw new errors_1.AuthenticationError("用戶不存在");
        }
        if (!user.isActive) {
            throw new errors_1.AuthenticationError("用戶帳號已被停用");
        }
        // 將用戶資訊附加到請求物件
        req.user = user;
        logger_1.logger.debug("用戶認證成功", { userId: user._id, email: user.email });
        next();
    }
    catch (error) {
        if (error instanceof jsonwebtoken_1.default.JsonWebTokenError) {
            logger_1.logger.warn("無效的 JWT 令牌", { error: error.message });
            next(new errors_1.AuthenticationError("無效的認證令牌"));
        }
        else if (error instanceof jsonwebtoken_1.default.TokenExpiredError) {
            logger_1.logger.warn("JWT 令牌已過期", { error: error.message });
            next(new errors_1.AuthenticationError("認證令牌已過期"));
        }
        else {
            logger_1.logger.error("認證中介軟體錯誤", { error });
            next(error);
        }
    }
};
exports.authenticate = authenticate;
/**
 * 可選認證中介軟體 - 如果有令牌則驗證，沒有則繼續
 */
const optionalAuthenticate = async (req, res, next) => {
    try {
        const authHeader = req.header("Authorization");
        if (!authHeader || !authHeader.startsWith("Bearer ")) {
            return next(); // 沒有令牌，繼續執行
        }
        const token = authHeader.substring(7);
        if (!token) {
            return next(); // 空令牌，繼續執行
        }
        // 驗證令牌
        const decoded = jsonwebtoken_1.default.verify(token, environment_1.config.jwt.secret);
        // 查找用戶
        const user = await User_1.User.findById(decoded.id);
        if (user && user.isActive) {
            req.user = user;
            logger_1.logger.debug("可選認證成功", { userId: user._id, email: user.email });
        }
        next();
    }
    catch (error) {
        // 可選認證失敗時不拋出錯誤，只記錄日誌
        logger_1.logger.debug("可選認證失敗", {
            error: error instanceof Error ? error.message : error,
        });
        next();
    }
};
exports.optionalAuthenticate = optionalAuthenticate;
/**
 * 角色授權中介軟體
 */
const authorize = (...roles) => {
    return (req, res, next) => {
        if (!req.user) {
            next(new errors_1.AuthenticationError("請先登入"));
            return;
        }
        if (!roles.includes(req.user.role)) {
            logger_1.logger.warn("用戶權限不足", {
                userId: req.user._id,
                userRole: req.user.role,
                requiredRoles: roles,
            });
            next(new errors_1.AuthenticationError("權限不足"));
            return;
        }
        logger_1.logger.debug("用戶授權成功", {
            userId: req.user._id,
            userRole: req.user.role,
            requiredRoles: roles,
        });
        next();
    };
};
exports.authorize = authorize;
/**
 * 驗證用戶是否為資源擁有者或管理員
 */
const authorizeOwnerOrAdmin = (getUserId) => {
    return (req, res, next) => {
        if (!req.user) {
            next(new errors_1.AuthenticationError("請先登入"));
            return;
        }
        const resourceUserId = getUserId(req);
        const currentUserId = req.user._id.toString();
        // 檢查是否為資源擁有者或管理員
        if (currentUserId !== resourceUserId &&
            req.user.role !== "admin") {
            logger_1.logger.warn("用戶嘗試存取非自己的資源", {
                currentUserId,
                resourceUserId,
                userRole: req.user.role,
            });
            next(new errors_1.AuthenticationError("只能存取自己的資源"));
            return;
        }
        logger_1.logger.debug("資源存取授權成功", {
            currentUserId,
            resourceUserId,
            userRole: req.user.role,
        });
        next();
    };
};
exports.authorizeOwnerOrAdmin = authorizeOwnerOrAdmin;
/**
 * 驗證電子郵件是否已驗證
 */
const requireEmailVerification = (req, res, next) => {
    if (!req.user) {
        next(new errors_1.AuthenticationError("請先登入"));
        return;
    }
    if (!req.user.isEmailVerified) {
        logger_1.logger.warn("用戶嘗試存取需要電子郵件驗證的資源", {
            userId: req.user._id,
            email: req.user.email,
        });
        next(new errors_1.ValidationError("請先驗證您的電子郵件地址"));
        return;
    }
    next();
};
exports.requireEmailVerification = requireEmailVerification;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,