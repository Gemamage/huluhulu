489b9c7d9afd332c11793b1c3fb4bf2e
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// 模擬外部服務
jest.mock('../src/services/emailService', () => ({
    EmailService: {
        sendVerificationEmail: jest.fn().mockResolvedValue(true),
        sendPasswordResetEmail: jest.fn().mockResolvedValue(true),
        sendWelcomeEmail: jest.fn().mockResolvedValue(true),
        sendNotificationEmail: jest.fn().mockResolvedValue(true)
    }
}));
// cloudinaryService not implemented yet
jest.mock('../src/services/aiService', () => ({
    analyzeImage: jest.fn().mockResolvedValue({
        breed: 'Golden Retriever',
        confidence: 0.95,
        features: {
            color: 'golden',
            size: 'large',
            age: 'adult'
        }
    }),
    findSimilarPets: jest.fn().mockResolvedValue([]),
    generateSearchSuggestions: jest.fn().mockResolvedValue(['golden retriever', 'labrador'])
}));
const mongodb_memory_server_1 = require("mongodb-memory-server");
const mongoose_1 = __importDefault(require("mongoose"));
let mongod;
// 測試前設置
beforeAll(async () => {
    // 啟動內存中的 MongoDB 實例
    mongod = await mongodb_memory_server_1.MongoMemoryServer.create();
    const uri = mongod.getUri();
    // 連接到測試資料庫
    await mongoose_1.default.connect(uri);
});
// 每個測試後清理
afterEach(async () => {
    const collections = mongoose_1.default.connection.collections;
    for (const key in collections) {
        const collection = collections[key];
        await collection.deleteMany({});
    }
});
// 測試後清理
afterAll(async () => {
    await mongoose_1.default.connection.dropDatabase();
    await mongoose_1.default.connection.close();
    await mongod.stop();
});
// 設置測試環境變數
process.env.NODE_ENV = 'test';
process.env.MONGODB_URI = 'mongodb://localhost:27017/pet-finder-test';
process.env.JWT_SECRET = 'test-jwt-secret-key-with-minimum-32-characters-length';
process.env.EMAIL_FROM = 'test@example.com';
process.env.FRONTEND_URL = 'http://localhost:3000';
process.env.CLOUDINARY_CLOUD_NAME = 'test-cloud';
process.env.CLOUDINARY_API_KEY = 'test-api-key';
process.env.CLOUDINARY_API_SECRET = 'test-api-secret';
process.env.SMTP_HOST = 'smtp.test.com';
process.env.SMTP_PORT = '587';
process.env.SMTP_USER = 'test@example.com';
process.env.SMTP_PASS = 'test-password';
process.env.OPENAI_API_KEY = 'test-openai-key';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxVc2VyXFxEZXNrdG9wXFx0cmFlcHJvamVjdFxcdGVzdDJcXHBldC1maW5kZXItYXBwXFxiYWNrZW5kXFx0ZXN0XFxzZXR1cC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQWdEQSxTQUFTO0FBQ1QsSUFBSSxDQUFDLElBQUksQ0FBQyw4QkFBOEIsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQy9DLFlBQVksRUFBRTtRQUNaLHFCQUFxQixFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUM7UUFDeEQsc0JBQXNCLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQztRQUN6RCxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDO1FBQ25ELHFCQUFxQixFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUM7S0FDekQ7Q0FDRixDQUFDLENBQUMsQ0FBQztBQUVKLHdDQUF3QztBQUV4QyxJQUFJLENBQUMsSUFBSSxDQUFDLDJCQUEyQixFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDNUMsWUFBWSxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztRQUN4QyxLQUFLLEVBQUUsa0JBQWtCO1FBQ3pCLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLFFBQVEsRUFBRTtZQUNSLEtBQUssRUFBRSxRQUFRO1lBQ2YsSUFBSSxFQUFFLE9BQU87WUFDYixHQUFHLEVBQUUsT0FBTztTQUNiO0tBQ0YsQ0FBQztJQUNGLGVBQWUsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsaUJBQWlCLENBQUMsRUFBRSxDQUFDO0lBQ2hELHlCQUF5QixFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLGtCQUFrQixFQUFFLFVBQVUsQ0FBQyxDQUFDO0NBQ3pGLENBQUMsQ0FBQyxDQUFDO0FBeEVKLGlFQUEwRDtBQUMxRCx3REFBZ0M7QUFHaEMsSUFBSSxNQUF5QixDQUFDO0FBRTlCLFFBQVE7QUFDUixTQUFTLENBQUMsS0FBSyxJQUFJLEVBQUU7SUFDbkIsb0JBQW9CO0lBQ3BCLE1BQU0sR0FBRyxNQUFNLHlDQUFpQixDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQzFDLE1BQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUU1QixXQUFXO0lBQ1gsTUFBTSxrQkFBUSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUM5QixDQUFDLENBQUMsQ0FBQztBQUVILFVBQVU7QUFDVixTQUFTLENBQUMsS0FBSyxJQUFJLEVBQUU7SUFDbkIsTUFBTSxXQUFXLEdBQUcsa0JBQVEsQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDO0lBRXBELEtBQUssTUFBTSxHQUFHLElBQUksV0FBVyxFQUFFLENBQUM7UUFDOUIsTUFBTSxVQUFVLEdBQUcsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3BDLE1BQU0sVUFBVSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNsQyxDQUFDO0FBQ0gsQ0FBQyxDQUFDLENBQUM7QUFFSCxRQUFRO0FBQ1IsUUFBUSxDQUFDLEtBQUssSUFBSSxFQUFFO0lBQ2xCLE1BQU0sa0JBQVEsQ0FBQyxVQUFVLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDekMsTUFBTSxrQkFBUSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNsQyxNQUFNLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUN0QixDQUFDLENBQUMsQ0FBQztBQUVILFdBQVc7QUFDWCxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUM7QUFDOUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEdBQUcsMkNBQTJDLENBQUM7QUFDdEUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEdBQUcsdURBQXVELENBQUM7QUFDakYsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEdBQUcsa0JBQWtCLENBQUM7QUFDNUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEdBQUcsdUJBQXVCLENBQUM7QUFDbkQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsR0FBRyxZQUFZLENBQUM7QUFDakQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsR0FBRyxjQUFjLENBQUM7QUFDaEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsR0FBRyxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBRyxlQUFlLENBQUM7QUFDeEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0FBQzlCLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxHQUFHLGtCQUFrQixDQUFDO0FBQzNDLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxHQUFHLGVBQWUsQ0FBQztBQUN4QyxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsR0FBRyxpQkFBaUIsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXFVzZXJcXERlc2t0b3BcXHRyYWVwcm9qZWN0XFx0ZXN0MlxccGV0LWZpbmRlci1hcHBcXGJhY2tlbmRcXHRlc3RcXHNldHVwLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vbmdvTWVtb3J5U2VydmVyIH0gZnJvbSAnbW9uZ29kYi1tZW1vcnktc2VydmVyJztcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQgeyBjb25maWcgfSBmcm9tICcuLi9zcmMvY29uZmlnL2Vudmlyb25tZW50JztcblxubGV0IG1vbmdvZDogTW9uZ29NZW1vcnlTZXJ2ZXI7XG5cbi8vIOa4rOippuWJjeioree9rlxuYmVmb3JlQWxsKGFzeW5jICgpID0+IHtcbiAgLy8g5ZWf5YuV5YWn5a2Y5Lit55qEIE1vbmdvREIg5a+m5L6LXG4gIG1vbmdvZCA9IGF3YWl0IE1vbmdvTWVtb3J5U2VydmVyLmNyZWF0ZSgpO1xuICBjb25zdCB1cmkgPSBtb25nb2QuZ2V0VXJpKCk7XG4gIFxuICAvLyDpgKPmjqXliLDmuKzoqabos4fmlpnluqtcbiAgYXdhaXQgbW9uZ29vc2UuY29ubmVjdCh1cmkpO1xufSk7XG5cbi8vIOavj+WAi+a4rOippuW+jOa4heeQhlxuYWZ0ZXJFYWNoKGFzeW5jICgpID0+IHtcbiAgY29uc3QgY29sbGVjdGlvbnMgPSBtb25nb29zZS5jb25uZWN0aW9uLmNvbGxlY3Rpb25zO1xuICBcbiAgZm9yIChjb25zdCBrZXkgaW4gY29sbGVjdGlvbnMpIHtcbiAgICBjb25zdCBjb2xsZWN0aW9uID0gY29sbGVjdGlvbnNba2V5XTtcbiAgICBhd2FpdCBjb2xsZWN0aW9uLmRlbGV0ZU1hbnkoe30pO1xuICB9XG59KTtcblxuLy8g5ris6Kmm5b6M5riF55CGXG5hZnRlckFsbChhc3luYyAoKSA9PiB7XG4gIGF3YWl0IG1vbmdvb3NlLmNvbm5lY3Rpb24uZHJvcERhdGFiYXNlKCk7XG4gIGF3YWl0IG1vbmdvb3NlLmNvbm5lY3Rpb24uY2xvc2UoKTtcbiAgYXdhaXQgbW9uZ29kLnN0b3AoKTtcbn0pO1xuXG4vLyDoqK3nva7muKzoqabnkrDlooPorormlbhcbnByb2Nlc3MuZW52Lk5PREVfRU5WID0gJ3Rlc3QnO1xucHJvY2Vzcy5lbnYuTU9OR09EQl9VUkkgPSAnbW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNy9wZXQtZmluZGVyLXRlc3QnO1xucHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCA9ICd0ZXN0LWp3dC1zZWNyZXQta2V5LXdpdGgtbWluaW11bS0zMi1jaGFyYWN0ZXJzLWxlbmd0aCc7XG5wcm9jZXNzLmVudi5FTUFJTF9GUk9NID0gJ3Rlc3RAZXhhbXBsZS5jb20nO1xucHJvY2Vzcy5lbnYuRlJPTlRFTkRfVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCc7XG5wcm9jZXNzLmVudi5DTE9VRElOQVJZX0NMT1VEX05BTUUgPSAndGVzdC1jbG91ZCc7XG5wcm9jZXNzLmVudi5DTE9VRElOQVJZX0FQSV9LRVkgPSAndGVzdC1hcGkta2V5JztcbnByb2Nlc3MuZW52LkNMT1VESU5BUllfQVBJX1NFQ1JFVCA9ICd0ZXN0LWFwaS1zZWNyZXQnO1xucHJvY2Vzcy5lbnYuU01UUF9IT1NUID0gJ3NtdHAudGVzdC5jb20nO1xucHJvY2Vzcy5lbnYuU01UUF9QT1JUID0gJzU4Nyc7XG5wcm9jZXNzLmVudi5TTVRQX1VTRVIgPSAndGVzdEBleGFtcGxlLmNvbSc7XG5wcm9jZXNzLmVudi5TTVRQX1BBU1MgPSAndGVzdC1wYXNzd29yZCc7XG5wcm9jZXNzLmVudi5PUEVOQUlfQVBJX0tFWSA9ICd0ZXN0LW9wZW5haS1rZXknO1xuXG4vLyDmqKHmk6zlpJbpg6jmnI3li5lcbmplc3QubW9jaygnLi4vc3JjL3NlcnZpY2VzL2VtYWlsU2VydmljZScsICgpID0+ICh7XG4gIEVtYWlsU2VydmljZToge1xuICAgIHNlbmRWZXJpZmljYXRpb25FbWFpbDogamVzdC5mbigpLm1vY2tSZXNvbHZlZFZhbHVlKHRydWUpLFxuICAgIHNlbmRQYXNzd29yZFJlc2V0RW1haWw6IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZSh0cnVlKSxcbiAgICBzZW5kV2VsY29tZUVtYWlsOiBqZXN0LmZuKCkubW9ja1Jlc29sdmVkVmFsdWUodHJ1ZSksXG4gICAgc2VuZE5vdGlmaWNhdGlvbkVtYWlsOiBqZXN0LmZuKCkubW9ja1Jlc29sdmVkVmFsdWUodHJ1ZSlcbiAgfVxufSkpO1xuXG4vLyBjbG91ZGluYXJ5U2VydmljZSBub3QgaW1wbGVtZW50ZWQgeWV0XG5cbmplc3QubW9jaygnLi4vc3JjL3NlcnZpY2VzL2FpU2VydmljZScsICgpID0+ICh7XG4gIGFuYWx5emVJbWFnZTogamVzdC5mbigpLm1vY2tSZXNvbHZlZFZhbHVlKHtcbiAgICBicmVlZDogJ0dvbGRlbiBSZXRyaWV2ZXInLFxuICAgIGNvbmZpZGVuY2U6IDAuOTUsXG4gICAgZmVhdHVyZXM6IHtcbiAgICAgIGNvbG9yOiAnZ29sZGVuJyxcbiAgICAgIHNpemU6ICdsYXJnZScsXG4gICAgICBhZ2U6ICdhZHVsdCdcbiAgICB9XG4gIH0pLFxuICBmaW5kU2ltaWxhclBldHM6IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZShbXSksXG4gIGdlbmVyYXRlU2VhcmNoU3VnZ2VzdGlvbnM6IGplc3QuZm4oKS5tb2NrUmVzb2x2ZWRWYWx1ZShbJ2dvbGRlbiByZXRyaWV2ZXInLCAnbGFicmFkb3InXSlcbn0pKTsiXSwidmVyc2lvbiI6M30=