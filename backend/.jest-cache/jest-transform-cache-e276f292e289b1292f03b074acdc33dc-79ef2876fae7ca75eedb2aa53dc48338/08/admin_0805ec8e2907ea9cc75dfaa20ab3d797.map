{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\admin.ts","mappings":";;;AAAA,qCAAoD;AACpD,yDAAkE;AAClE,4CAAyC;AACzC,4CAA2C;AAC3C,yDAAsD;AAEtD,6CAAkD;AAClD,6CAM4B;AAG5B,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AA+UL,6BAAW;AA9U9B,MAAM,WAAW,GAAG,IAAI,yBAAW,EAAE,CAAC;AAEtC,6BAA6B;AAC7B,MAAM,CAAC,GAAG,CAAC,mBAAY,CAAC,CAAC;AACzB,MAAM,CAAC,GAAG,CAAC,2BAAoB,CAAC,CAAC;AAEjC,mBAAmB;AACnB,MAAM,CAAC,GAAG,CACR,QAAQ,EACR,IAAA,wBAAiB,EAAC,iBAAU,CAAC,SAAS,CAAC,EACvC;IACE,IAAA,yBAAK,EAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;IAC1C,IAAA,yBAAK,EAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IACrD,IAAA,yBAAK,EAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE;IACrC,IAAA,yBAAK,EAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;IAC7D,IAAA,yBAAK,EAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE;IACxC,IAAA,yBAAK,EAAC,iBAAiB,CAAC,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE;CAChD,EACD,KAAK,EAAE,GAAY,EAAE,GAAa,EAAiB,EAAE;IACnD,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,IAAA,oCAAgB,EAAC,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC;YACtB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnB,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,UAAU;gBACnB,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE;aACvB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,MAAM,EACJ,IAAI,GAAG,CAAC,EACR,KAAK,GAAG,EAAE,EACV,MAAM,EACN,IAAI,EACJ,QAAQ,EACR,eAAe,GAChB,GAAG,GAAG,CAAC,KAAK,CAAC;QAEd,wBAAwB;QACxB,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,gBAAgB,CAAC;YAChD,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC;YAClB,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC;YACpB,MAAM,EAAE,MAAgB;YACxB,IAAI,EAAE,IAAsC;YAC5C,QAAQ,EAAE,QAAQ,KAAK,MAAM;YAC7B,eAAe,EAAE,eAAe,KAAK,MAAM;SAC5C,CAAC,CAAC;QAEH,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC;QAE5C,eAAM,CAAC,IAAI,CAAC,UAAU,EAAE;YACtB,OAAO,EAAG,GAAG,CAAC,IAAc,CAAC,GAAG;YAChC,IAAI;YACJ,KAAK;YACL,KAAK;SACN,CAAC,CAAC;QAEH,GAAG,CAAC,IAAI,CAAC;YACP,OAAO,EAAE,IAAI;YACb,IAAI,EAAE;gBACJ,KAAK;gBACL,UAAU,EAAE;oBACV,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC;oBACrB,KAAK,EAAE,UAAU;oBACjB,KAAK,EAAE,KAAK,CAAC,MAAM;oBACnB,UAAU,EAAE,KAAK;iBAClB;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,eAAM,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;QACpC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,gBAAgB;SAC1B,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CACF,CAAC;AAEF,qBAAqB;AACrB,MAAM,CAAC,GAAG,CACR,gBAAgB,EAChB,IAAA,wBAAiB,EAAC,iBAAU,CAAC,SAAS,CAAC,EACvC,KAAK,EAAE,GAAY,EAAE,GAAa,EAAiB,EAAE;IACnD,IAAI,CAAC;QACH,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAE9B,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnB,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAExD,eAAM,CAAC,IAAI,CAAC,UAAU,EAAE;YACtB,OAAO,EAAG,GAAG,CAAC,IAAc,CAAC,GAAG;YAChC,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;QAEH,GAAG,CAAC,IAAI,CAAC;YACP,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,EAAE,IAAI,EAAE;SACf,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,eAAM,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;QACpC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,gBAAgB;SAC1B,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CACF,CAAC;AAEF,mBAAmB;AACnB,MAAM,CAAC,GAAG,CACR,gBAAgB,EAChB,IAAA,wBAAiB,EAAC,iBAAU,CAAC,UAAU,CAAC,EACxC;IACE,IAAA,wBAAI,EAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;IAC5D,IAAA,wBAAI,EAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC;IAC/C,IAAA,wBAAI,EAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;IAC5D,IAAA,wBAAI,EAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE;CACxC,EACD,KAAK,EAAE,GAAY,EAAE,GAAa,EAAiB,EAAE;IACnD,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,IAAA,oCAAgB,EAAC,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC;YACtB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnB,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,UAAU;gBACnB,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE;aACvB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAC9B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QACjD,MAAM,SAAS,GAAG,GAAG,CAAC,IAAa,CAAC;QAEpC,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnB,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,wBAAwB;QACvB,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,eAAe,CACnD,MAAM,EACN,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,EAC/B,SAAS,CACV,CAAC;QAEH,GAAG,CAAC,IAAI,CAAC;YACP,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,UAAU;YACnB,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;SAC5B,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,eAAM,CAAC,KAAK,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;QAEvC,IAAI,KAAK,YAAY,iBAAQ,EAAE,CAAC;YAC9B,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;gBAChC,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,KAAK,CAAC,OAAO;aACvB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,gBAAgB;SAC1B,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CACF,CAAC;AAEF,iBAAiB;AACjB,MAAM,CAAC,MAAM,CACX,gBAAgB,EAChB,IAAA,wBAAiB,EAAC,iBAAU,CAAC,WAAW,CAAC,EACzC,KAAK,EAAE,GAAY,EAAE,GAAa,EAAiB,EAAE;IACnD,IAAI,CAAC;QACH,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAC9B,MAAM,SAAS,GAAG,GAAG,CAAC,IAAa,CAAC;QAEpC,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnB,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,sBAAsB;QACtB,MAAM,WAAW,CAAC,eAAe,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAErD,GAAG,CAAC,IAAI,CAAC;YACP,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,QAAQ;SAClB,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,eAAM,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;QACrC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,cAAc;SACxB,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CACF,CAAC;AAEF,mBAAmB;AACnB,MAAM,CAAC,IAAI,CACT,+BAA+B,EAC/B,IAAA,wBAAiB,EAAC,iBAAU,CAAC,UAAU,CAAC,EACxC,KAAK,EAAE,GAAY,EAAE,GAAa,EAAiB,EAAE;IACnD,IAAI,CAAC;QACH,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAC9B,MAAM,SAAS,GAAG,GAAG,CAAC,IAAa,CAAC;QAEpC,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnB,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,wBAAwB;QACxB,MAAM,YAAY,GAAG,MAAM,WAAW,CAAC,sBAAsB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAEjF,6BAA6B;QAC7B,4FAA4F;QAE5F,GAAG,CAAC,IAAI,CAAC;YACP,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,qBAAqB;YAC9B,IAAI,EAAE;gBACJ,YAAY,EAAE,eAAe;aAC9B;SACF,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,eAAM,CAAC,KAAK,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;QACvC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,cAAc;SACxB,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CACF,CAAC;AAEF,iBAAiB;AACjB,MAAM,CAAC,GAAG,CACR,QAAQ,EACR,IAAA,wBAAiB,EAAC,iBAAU,CAAC,cAAc,CAAC,EAC5C,KAAK,EAAE,GAAY,EAAE,GAAa,EAAiB,EAAE;IACnD,IAAI,CAAC;QACH,wBAAwB;QACxB,MAAM,KAAK,GAAG,MAAM,WAAW,CAAC,mBAAmB,EAAE,CAAC;QAEtD,eAAM,CAAC,IAAI,CAAC,UAAU,EAAE;YACtB,OAAO,EAAG,GAAG,CAAC,IAAc,CAAC,GAAG;SACjC,CAAC,CAAC;QAEH,GAAG,CAAC,IAAI,CAAC;YACP,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,KAAK;SACZ,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,eAAM,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;QACpC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,gBAAgB;SAC1B,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CACF,CAAC;AAEF,qBAAqB;AACrB,MAAM,CAAC,IAAI,CACT,yBAAyB,EACzB,IAAA,wBAAiB,EAAC,iBAAU,CAAC,aAAa,CAAC,EAC3C,KAAK,EAAE,GAAY,EAAE,GAAa,EAAiB,EAAE;IACnD,IAAI,CAAC;QACH,0BAA0B;QAC1B,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,oBAAoB,EAAE,CAAC;QAExD,eAAM,CAAC,IAAI,CAAC,UAAU,EAAE;YACtB,OAAO,EAAG,GAAG,CAAC,IAAc,CAAC,GAAG;YAChC,YAAY,EAAE,MAAM,CAAC,YAAY;SAClC,CAAC,CAAC;QAEH,GAAG,CAAC,IAAI,CAAC;YACP,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,OAAO,MAAM,CAAC,YAAY,UAAU;YAC7C,IAAI,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,YAAY,EAAE;SAC5C,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,eAAM,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;QACpC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,YAAY;SACtB,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CACF,CAAC;AAEF,YAAY;AACZ,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,EAAE,GAAY,EAAE,GAAa,EAAiB,EAAE;IAC9E,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,GAAG,CAAC,IAAa,CAAC;QAC/B,MAAM,WAAW,GAAG,IAAA,yBAAkB,EAAC,IAAI,CAAC,CAAC;QAE7C,GAAG,CAAC,IAAI,CAAC;YACP,OAAO,EAAE,IAAI;YACb,IAAI,EAAE;gBACJ,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,WAAW;aACZ;SACF,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,eAAM,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;QACrC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,cAAc;SACxB,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\admin.ts"],"sourcesContent":["import { Router, Request, Response } from 'express';\nimport { body, query, validationResult } from 'express-validator';\nimport { logger } from '../utils/logger';\nimport { AppError } from '../utils/errors';\nimport { UserService } from '../services/userService';\nimport { VerificationService } from '../services/verificationService';\nimport { authenticate } from '../middleware/auth';\nimport {\n  requirePermission,\n  requireRole,\n  requireActiveAccount,\n  Permission,\n  getUserPermissions,\n} from '../middleware/rbac';\nimport { IUser } from '../models/User';\n\nconst router = Router();\nconst userService = new UserService();\n\n// 通用中介軟體 - 所有管理員路由都需要認證和活躍帳號\nrouter.use(authenticate);\nrouter.use(requireActiveAccount);\n\n// 獲取用戶列表（需要用戶讀取權限）\nrouter.get(\n  '/users',\n  requirePermission(Permission.USER_READ),\n  [\n    query('page').optional().isInt({ min: 1 }),\n    query('limit').optional().isInt({ min: 1, max: 100 }),\n    query('search').optional().isString(),\n    query('role').optional().isIn(['user', 'moderator', 'admin']),\n    query('isActive').optional().isBoolean(),\n    query('isEmailVerified').optional().isBoolean(),\n  ],\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const errors = validationResult(req);\n      if (!errors.isEmpty()) {\n        res.status(400).json({\n          success: false,\n          message: '查詢參數驗證失敗',\n          errors: errors.array(),\n        });\n        return;\n      }\n\n      const {\n        page = 1,\n        limit = 20,\n        search,\n        role,\n        isActive,\n        isEmailVerified,\n      } = req.query;\n\n      // 使用 UserService 獲取用戶列表\n      const result = await userService.getAdminUserList({\n        page: Number(page),\n        limit: Number(limit),\n        search: search as string,\n        role: role as 'user' | 'moderator' | 'admin',\n        isActive: isActive === 'true',\n        isEmailVerified: isEmailVerified === 'true',\n      });\n\n      const { users, total, totalPages } = result;\n\n      logger.info('獲取用戶列表成功', {\n        adminId: (req.user as IUser)._id,\n        page,\n        limit,\n        total,\n      });\n\n      res.json({\n        success: true,\n        data: {\n          users,\n          pagination: {\n            current: Number(page),\n            total: totalPages,\n            count: users.length,\n            totalCount: total,\n          },\n        },\n      });\n    } catch (error) {\n      logger.error('獲取用戶列表失敗', { error });\n      res.status(500).json({\n        success: false,\n        message: '獲取用戶列表失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 獲取單個用戶詳情（需要用戶讀取權限）\nrouter.get(\n  '/users/:userId',\n  requirePermission(Permission.USER_READ),\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const { userId } = req.params;\n      \n      if (!userId) {\n        res.status(400).json({\n          success: false,\n          message: '用戶 ID 為必填項目',\n        });\n        return;\n      }\n\n      const user = await userService.getAdminUserById(userId);\n\n      logger.info('獲取用戶詳情成功', {\n        adminId: (req.user as IUser)._id,\n        targetUserId: userId,\n      });\n\n      res.json({\n        success: true,\n        data: { user },\n      });\n    } catch (error) {\n      logger.error('獲取用戶詳情失敗', { error });\n      res.status(500).json({\n        success: false,\n        message: '獲取用戶詳情失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 更新用戶資料（需要用戶寫入權限）\nrouter.put(\n  '/users/:userId',\n  requirePermission(Permission.USER_WRITE),\n  [\n    body('name').optional().trim().isLength({ min: 1, max: 50 }),\n    body('phone').optional().isMobilePhone('zh-TW'),\n    body('role').optional().isIn(['user', 'moderator', 'admin']),\n    body('isActive').optional().isBoolean(),\n  ],\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const errors = validationResult(req);\n      if (!errors.isEmpty()) {\n        res.status(400).json({\n          success: false,\n          message: '輸入資料驗證失敗',\n          errors: errors.array(),\n        });\n        return;\n      }\n\n      const { userId } = req.params;\n      const { name, phone, role, isActive } = req.body;\n      const adminUser = req.user as IUser;\n      \n      if (!userId) {\n        res.status(400).json({\n          success: false,\n          message: '用戶 ID 為必填項目',\n        });\n        return;\n      }\n\n      // 使用 UserService 更新用戶資料\n       const updatedUser = await userService.adminUpdateUser(\n         userId,\n         { name, phone, role, isActive },\n         adminUser\n       );\n\n      res.json({\n        success: true,\n        message: '用戶資料更新成功',\n        data: { user: updatedUser },\n      });\n    } catch (error) {\n      logger.error('管理員更新用戶資料失敗', { error });\n      \n      if (error instanceof AppError) {\n        res.status(error.statusCode).json({\n          success: false,\n          message: error.message,\n        });\n        return;\n      }\n\n      res.status(500).json({\n        success: false,\n        message: '更新用戶資料失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 刪除用戶（需要用戶刪除權限）\nrouter.delete(\n  '/users/:userId',\n  requirePermission(Permission.USER_DELETE),\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const { userId } = req.params;\n      const adminUser = req.user as IUser;\n      \n      if (!userId) {\n        res.status(400).json({\n          success: false,\n          message: '用戶 ID 為必填項目',\n        });\n        return;\n      }\n\n      // 使用 UserService 刪除用戶\n      await userService.adminDeleteUser(userId, adminUser);\n\n      res.json({\n        success: true,\n        message: '用戶已被刪除',\n      });\n    } catch (error) {\n      logger.error('管理員刪除用戶失敗', { error });\n      res.status(500).json({\n        success: false,\n        message: '刪除用戶失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 重設用戶密碼（需要用戶管理權限）\nrouter.post(\n  '/users/:userId/reset-password',\n  requirePermission(Permission.USER_ADMIN),\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const { userId } = req.params;\n      const adminUser = req.user as IUser;\n      \n      if (!userId) {\n        res.status(400).json({\n          success: false,\n          message: '用戶 ID 為必填項目',\n        });\n        return;\n      }\n\n      // 使用 UserService 重設用戶密碼\n      const tempPassword = await userService.adminResetUserPassword(userId, adminUser);\n\n      // 發送新密碼郵件（這裡簡化處理，實際應該發送重設連結）\n      // await EmailService.sendPasswordResetEmail(targetUser.email, resetToken, targetUser.name);\n\n      res.json({\n        success: true,\n        message: '密碼重設成功，臨時密碼已發送到用戶郵箱',\n        data: {\n          tempPassword, // 實際環境中不應該返回密碼\n        },\n      });\n    } catch (error) {\n      logger.error('管理員重設用戶密碼失敗', { error });\n      res.status(500).json({\n        success: false,\n        message: '重設密碼失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 系統統計（需要分析讀取權限）\nrouter.get(\n  '/stats',\n  requirePermission(Permission.ANALYTICS_READ),\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      // 使用 UserService 獲取系統統計\n      const stats = await userService.getSystemStatistics();\n\n      logger.info('獲取系統統計成功', {\n        adminId: (req.user as IUser)._id,\n      });\n\n      res.json({\n        success: true,\n        data: stats,\n      });\n    } catch (error) {\n      logger.error('獲取系統統計失敗', { error });\n      res.status(500).json({\n        success: false,\n        message: '獲取統計數據失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 清理過期驗證令牌（需要系統配置權限）\nrouter.post(\n  '/cleanup/expired-tokens',\n  requirePermission(Permission.SYSTEM_CONFIG),\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      // 使用 UserService 清理過期驗證令牌\n      const result = await userService.cleanupExpiredTokens();\n\n      logger.info('清理過期令牌成功', {\n        adminId: (req.user as IUser)._id,\n        cleanedCount: result.deletedCount,\n      });\n\n      res.json({\n        success: true,\n        message: `已清理 ${result.deletedCount} 個過期驗證令牌`,\n        data: { cleanedCount: result.deletedCount },\n      });\n    } catch (error) {\n      logger.error('清理過期令牌失敗', { error });\n      res.status(500).json({\n        success: false,\n        message: '清理失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 獲取當前管理員權限\nrouter.get('/permissions', async (req: Request, res: Response): Promise<void> => {\n  try {\n    const user = req.user as IUser;\n    const permissions = getUserPermissions(user);\n\n    res.json({\n      success: true,\n      data: {\n        role: user.role,\n        permissions,\n      },\n    });\n  } catch (error) {\n    logger.error('獲取管理員權限失敗', { error });\n    res.status(500).json({\n      success: false,\n      message: '獲取權限失敗，請稍後再試',\n    });\n  }\n});\n\nexport { router as adminRoutes };"],"version":3}