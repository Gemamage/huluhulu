{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\middleware\\error-handler.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\middleware\\error-handler.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport { logger } from '../utils/logger';\nimport { config } from '../config/environment';\nimport {\n  AppError,\n  NotFoundError,\n  ServiceUnavailableError,\n  ErrorFactory,\n  formatErrorResponse,\n  formatErrorForLogging,\n  isOperationalError,\n  ErrorCode,\n  InternalServerError,\n} from '../utils/errors';\nimport { ZodError } from 'zod';\n\n// 錯誤處理中介軟體\nexport const errorHandler = (\n  error: Error,\n  req: Request,\n  res: Response,\n  next: NextFunction\n): void => {\n  let appError: AppError;\n\n  // 建立請求上下文\n  const requestContext = {\n    url: req.url,\n    method: req.method,\n    ip: req.ip,\n    userAgent: req.get('User-Agent'),\n    userId: (req as any).user?.id,\n    timestamp: new Date().toISOString(),\n  };\n\n  // 轉換不同類型的錯誤為 AppError\n  if (error instanceof AppError) {\n    appError = error;\n  } else if (error instanceof ZodError) {\n    appError = ErrorFactory.fromZodError(error);\n  } else if (error.name === 'ValidationError') {\n    // Mongoose 驗證錯誤\n    appError = ErrorFactory.fromMongooseError(error);\n  } else if (error.name === 'MongoServerError' && (error as any).code === 11000) {\n    // Mongoose 重複鍵錯誤\n    appError = ErrorFactory.fromMongooseError(error);\n  } else if (error.name === 'CastError') {\n    // Mongoose CastError\n    appError = ErrorFactory.fromMongooseError(error);\n  } else if (error.name === 'JsonWebTokenError') {\n    appError = ErrorFactory.createAuthenticationError('invalid_token');\n  } else if (error.name === 'TokenExpiredError') {\n    appError = ErrorFactory.createAuthenticationError('token_expired');\n  } else if (error.name === 'MulterError') {\n    // 檔案上傳錯誤\n    appError = new AppError(\n      '檔案上傳失敗: ' + error.message,\n      400,\n      ErrorCode.VALIDATION_ERROR\n    );\n  } else {\n    // 未知錯誤，轉換為內部伺服器錯誤\n    appError = new InternalServerError(\n      config.env === 'development' ? error.message : '內部伺服器錯誤'\n    );\n  }\n\n  // 記錄錯誤\n  const logData = formatErrorForLogging(appError, requestContext);\n  \n  if (isOperationalError(appError)) {\n    logger.warn('操作性錯誤:', logData);\n  } else {\n    logger.error('系統錯誤:', logData);\n  }\n\n  // 格式化錯誤響應\n  const errorResponse = formatErrorResponse(\n    appError,\n    config.env === 'development'\n  );\n\n  // 添加請求路徑和方法到響應中\n  errorResponse.error.path = req.path;\n  errorResponse.error.method = req.method;\n\n  // 發送錯誤回應\n  res.status(appError.statusCode).json(errorResponse);\n};\n\n// 非同步錯誤處理包裝器\nexport const asyncHandler = (\n  fn: (req: Request, res: Response, next: NextFunction) => Promise<any>\n) => {\n  return (req: Request, res: Response, next: NextFunction): void => {\n    Promise.resolve(fn(req, res, next)).catch(next);\n  };\n};\n\n// 404 錯誤處理\nexport const notFoundHandler = (req: Request, res: Response, next: NextFunction): void => {\n  const error = new NotFoundError(`路由 ${req.originalUrl} 不存在`);\n  next(error);\n};\n\nexport default errorHandler;"],"version":3}