{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\upload.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\upload.ts"],"sourcesContent":["import express from \"express\";\nimport multer from \"multer\";\nimport { authenticate } from \"../middleware/auth\";\nimport { CloudinaryService } from \"../services/cloudinaryService\";\nimport { AIService } from \"../services/aiService\";\nimport { AppError, ValidationError } from \"../utils/errors\";\nimport { logger } from \"../utils/logger\";\nimport { validateRequest } from \"../utils/validation\";\nimport { Request, Response, NextFunction } from \"express\";\nimport { IUser } from \"../models/User\";\nimport { asyncHandler } from \"../middleware/error-handler\";\nimport { presignedUrlSchema } from \"../schemas/upload\";\n\nconst router = express.Router();\n\n// Multer 配置 - 使用內存存儲\nconst upload = multer({\n  storage: multer.memoryStorage(),\n  limits: {\n    fileSize: 5 * 1024 * 1024, // 5MB\n    files: 5, // 最多 5 個文件\n  },\n  fileFilter: (req, file, cb) => {\n    // 檢查文件類型\n    const allowedMimes = [\n      \"image/jpeg\",\n      \"image/jpg\",\n      \"image/png\",\n      \"image/webp\",\n      \"image/gif\",\n    ];\n\n    if (allowedMimes.includes(file.mimetype)) {\n      cb(null, true);\n    } else {\n      cb(\n        new AppError(\n          \"不支援的文件類型，請上傳 JPG、PNG、WebP 或 GIF 格式的圖片\",\n          400,\n        ),\n      );\n    }\n  },\n});\n\n/**\n * @route POST /api/upload/single\n * @desc 上傳單個圖片文件\n * @access Private\n */\nrouter.post(\n  \"/single\",\n  authenticate,\n  upload.single(\"image\"),\n  async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      if (!req.file) {\n        throw new AppError(\"請選擇要上傳的圖片\", 400);\n      }\n\n      const { type = \"pet\" } = req.body;\n      const userId = (req.user as IUser)?._id?.toString();\n      if (!userId) {\n        throw new AppError(\"用戶身份驗證失敗\", 401);\n      }\n\n      // 驗證 type 參數\n      if (![\"avatar\", \"pet\"].includes(type)) {\n        throw new AppError(\"無效的上傳類型\", 400);\n      }\n\n      // 上傳到 Cloudinary\n      const result = await CloudinaryService.uploadFile(\n        req.file.buffer,\n        req.file.originalname,\n        req.file.mimetype,\n        userId,\n        type as \"avatar\" | \"pet\" | \"general\",\n      );\n\n      logger.info(\"文件上傳成功\", {\n        userId,\n        fileName: req.file.originalname,\n        type,\n        url: result.secureUrl,\n      });\n\n      res.status(201).json({\n        success: true,\n        message: \"文件上傳成功\",\n        data: {\n          url: result.secureUrl,\n          publicId: result.publicId,\n          type,\n          originalName: req.file.originalname,\n          size: req.file.size,\n          mimeType: req.file.mimetype,\n          width: result.width,\n          height: result.height,\n        },\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n);\n\n/**\n * @route POST /api/upload/multiple\n * @desc 上傳多個圖片文件\n * @access Private\n */\nrouter.post(\n  \"/multiple\",\n  authenticate,\n  upload.array(\"images\", 5),\n  async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const files = req.files as Express.Multer.File[];\n\n      if (!files || files.length === 0) {\n        throw new AppError(\"請選擇要上傳的圖片\", 400);\n      }\n\n      const { type = \"pet\" } = req.body;\n      const userId = (req.user as IUser)?._id?.toString();\n      if (!userId) {\n        throw new AppError(\"用戶身份驗證失敗\", 401);\n      }\n\n      // 驗證 type 參數\n      if (![\"avatar\", \"pet\"].includes(type)) {\n        throw new AppError(\"無效的上傳類型\", 400);\n      }\n\n      // 批量上傳到 Cloudinary\n      const uploadPromises = files.map((file) =>\n        CloudinaryService.uploadFile(\n          file.buffer,\n          file.originalname,\n          file.mimetype,\n          userId,\n          type as \"avatar\" | \"pet\" | \"general\",\n        ),\n      );\n\n      const results = await Promise.all(uploadPromises);\n\n      logger.info(\"批量文件上傳成功\", {\n        userId,\n        count: files.length,\n        type,\n      });\n\n      res.status(201).json({\n        success: true,\n        message: `成功上傳 ${files.length} 個文件`,\n        data: results.map((result, index) => {\n          const file = files[index];\n          if (!file) {\n            throw new AppError(\"文件索引錯誤\", 500);\n          }\n          return {\n            url: result.secureUrl,\n            publicId: result.publicId,\n            type,\n            originalName: file.originalname,\n            size: file.size,\n            mimeType: file.mimetype,\n            width: result.width,\n            height: result.height,\n          };\n        }),\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n);\n\n/**\n * @route POST /api/upload/avatar\n * @desc 上傳用戶頭像\n * @access Private\n */\nrouter.post(\n  \"/avatar\",\n  authenticate,\n  upload.single(\"avatar\"),\n  async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      if (!req.file) {\n        throw new AppError(\"請選擇要上傳的頭像\", 400);\n      }\n\n      const userId = (req.user as IUser)?._id?.toString();\n      if (!userId) {\n        throw new AppError(\"用戶身份驗證失敗\", 401);\n      }\n\n      // 上傳到 Cloudinary\n      const result = await CloudinaryService.uploadFile(\n        req.file.buffer,\n        req.file.originalname,\n        req.file.mimetype,\n        userId,\n        \"avatar\",\n      );\n\n      logger.info(\"頭像上傳成功\", {\n        userId,\n        fileName: req.file.originalname,\n        url: result.url,\n      });\n\n      res.status(201).json({\n        success: true,\n        message: \"頭像上傳成功\",\n        data: {\n          url: result.secureUrl,\n          publicId: result.publicId,\n          originalName: req.file.originalname,\n          size: req.file.size,\n          mimeType: req.file.mimetype,\n          width: result.width,\n          height: result.height,\n        },\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n);\n\n/**\n * @route DELETE /api/upload/:publicId\n * @desc 刪除上傳的文件\n * @access Private\n */\nrouter.delete(\n  \"/:publicId(*)\",\n  authenticate,\n  async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const { publicId } = req.params;\n\n      if (!publicId) {\n        throw new AppError(\"文件 publicId 不能為空\", 400);\n      }\n\n      // 檢查文件是否屬於當前用戶\n      const userId = (req.user as IUser)?._id?.toString();\n      if (!userId) {\n        throw new AppError(\"用戶身份驗證失敗\", 401);\n      }\n      if (!publicId.includes(userId)) {\n        throw new AppError(\"無權限刪除此文件\", 403);\n      }\n\n      await CloudinaryService.deleteFile(publicId);\n\n      logger.info(\"文件刪除成功\", {\n        userId,\n        publicId,\n      });\n\n      res.json({\n        success: true,\n        message: \"文件刪除成功\",\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n);\n\n/**\n * @route   POST /api/upload/analyze\n * @desc    AI 圖片分析\n * @access  Private\n */\nrouter.post(\n  \"/analyze\",\n  authenticate,\n  asyncHandler(async (req, res) => {\n    const { imageUrl } = req.body;\n\n    if (!imageUrl) {\n      throw new ValidationError(\"請提供圖片 URL\");\n    }\n\n    try {\n      // 使用 AI 服務進行圖像分析\n      const analysis = await AIService.analyzeImage(imageUrl);\n\n      logger.info(\"AI 圖片分析完成\", {\n        imageUrl,\n        userId: (req.user as IUser)._id,\n        confidence: analysis.confidence,\n      });\n\n      res.json({\n        success: true,\n        message: \"圖片分析完成\",\n        data: {\n          analysis,\n        },\n      });\n    } catch (error) {\n      logger.error(\"AI 圖片分析失敗\", { imageUrl, error });\n\n      // 如果 AI 分析失敗，返回基本分析結果\n      res.json({\n        success: true,\n        message: \"圖片分析完成（使用備用分析）\",\n        data: {\n          analysis: {\n            confidence: 0.5,\n            labels: [\"寵物\"],\n            colors: [\"未知\"],\n            features: [\"圖像已上傳\"],\n            petType: \"unknown\",\n            breed: \"未識別\",\n          },\n        },\n      });\n    }\n  }),\n);\n\n/**\n * @route   POST /api/upload/process-with-ai\n * @desc    上傳並自動進行 AI 分析\n * @access  Private\n */\nrouter.post(\n  \"/process-with-ai\",\n  authenticate,\n  upload.single(\"image\"),\n  asyncHandler(async (req, res) => {\n    if (!req.file) {\n      throw new AppError(\"請選擇要上傳的圖片\", 400);\n    }\n\n    const { type = \"pet\" } = req.body;\n    const userId = (req.user as IUser)!._id.toString();\n\n    try {\n      // 1. 圖像優化處理\n      const optimizedResult = await AIService.optimizeImage(req.file.buffer, {\n        maxWidth: 1200,\n        maxHeight: 1200,\n        quality: 85,\n      });\n\n      // 2. 上傳優化後的圖像\n      const uploadResult = await CloudinaryService.uploadFile(\n        optimizedResult.buffer,\n        req.file.originalname,\n        req.file.mimetype,\n        userId,\n        type as \"avatar\" | \"pet\" | \"general\",\n      );\n\n      // 3. AI 分析\n      let analysis = null;\n      try {\n        analysis = await AIService.analyzeImage(uploadResult.secureUrl);\n      } catch (aiError) {\n        logger.warn(\"AI 分析失敗，繼續處理\", { error: aiError });\n      }\n\n      logger.info(\"圖像上傳和 AI 分析完成\", {\n        userId,\n        fileName: req.file.originalname,\n        type,\n        url: uploadResult.secureUrl,\n        hasAnalysis: !!analysis,\n      });\n\n      res.status(201).json({\n        success: true,\n        message: \"圖像上傳和分析完成\",\n        data: {\n          upload: {\n            url: uploadResult.secureUrl,\n            publicId: uploadResult.publicId,\n            type,\n            originalName: req.file.originalname,\n            size: req.file.size,\n            mimeType: req.file.mimetype,\n            width: uploadResult.width,\n            height: uploadResult.height,\n          },\n          analysis,\n        },\n      });\n    } catch (error) {\n      logger.error(\"圖像處理失敗\", { error, userId });\n      throw error;\n    }\n  }),\n);\n\n/**\n * @route GET /api/upload/config\n * @desc 獲取上傳配置信息\n * @access Private\n */\nrouter.get(\n  \"/config\",\n  authenticate,\n  async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const userId = (req.user as IUser)!._id.toString();\n\n      logger.info(\"獲取上傳配置\", { userId });\n\n      res.json({\n        success: true,\n        message: \"上傳配置獲取成功\",\n        data: {\n          maxFileSize: 5 * 1024 * 1024, // 5MB\n          allowedTypes: [\"image/jpeg\", \"image/png\", \"image/webp\", \"image/gif\"],\n          uploadEndpoint: \"/api/upload/avatar\",\n          processEndpoint: \"/api/upload/process-with-ai\",\n          service: \"cloudinary\",\n        },\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n);\n\n/**\n * @route POST /api/upload/delete-multiple\n * @desc 批量刪除文件\n * @access Private\n */\nrouter.post(\n  \"/delete-multiple\",\n  authenticate,\n  async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const { keys } = req.body;\n\n      if (!Array.isArray(keys) || keys.length === 0) {\n        throw new AppError(\"請提供要刪除的文件列表\", 400);\n      }\n\n      const userId = (req.user as IUser)!._id.toString();\n\n      // 檢查所有文件是否屬於當前用戶\n      const invalidKeys = keys.filter((key) => !key.includes(userId));\n      if (invalidKeys.length > 0) {\n        throw new AppError(\"無權限刪除部分文件\", 403);\n      }\n\n      // 批量刪除 Cloudinary 文件\n      const deletePromises = keys.map((publicId) =>\n        CloudinaryService.deleteFile(publicId),\n      );\n      await Promise.all(deletePromises);\n\n      logger.info(\"批量文件刪除成功\", {\n        userId,\n        count: keys.length,\n      });\n\n      res.json({\n        success: true,\n        message: `成功刪除 ${keys.length} 個文件`,\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n);\n\n/**\n * @route GET /api/upload/download/:publicId\n * @desc 獲取 Cloudinary 圖片的優化 URL\n * @access Private\n */\nrouter.get(\n  \"/download/:publicId(*)\",\n  authenticate,\n  async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const { publicId } = req.params;\n\n      if (!publicId) {\n        throw new AppError(\"文件 publicId 不能為空\", 400);\n      }\n\n      // 檢查文件是否屬於當前用戶\n      const userId = (req.user as IUser)!._id.toString();\n      if (!publicId.includes(userId)) {\n        throw new AppError(\"無權限訪問此文件\", 403);\n      }\n\n      const optimizedUrl = CloudinaryService.getOptimizedUrl(publicId, {\n        width: 800,\n        height: 600,\n        crop: \"limit\",\n        quality: \"auto\",\n        format: \"auto\",\n      });\n\n      logger.info(\"優化 URL 生成成功\", {\n        userId,\n        publicId,\n      });\n\n      res.json({\n        success: true,\n        message: \"優化 URL 生成成功\",\n        data: {\n          downloadUrl: optimizedUrl,\n          publicId,\n        },\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n);\n\n/**\n * @route GET /api/upload/health\n * @desc Cloudinary 服務健康檢查\n * @access Private (Admin)\n */\nrouter.get(\n  \"/health\",\n  authenticate,\n  async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      // 只允許管理員訪問\n      if ((req.user as IUser)!.role !== \"admin\") {\n        throw new AppError(\"無權限訪問\", 403);\n      }\n\n      const isHealthy = await CloudinaryService.checkConnection();\n\n      res.json({\n        success: true,\n        message: \"Cloudinary 服務狀態檢查完成\",\n        data: {\n          status: isHealthy ? \"healthy\" : \"unhealthy\",\n          timestamp: new Date().toISOString(),\n        },\n      });\n    } catch (error) {\n      next(error);\n    }\n  },\n);\n\nexport default router;\n"],"version":3}