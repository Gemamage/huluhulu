{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\test\\routes\\matches.test.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\test\\routes\\matches.test.ts"],"sourcesContent":["import request from 'supertest';\nimport { app } from '../../src/server';\nimport { User, IUser } from '../../src/models/User';\nimport { Pet, IPet } from '../../src/models/Pet';\nimport { Match, IMatch } from '../../src/models/Match';\nimport { validUserData, validPetData } from '../utils/testData';\nimport jwt from 'jsonwebtoken';\n\ndescribe('Match Routes', () => {\n  let testUser1: IUser;\n  let testUser2: IUser;\n  let authToken1: string;\n  let authToken2: string;\n  let lostPet: IPet;\n  let foundPet: IPet;\n  let testMatch: IMatch;\n\n  beforeEach(async () => {\n    await User.deleteMany({});\n    await Pet.deleteMany({});\n    await Match.deleteMany({});\n    \n    testUser1 = await new User({\n      ...validUserData,\n      isEmailVerified: true\n    }).save();\n    \n    testUser2 = await new User({\n      ...validUserData,\n      email: 'user2@example.com',\n      isEmailVerified: true\n    }).save();\n    \n    authToken1 = jwt.sign(\n      { userId: testUser1._id },\n      process.env.JWT_SECRET || 'test-secret',\n      { expiresIn: '1h' }\n    );\n    \n    authToken2 = jwt.sign(\n      { userId: testUser2._id },\n      process.env.JWT_SECRET || 'test-secret',\n      { expiresIn: '1h' }\n    );\n    \n    lostPet = await new Pet({\n      ...validPetData,\n      name: 'Lost Dog',\n      status: 'lost',\n      owner: testUser1._id,\n      aiData: {\n        breed: 'Golden Retriever',\n        confidence: 0.9,\n        features: [0.1, 0.2, 0.3, 0.4, 0.5]\n      }\n    }).save();\n    \n    foundPet = await new Pet({\n      ...validPetData,\n      name: 'Found Dog',\n      status: 'found',\n      owner: testUser2._id,\n      aiData: {\n        breed: 'Golden Retriever',\n        confidence: 0.85,\n        features: [0.12, 0.18, 0.32, 0.38, 0.52]\n      }\n    }).save();\n    \n    testMatch = await new Match({\n      lostPet: lostPet._id,\n      foundPet: foundPet._id,\n      similarity: 0.85,\n      confidence: 'high',\n      status: 'pending'\n    }).save();\n  });\n\n  afterEach(async () => {\n    await User.deleteMany({});\n    await Pet.deleteMany({});\n    await Match.deleteMany({});\n  });\n\n  describe('POST /api/matches', () => {\n    it('should create match successfully', async () => {\n      await Match.deleteMany({}); // Clear existing match\n      \n      const matchData = {\n        lostPetId: lostPet._id.toString(),\n        foundPetId: foundPet._id.toString(),\n        similarity: 0.85,\n        confidence: 'high'\n      };\n      \n      const response = await request(app)\n        .post('/api/matches')\n        .set('Authorization', `Bearer ${authToken1}`)\n        .send(matchData);\n      \n      expect(response.status).toBe(201);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.lostPet).toBe(lostPet._id.toString());\n      expect(response.body.data.foundPet).toBe(foundPet._id.toString());\n      expect(response.body.data.similarity).toBe(0.85);\n      expect(response.body.data.status).toBe('pending');\n    });\n\n    it('should prevent duplicate matches', async () => {\n      const matchData = {\n        lostPetId: lostPet._id.toString(),\n        foundPetId: foundPet._id.toString(),\n        similarity: 0.85,\n        confidence: 'high'\n      };\n      \n      const response = await request(app)\n        .post('/api/matches')\n        .set('Authorization', `Bearer ${authToken1}`)\n        .send(matchData);\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n      expect(response.body.message).toContain('配對已存在');\n    });\n\n    it('should validate required fields', async () => {\n      const response = await request(app)\n        .post('/api/matches')\n        .set('Authorization', `Bearer ${authToken1}`)\n        .send({\n          lostPetId: lostPet._id.toString()\n          // Missing foundPetId\n        });\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should validate pet existence', async () => {\n      const nonExistentId = '507f1f77bcf86cd799439011';\n      \n      const response = await request(app)\n        .post('/api/matches')\n        .set('Authorization', `Bearer ${authToken1}`)\n        .send({\n          lostPetId: nonExistentId,\n          foundPetId: foundPet._id.toString(),\n          similarity: 0.85,\n          confidence: 'high'\n        });\n      \n      expect(response.status).toBe(404);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should validate pet statuses', async () => {\n      foundPet.status = 'lost'; // Both pets are lost\n      await foundPet.save();\n      \n      const response = await request(app)\n        .post('/api/matches')\n        .set('Authorization', `Bearer ${authToken1}`)\n        .send({\n          lostPetId: lostPet._id.toString(),\n          foundPetId: foundPet._id.toString(),\n          similarity: 0.85,\n          confidence: 'high'\n        });\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should require authentication', async () => {\n      const response = await request(app)\n        .post('/api/matches')\n        .send({\n          lostPetId: lostPet._id.toString(),\n          foundPetId: foundPet._id.toString(),\n          similarity: 0.85,\n          confidence: 'high'\n        });\n      \n      expect(response.status).toBe(401);\n    });\n  });\n\n  describe('GET /api/matches', () => {\n    beforeEach(async () => {\n      // Create additional matches\n      const anotherFoundPet = await new Pet({\n        ...validPetData,\n        name: 'Another Found Dog',\n        status: 'found',\n        owner: testUser2._id\n      }).save();\n      \n      await new Match({\n        lostPet: lostPet._id,\n        foundPet: anotherFoundPet._id,\n        similarity: 0.75,\n        confidence: 'medium',\n        status: 'confirmed'\n      }).save();\n    });\n\n    it('should get user matches', async () => {\n      const response = await request(app)\n        .get('/api/matches')\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.matches).toHaveLength(2);\n      expect(response.body.data.total).toBe(2);\n    });\n\n    it('should filter matches by status', async () => {\n      const response = await request(app)\n        .get('/api/matches?status=pending')\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.data.matches).toHaveLength(1);\n      expect(response.body.data.matches[0].status).toBe('pending');\n    });\n\n    it('should paginate matches', async () => {\n      const response = await request(app)\n        .get('/api/matches?page=1&limit=1')\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.data.matches).toHaveLength(1);\n      expect(response.body.data.totalPages).toBe(2);\n    });\n\n    it('should sort matches by creation date', async () => {\n      const response = await request(app)\n        .get('/api/matches?sortBy=createdAt&sortOrder=desc')\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(200);\n      const matches = response.body.data.matches;\n      \n      for (let i = 1; i < matches.length; i++) {\n        expect(new Date(matches[i-1].createdAt).getTime())\n          .toBeGreaterThanOrEqual(new Date(matches[i].createdAt).getTime());\n      }\n    });\n\n    it('should require authentication', async () => {\n      const response = await request(app)\n        .get('/api/matches');\n      \n      expect(response.status).toBe(401);\n    });\n  });\n\n  describe('GET /api/matches/:id', () => {\n    it('should get match by ID', async () => {\n      const response = await request(app)\n        .get(`/api/matches/${testMatch._id}`)\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data._id).toBe(testMatch._id.toString());\n      expect(response.body.data.lostPet).toBeDefined();\n      expect(response.body.data.foundPet).toBeDefined();\n    });\n\n    it('should not allow unauthorized access', async () => {\n      const unauthorizedUser = await new User({\n        ...validUserData,\n        email: 'unauthorized@example.com'\n      }).save();\n      \n      const unauthorizedToken = jwt.sign(\n        { userId: unauthorizedUser._id },\n        process.env.JWT_SECRET || 'test-secret',\n        { expiresIn: '1h' }\n      );\n      \n      const response = await request(app)\n        .get(`/api/matches/${testMatch._id}`)\n        .set('Authorization', `Bearer ${unauthorizedToken}`);\n      \n      expect(response.status).toBe(403);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should return 404 for non-existent match', async () => {\n      const nonExistentId = '507f1f77bcf86cd799439011';\n      \n      const response = await request(app)\n        .get(`/api/matches/${nonExistentId}`)\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(404);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should return 400 for invalid match ID', async () => {\n      const response = await request(app)\n        .get('/api/matches/invalid-id')\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n  });\n\n  describe('PUT /api/matches/:id/status', () => {\n    it('should confirm match successfully', async () => {\n      const response = await request(app)\n        .put(`/api/matches/${testMatch._id}/status`)\n        .set('Authorization', `Bearer ${authToken1}`)\n        .send({ status: 'confirmed' });\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.status).toBe('confirmed');\n      expect(response.body.data.confirmedAt).toBeDefined();\n      expect(response.body.data.confirmedBy).toBe(testUser1._id.toString());\n    });\n\n    it('should reject match successfully', async () => {\n      const response = await request(app)\n        .put(`/api/matches/${testMatch._id}/status`)\n        .set('Authorization', `Bearer ${authToken1}`)\n        .send({ status: 'rejected' });\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.status).toBe('rejected');\n      expect(response.body.data.rejectedAt).toBeDefined();\n    });\n\n    it('should allow both pet owners to update status', async () => {\n      const response = await request(app)\n        .put(`/api/matches/${testMatch._id}/status`)\n        .set('Authorization', `Bearer ${authToken2}`)\n        .send({ status: 'confirmed' });\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n    });\n\n    it('should not allow unauthorized users to update status', async () => {\n      const unauthorizedUser = await new User({\n        ...validUserData,\n        email: 'unauthorized@example.com'\n      }).save();\n      \n      const unauthorizedToken = jwt.sign(\n        { userId: unauthorizedUser._id },\n        process.env.JWT_SECRET || 'test-secret',\n        { expiresIn: '1h' }\n      );\n      \n      const response = await request(app)\n        .put(`/api/matches/${testMatch._id}/status`)\n        .set('Authorization', `Bearer ${unauthorizedToken}`)\n        .send({ status: 'confirmed' });\n      \n      expect(response.status).toBe(403);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should not allow updating already processed match', async () => {\n      testMatch.status = 'confirmed';\n      await testMatch.save();\n      \n      const response = await request(app)\n        .put(`/api/matches/${testMatch._id}/status`)\n        .set('Authorization', `Bearer ${authToken1}`)\n        .send({ status: 'rejected' });\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should validate status value', async () => {\n      const response = await request(app)\n        .put(`/api/matches/${testMatch._id}/status`)\n        .set('Authorization', `Bearer ${authToken1}`)\n        .send({ status: 'invalid-status' });\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should require status field', async () => {\n      const response = await request(app)\n        .put(`/api/matches/${testMatch._id}/status`)\n        .set('Authorization', `Bearer ${authToken1}`)\n        .send({});\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n  });\n\n  describe('POST /api/matches/find-similar', () => {\n    it('should find similar pets using image', async () => {\n      const response = await request(app)\n        .post('/api/matches/find-similar')\n        .set('Authorization', `Bearer ${authToken1}`)\n        .attach('image', Buffer.from('fake-image-data'), 'pet-image.jpg');\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.matches).toBeDefined();\n      expect(Array.isArray(response.body.data.matches)).toBe(true);\n    });\n\n    it('should accept similarity threshold parameter', async () => {\n      const response = await request(app)\n        .post('/api/matches/find-similar')\n        .set('Authorization', `Bearer ${authToken1}`)\n        .field('threshold', '0.8')\n        .attach('image', Buffer.from('fake-image-data'), 'pet-image.jpg');\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n    });\n\n    it('should validate image file', async () => {\n      const response = await request(app)\n        .post('/api/matches/find-similar')\n        .set('Authorization', `Bearer ${authToken1}`)\n        .attach('image', Buffer.from('fake-file-data'), 'document.txt');\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should require image file', async () => {\n      const response = await request(app)\n        .post('/api/matches/find-similar')\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should require authentication', async () => {\n      const response = await request(app)\n        .post('/api/matches/find-similar')\n        .attach('image', Buffer.from('fake-image-data'), 'pet-image.jpg');\n      \n      expect(response.status).toBe(401);\n    });\n  });\n\n  describe('GET /api/matches/potential/:petId', () => {\n    it('should find potential matches for pet', async () => {\n      const response = await request(app)\n        .get(`/api/matches/potential/${lostPet._id}`)\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.matches).toBeDefined();\n      expect(Array.isArray(response.body.data.matches)).toBe(true);\n    });\n\n    it('should accept filtering parameters', async () => {\n      const response = await request(app)\n        .get(`/api/matches/potential/${lostPet._id}?minSimilarity=0.8&maxDistance=50`)\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n    });\n\n    it('should only allow pet owner to find matches', async () => {\n      const response = await request(app)\n        .get(`/api/matches/potential/${lostPet._id}`)\n        .set('Authorization', `Bearer ${authToken2}`);\n      \n      expect(response.status).toBe(403);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should return 404 for non-existent pet', async () => {\n      const nonExistentId = '507f1f77bcf86cd799439011';\n      \n      const response = await request(app)\n        .get(`/api/matches/potential/${nonExistentId}`)\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(404);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should require authentication', async () => {\n      const response = await request(app)\n        .get(`/api/matches/potential/${lostPet._id}`);\n      \n      expect(response.status).toBe(401);\n    });\n  });\n\n  describe('GET /api/matches/statistics', () => {\n    beforeEach(async () => {\n      // Create additional matches for statistics\n      const anotherFoundPet = await new Pet({\n        ...validPetData,\n        name: 'Another Found Dog',\n        status: 'found',\n        owner: testUser2._id\n      }).save();\n      \n      await new Match({\n        lostPet: lostPet._id,\n        foundPet: anotherFoundPet._id,\n        similarity: 0.75,\n        confidence: 'medium',\n        status: 'confirmed'\n      }).save();\n      \n      await new Match({\n        lostPet: lostPet._id,\n        foundPet: anotherFoundPet._id,\n        similarity: 0.65,\n        confidence: 'low',\n        status: 'rejected'\n      }).save();\n    });\n\n    it('should get match statistics', async () => {\n      const response = await request(app)\n        .get('/api/matches/statistics')\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.total).toBeDefined();\n      expect(response.body.data.pending).toBeDefined();\n      expect(response.body.data.confirmed).toBeDefined();\n      expect(response.body.data.rejected).toBeDefined();\n      expect(response.body.data.averageSimilarity).toBeDefined();\n    });\n\n    it('should filter statistics by date range', async () => {\n      const yesterday = new Date(Date.now() - 24 * 60 * 60 * 1000);\n      const tomorrow = new Date(Date.now() + 24 * 60 * 60 * 1000);\n      \n      const response = await request(app)\n        .get('/api/matches/statistics')\n        .query({\n          startDate: yesterday.toISOString(),\n          endDate: tomorrow.toISOString()\n        })\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n    });\n\n    it('should require authentication', async () => {\n      const response = await request(app)\n        .get('/api/matches/statistics');\n      \n      expect(response.status).toBe(401);\n    });\n  });\n\n  describe('DELETE /api/matches/:id', () => {\n    it('should delete match successfully', async () => {\n      const response = await request(app)\n        .delete(`/api/matches/${testMatch._id}`)\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      \n      // Verify match is deleted\n      const deletedMatch = await Match.findById(testMatch._id);\n      expect(deletedMatch).toBeNull();\n    });\n\n    it('should only allow pet owners to delete match', async () => {\n      const unauthorizedUser = await new User({\n        ...validUserData,\n        email: 'unauthorized@example.com'\n      }).save();\n      \n      const unauthorizedToken = jwt.sign(\n        { userId: unauthorizedUser._id },\n        process.env.JWT_SECRET || 'test-secret',\n        { expiresIn: '1h' }\n      );\n      \n      const response = await request(app)\n        .delete(`/api/matches/${testMatch._id}`)\n        .set('Authorization', `Bearer ${unauthorizedToken}`);\n      \n      expect(response.status).toBe(403);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should return 404 for non-existent match', async () => {\n      const nonExistentId = '507f1f77bcf86cd799439011';\n      \n      const response = await request(app)\n        .delete(`/api/matches/${nonExistentId}`)\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(404);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should require authentication', async () => {\n      const response = await request(app)\n        .delete(`/api/matches/${testMatch._id}`);\n      \n      expect(response.status).toBe(401);\n    });\n  });\n\n  describe('Error Handling', () => {\n    it('should handle server errors gracefully', async () => {\n      // Mock a database error\n      jest.spyOn(Match, 'findById').mockRejectedValueOnce(new Error('Database error'));\n      \n      const response = await request(app)\n        .get(`/api/matches/${testMatch._id}`)\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(500);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should validate request parameters', async () => {\n      const response = await request(app)\n        .get('/api/matches?page=invalid')\n        .set('Authorization', `Bearer ${authToken1}`);\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n  });\n\n  describe('Rate Limiting', () => {\n    it('should apply rate limiting to match creation', async () => {\n      await Match.deleteMany({}); // Clear existing matches\n      \n      // Create multiple pets for testing\n      const pets = [];\n      for (let i = 0; i < 5; i++) {\n        const pet = await new Pet({\n          ...validPetData,\n          name: `Found Pet ${i}`,\n          status: 'found',\n          owner: testUser2._id\n        }).save();\n        pets.push(pet);\n      }\n      \n      // Make multiple rapid requests\n      const requests = pets.map(pet => \n        request(app)\n          .post('/api/matches')\n          .set('Authorization', `Bearer ${authToken1}`)\n          .send({\n            lostPetId: lostPet._id.toString(),\n            foundPetId: pet._id.toString(),\n            similarity: 0.85,\n            confidence: 'high'\n          })\n      );\n      \n      const responses = await Promise.all(requests);\n      \n      // Some requests should be rate limited\n      const rateLimitedResponses = responses.filter(res => res.status === 429);\n      expect(rateLimitedResponses.length).toBeGreaterThan(0);\n    });\n  });\n});"],"version":3}