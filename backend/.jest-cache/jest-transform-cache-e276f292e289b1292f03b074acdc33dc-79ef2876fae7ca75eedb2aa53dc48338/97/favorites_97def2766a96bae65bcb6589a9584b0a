452d701a7914101e0291219586630e9c
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const error_handler_1 = require("../../middleware/error-handler");
const errors_1 = require("../../utils/errors");
const logger_1 = require("../../utils/logger");
const cacheMiddleware_1 = require("../../middleware/cacheMiddleware");
const validation_1 = require("../../utils/validation");
const search_1 = require("../../schemas/search");
const Pet_1 = require("../../models/Pet");
const auth_1 = require("../../middleware/auth");
const rbac_1 = require("../../middleware/rbac");
const mongoose_1 = __importDefault(require("mongoose"));
const router = (0, express_1.Router)();
/**
 * @route   POST /api/pets/:id/favorite
 * @desc    收藏寵物
 * @access  Private
 */
router.post("/:id/favorite", auth_1.authenticate, rbac_1.requireActiveAccount, (0, cacheMiddleware_1.createCacheInvalidationMiddleware)({
    patterns: ["pets:*"], // 清除所有寵物相關快取
}), (0, error_handler_1.asyncHandler)(async (req, res) => {
    const { id } = req.params;
    const userId = req.user.id;
    if (!id || !mongoose_1.default.Types.ObjectId.isValid(id)) {
        throw new errors_1.ValidationError("請提供有效的寵物 ID");
    }
    logger_1.logger.info("收藏寵物請求", { petId: id, userId });
    // 查找寵物
    const pet = await Pet_1.Pet.findById(id);
    if (!pet) {
        throw new errors_1.NotFoundError("找不到指定的寵物資訊");
    }
    // 檢查是否已經收藏
    const userObjectId = new mongoose_1.default.Types.ObjectId(userId);
    const isAlreadyFavorited = pet.favoritedBy.some((favUserId) => favUserId.toString() === userId);
    if (isAlreadyFavorited) {
        return res.json({
            success: true,
            message: "您已經收藏過這隻寵物了",
            data: {
                isFavorited: true,
                favoriteCount: pet.favoritedBy.length,
            },
        });
    }
    // 添加到收藏列表
    await Pet_1.Pet.findByIdAndUpdate(id, { $addToSet: { favoritedBy: userObjectId } }, { new: true });
    res.json({
        success: true,
        message: "寵物已加入收藏",
        data: {
            isFavorited: true,
            favoriteCount: pet.favoritedBy.length + 1,
        },
    });
}));
/**
 * @route   DELETE /api/pets/:id/favorite
 * @desc    取消收藏寵物
 * @access  Private
 */
router.delete("/:id/favorite", auth_1.authenticate, rbac_1.requireActiveAccount, (0, cacheMiddleware_1.createCacheInvalidationMiddleware)({
    patterns: ["pets:*"], // 清除所有寵物相關快取
}), (0, error_handler_1.asyncHandler)(async (req, res) => {
    const { id } = req.params;
    const userId = req.user.id;
    if (!id || !mongoose_1.default.Types.ObjectId.isValid(id)) {
        throw new errors_1.ValidationError("請提供有效的寵物 ID");
    }
    logger_1.logger.info("取消收藏寵物請求", { petId: id, userId });
    // 查找寵物
    const pet = await Pet_1.Pet.findById(id);
    if (!pet) {
        throw new errors_1.NotFoundError("找不到指定的寵物資訊");
    }
    // 檢查是否已經收藏
    const userObjectId = new mongoose_1.default.Types.ObjectId(userId);
    const isAlreadyFavorited = pet.favoritedBy.some((favUserId) => favUserId.toString() === userId);
    if (!isAlreadyFavorited) {
        return res.json({
            success: true,
            message: "您尚未收藏這隻寵物",
            data: {
                isFavorited: false,
                favoriteCount: pet.favoritedBy.length,
            },
        });
    }
    // 從收藏列表移除
    await Pet_1.Pet.findByIdAndUpdate(id, { $pull: { favoritedBy: userObjectId } }, { new: true });
    res.json({
        success: true,
        message: "已取消收藏",
        data: {
            isFavorited: false,
            favoriteCount: Math.max(0, pet.favoritedBy.length - 1),
        },
    });
}));
/**
 * @route   GET /api/pets/favorites
 * @desc    獲取用戶收藏的寵物列表
 * @access  Private
 */
router.get("/favorites", auth_1.authenticate, rbac_1.requireActiveAccount, (0, validation_1.validateQuery)(search_1.petSearchSchema), (0, cacheMiddleware_1.createCacheMiddleware)({
    ttl: 5 * 60 * 1000, // 5分鐘快取
    keyGenerator: cacheMiddleware_1.petCacheKeyGenerator,
}), (0, error_handler_1.asyncHandler)(async (req, res) => {
    const userId = req.user.id;
    const { page = 1, limit = 12, status, type, sortBy = "createdAt", sortOrder = "desc", } = req.validatedQuery;
    logger_1.logger.info("獲取用戶收藏寵物列表請求", {
        userId,
        page,
        limit,
        status,
        type,
        sortBy,
        sortOrder,
    });
    // 建立查詢條件
    const query = {
        favoritedBy: new mongoose_1.default.Types.ObjectId(userId),
    };
    if (status) {
        query.status = status;
    }
    if (type) {
        query.type = type;
    }
    // 計算分頁
    const skip = (page - 1) * limit;
    // 排序設定
    const sortOptions = {};
    sortOptions[sortBy] = sortOrder === "desc" ? -1 : 1;
    // 執行查詢
    const [pets, totalItems] = await Promise.all([
        Pet_1.Pet.find(query)
            .sort(sortOptions)
            .skip(skip)
            .limit(limit)
            .populate("userId", "name email")
            .lean(),
        Pet_1.Pet.countDocuments(query),
    ]);
    // 計算分頁資訊
    const totalPages = Math.ceil(totalItems / limit);
    res.json({
        success: true,
        data: {
            pets,
            pagination: {
                currentPage: page,
                totalPages,
                totalItems,
                itemsPerPage: limit,
                hasNextPage: page < totalPages,
                hasPrevPage: page > 1,
            },
        },
    });
}));
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,