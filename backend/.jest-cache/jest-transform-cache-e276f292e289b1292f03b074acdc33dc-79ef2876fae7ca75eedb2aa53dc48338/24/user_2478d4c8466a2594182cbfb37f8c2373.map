{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\pets\\user.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\pets\\user.ts"],"sourcesContent":["import { Router } from \"express\";\nimport { asyncHandler } from \"../../middleware/error-handler\";\nimport { ValidationError } from \"../../utils/errors\";\nimport { logger } from \"../../utils/logger\";\nimport {\n  createCacheMiddleware,\n  petCacheKeyGenerator,\n} from \"../../middleware/cacheMiddleware\";\nimport { validateQuery } from \"../../utils/validation\";\nimport { petSearchSchema } from \"../../schemas/search\";\nimport { Pet } from \"../../models/Pet\";\nimport { authenticate } from \"../../middleware/auth\";\nimport { requireActiveAccount } from \"../../middleware/rbac\";\nimport mongoose from \"mongoose\";\n\nconst router = Router();\n\n/**\n * @route   GET /api/pets/my\n * @desc    獲取用戶自己的寵物協尋案例\n * @access  Private\n */\nrouter.get(\n  \"/my\",\n  authenticate,\n  requireActiveAccount,\n  validateQuery(petSearchSchema),\n  createCacheMiddleware({\n    ttl: 5 * 60 * 1000, // 5分鐘快取\n    keyGenerator: petCacheKeyGenerator,\n  }),\n  asyncHandler(async (req, res) => {\n    const userId = req.user!.id;\n    const {\n      page = 1,\n      limit = 12,\n      status,\n      type,\n      sortBy = \"createdAt\",\n      sortOrder = \"desc\",\n    } = req.validatedQuery;\n\n    logger.info(\"獲取用戶寵物案例請求\", {\n      userId,\n      page,\n      limit,\n      status,\n      type,\n      sortBy,\n      sortOrder,\n    });\n\n    // 建立查詢條件\n    const query: any = { userId: new mongoose.Types.ObjectId(userId) };\n\n    if (status) {\n      query.status = status;\n    }\n\n    if (type) {\n      query.type = type;\n    }\n\n    // 計算分頁\n    const skip = (page - 1) * limit;\n\n    // 排序設定\n    const sortOptions: any = {};\n    sortOptions[sortBy] = sortOrder === \"desc\" ? -1 : 1;\n\n    // 執行查詢\n    const [pets, totalItems] = await Promise.all([\n      Pet.find(query).sort(sortOptions).skip(skip).limit(limit).lean(),\n      Pet.countDocuments(query),\n    ]);\n\n    // 計算分頁資訊\n    const totalPages = Math.ceil(totalItems / limit);\n\n    res.json({\n      success: true,\n      data: {\n        pets,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalItems,\n          itemsPerPage: limit,\n          hasNextPage: page < totalPages,\n          hasPrevPage: page > 1,\n        },\n      },\n    });\n  }),\n);\n\n/**\n * @route   GET /api/pets/user/:userId\n * @desc    獲取特定用戶的寵物協尋案例\n * @access  Public\n */\nrouter.get(\n  \"/user/:userId\",\n  validateQuery(petSearchSchema),\n  createCacheMiddleware({\n    ttl: 10 * 60 * 1000, // 10分鐘快取\n    keyGenerator: petCacheKeyGenerator,\n  }),\n  asyncHandler(async (req, res) => {\n    const { userId } = req.params;\n    const {\n      page = 1,\n      limit = 12,\n      status,\n      type,\n      sortBy = \"createdAt\",\n      sortOrder = \"desc\",\n    } = req.validatedQuery;\n\n    if (!userId || !mongoose.Types.ObjectId.isValid(userId)) {\n      throw new ValidationError(\"請提供有效的用戶 ID\");\n    }\n\n    logger.info(\"獲取特定用戶寵物案例請求\", {\n      userId,\n      page,\n      limit,\n      status,\n      type,\n      sortBy,\n      sortOrder,\n    });\n\n    // 建立查詢條件\n    const query: any = { userId: new mongoose.Types.ObjectId(userId) };\n\n    if (status) {\n      query.status = status;\n    }\n\n    if (type) {\n      query.type = type;\n    }\n\n    // 計算分頁\n    const skip = (page - 1) * limit;\n\n    // 排序設定\n    const sortOptions: any = {};\n    sortOptions[sortBy] = sortOrder === \"desc\" ? -1 : 1;\n\n    // 執行查詢\n    const [pets, totalItems] = await Promise.all([\n      Pet.find(query)\n        .sort(sortOptions)\n        .skip(skip)\n        .limit(limit)\n        .populate(\"userId\", \"name\")\n        .lean(),\n      Pet.countDocuments(query),\n    ]);\n\n    // 計算分頁資訊\n    const totalPages = Math.ceil(totalItems / limit);\n\n    res.json({\n      success: true,\n      data: {\n        pets,\n        pagination: {\n          currentPage: page,\n          totalPages,\n          totalItems,\n          itemsPerPage: limit,\n          hasNextPage: page < totalPages,\n          hasPrevPage: page > 1,\n        },\n      },\n    });\n  }),\n);\n\nexport default router;\n"],"version":3}