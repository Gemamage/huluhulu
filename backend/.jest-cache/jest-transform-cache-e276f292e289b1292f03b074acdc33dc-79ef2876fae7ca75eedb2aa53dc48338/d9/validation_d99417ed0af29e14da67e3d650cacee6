3a54a43e37f68dc1511e37527a68be95
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateQuery = exports.validateRequest = exports.privacySettingsSchema = exports.petSearchSchema = exports.petUpdateSchema = exports.petSchema = exports.forgotPasswordSchema = exports.passwordResetSchema = exports.userUpdateSchema = exports.userLoginSchema = exports.userRegistrationSchema = exports.nameSchema = exports.phoneSchema = exports.passwordSchema = exports.emailSchema = void 0;
const zod_1 = require("zod");
// 基礎驗證規則
exports.emailSchema = zod_1.z.string().email('請提供有效的電子郵件地址');
exports.passwordSchema = zod_1.z.string().min(6, '密碼長度至少需要 6 個字符');
exports.phoneSchema = zod_1.z.string().regex(/^[+]?[0-9\s\-()]+$/, '請提供有效的電話號碼').optional();
exports.nameSchema = zod_1.z.string().trim().min(1, '姓名為必填項目').max(50, '姓名長度不能超過 50 個字符');
// 用戶相關驗證架構
exports.userRegistrationSchema = zod_1.z.object({
    email: exports.emailSchema,
    password: exports.passwordSchema,
    name: exports.nameSchema,
    phone: exports.phoneSchema,
});
exports.userLoginSchema = zod_1.z.object({
    email: exports.emailSchema,
    password: zod_1.z.string().min(1, '密碼為必填項目'),
});
exports.userUpdateSchema = zod_1.z.object({
    name: exports.nameSchema.optional(),
    phone: exports.phoneSchema,
    avatar: zod_1.z.string().url('請提供有效的圖片 URL').optional(),
}).partial();
exports.passwordResetSchema = zod_1.z.object({
    token: zod_1.z.string().min(1, '請提供重設令牌'),
    newPassword: exports.passwordSchema,
});
exports.forgotPasswordSchema = zod_1.z.object({
    email: exports.emailSchema,
});
// 寵物相關驗證架構
exports.petSchema = zod_1.z.object({
    name: zod_1.z.string().trim().min(1, '寵物名稱為必填項目').max(50, '寵物名稱不能超過 50 個字符'),
    type: zod_1.z.enum(['dog', 'cat', 'bird', 'rabbit', 'hamster', 'fish', 'reptile', 'other'], {
        errorMap: () => ({ message: '請選擇有效的寵物類型' }),
    }),
    breed: zod_1.z.string().trim().max(50, '品種名稱不能超過 50 個字符').optional(),
    gender: zod_1.z.enum(['male', 'female', 'unknown'], {
        errorMap: () => ({ message: '請選擇有效的性別' }),
    }),
    age: zod_1.z.number().int().min(0, '年齡不能為負數').max(30, '年齡不能超過 30 歲').optional(),
    color: zod_1.z.string().trim().max(50, '顏色描述不能超過 50 個字符').optional(),
    size: zod_1.z.enum(['small', 'medium', 'large'], {
        errorMap: () => ({ message: '請選擇有效的體型' }),
    }).optional(),
    status: zod_1.z.enum(['lost', 'found'], {
        errorMap: () => ({ message: '請選擇有效的狀態' }),
    }),
    description: zod_1.z.string().trim().max(1000, '描述不能超過 1000 個字符').optional(),
    lastSeenLocation: zod_1.z.string().trim().min(1, '最後出現地點為必填項目').max(200, '地點描述不能超過 200 個字符'),
    lastSeenDate: zod_1.z.string().datetime('請提供有效的日期時間格式'),
    contactInfo: zod_1.z.object({
        name: exports.nameSchema,
        phone: zod_1.z.string().regex(/^[+]?[0-9\s\-()]+$/, '請提供有效的電話號碼'),
        email: exports.emailSchema.optional(),
    }),
    images: zod_1.z.array(zod_1.z.string().url('請提供有效的圖片 URL')).max(5, '最多只能上傳 5 張圖片').optional(),
    reward: zod_1.z.number().min(0, '獎勵金額不能為負數').optional(),
    isUrgent: zod_1.z.boolean().default(false),
    microchipId: zod_1.z.string().trim().max(50, '晶片 ID 不能超過 50 個字符').optional(),
    vaccinated: zod_1.z.boolean().optional(),
    medicalConditions: zod_1.z.string().trim().max(500, '醫療狀況描述不能超過 500 個字符').optional(),
    specialMarks: zod_1.z.string().trim().max(500, '特殊標記描述不能超過 500 個字符').optional(),
    personality: zod_1.z.string().trim().max(500, '個性描述不能超過 500 個字符').optional(),
});
exports.petUpdateSchema = exports.petSchema.partial().omit({ status: true });
// 搜尋相關驗證架構
exports.petSearchSchema = zod_1.z.object({
    type: zod_1.z.enum(['dog', 'cat', 'bird', 'rabbit', 'hamster', 'fish', 'reptile', 'other']).optional(),
    status: zod_1.z.enum(['lost', 'found']).optional(),
    location: zod_1.z.string().trim().optional(),
    radius: zod_1.z.string().transform(val => val ? Number(val) : undefined).pipe(zod_1.z.number().min(1).max(100, '搜尋半徑不能超過 100 公里')).optional(),
    page: zod_1.z.string().transform(val => val ? Number(val) : 1).pipe(zod_1.z.number().int().min(1, '頁碼必須大於 0')).default('1'),
    limit: zod_1.z.string().transform(val => val ? Number(val) : 10).pipe(zod_1.z.number().int().min(1).max(50, '每頁數量不能超過 50')).default('10'),
    sortBy: zod_1.z.enum(['createdAt', 'lastSeenDate', 'reward']).default('createdAt'),
    sortOrder: zod_1.z.enum(['asc', 'desc']).default('desc'),
    search: zod_1.z.string().trim().optional(),
    breed: zod_1.z.string().trim().optional(),
});
// 隱私設定驗證架構
exports.privacySettingsSchema = zod_1.z.object({
    showEmail: zod_1.z.boolean().default(false),
    showPhone: zod_1.z.boolean().default(true),
    allowDirectContact: zod_1.z.boolean().default(true),
    showFullName: zod_1.z.boolean().default(false),
    profileVisibility: zod_1.z.enum(['public', 'registered', 'private']).default('registered'),
    emailNotifications: zod_1.z.object({
        newMatches: zod_1.z.boolean().default(true),
        messages: zod_1.z.boolean().default(true),
        updates: zod_1.z.boolean().default(false),
        marketing: zod_1.z.boolean().default(false),
    }).default({}),
    smsNotifications: zod_1.z.object({
        urgentAlerts: zod_1.z.boolean().default(true),
        matches: zod_1.z.boolean().default(false),
    }).default({}),
});
// 驗證中介軟體輔助函數
const validateRequest = (schema) => {
    return (req, res, next) => {
        try {
            const validatedData = schema.parse(req.body);
            req.validatedData = validatedData;
            next();
        }
        catch (error) {
            if (error instanceof zod_1.z.ZodError) {
                return res.status(400).json({
                    success: false,
                    message: '輸入資料驗證失敗',
                    errors: error.errors.map(err => ({
                        field: err.path.join('.'),
                        message: err.message,
                    })),
                });
            }
            next(error);
        }
    };
};
exports.validateRequest = validateRequest;
// 查詢參數驗證中介軟體
const validateQuery = (schema) => {
    return (req, res, next) => {
        try {
            const validatedQuery = schema.parse(req.query);
            req.validatedQuery = validatedQuery;
            next();
        }
        catch (error) {
            if (error instanceof zod_1.z.ZodError) {
                return res.status(400).json({
                    success: false,
                    message: '查詢參數驗證失敗',
                    errors: error.errors.map(err => ({
                        field: err.path.join('.'),
                        message: err.message,
                    })),
                });
            }
            next(error);
        }
    };
};
exports.validateQuery = validateQuery;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,