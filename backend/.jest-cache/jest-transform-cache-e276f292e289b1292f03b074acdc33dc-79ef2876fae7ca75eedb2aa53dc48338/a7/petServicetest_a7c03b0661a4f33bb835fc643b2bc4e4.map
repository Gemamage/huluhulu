{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\test\\services\\petService.test.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\test\\services\\petService.test.ts"],"sourcesContent":["// petService 單元測試 - 簡化版本，不依賴數據庫\nimport { describe, it, expect, jest, beforeEach, afterEach } from '@jest/globals';\n\n// 設置測試環境變數\nprocess.env.NODE_ENV = 'test';\nprocess.env.JWT_SECRET = 'test-jwt-secret-key-with-minimum-32-characters-length';\n\n// 模擬外部依賴\njest.mock('../../src/models/Pet');\njest.mock('../../src/models/User');\njest.mock('../../src/services/cloudinaryService');\njest.mock('../../src/services/aiService');\njest.mock('../../src/utils/logger');\n\n// 導入要測試的服務\nimport { PetService, CreatePetData, UpdatePetData } from '../../src/services/petService';\n\n// 模擬的 Pet 模型\nconst mockPet = {\n  _id: '507f1f77bcf86cd799439011',\n  name: '小白',\n  type: 'dog',\n  breed: '拉布拉多',\n  status: 'lost',\n  owner: '507f1f77bcf86cd799439012',\n  save: jest.fn(),\n  populate: jest.fn().mockReturnThis(),\n  createdAt: new Date(),\n  updatedAt: new Date()\n};\n\n// 模擬的 User 模型\nconst mockUser = {\n  _id: '507f1f77bcf86cd799439012',\n  username: 'testuser',\n  email: 'test@example.com'\n};\n\n// 模擬 Pet 模型的靜態方法\nconst Pet = {\n  findById: jest.fn(),\n  findOne: jest.fn(),\n  findByIdAndUpdate: jest.fn(),\n  findByIdAndDelete: jest.fn(),\n  find: jest.fn(),\n  countDocuments: jest.fn(),\n  deleteMany: jest.fn()\n};\n\n// 模擬 User 模型的靜態方法\nconst User = {\n  findById: jest.fn(),\n  deleteMany: jest.fn()\n};\n\n// 模擬 CloudinaryService\nconst CloudinaryService = {\n  uploadImage: jest.fn(),\n  deleteImage: jest.fn()\n};\n\n// 模擬 aiService\nconst aiService = {\n  analyzeImage: jest.fn()\n};\n\n// 設置模擬\nrequire('../../src/models/Pet').Pet = Pet;\nrequire('../../src/models/User').User = User;\nrequire('../../src/services/cloudinaryService').CloudinaryService = CloudinaryService;\nrequire('../../src/services/aiService').aiService = aiService;\n\ndescribe('PetService 測試', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    \n    // 設置預設的模擬回應\n    User.findById.mockResolvedValue(mockUser);\n    Pet.findById.mockResolvedValue({\n      ...mockPet,\n      populate: jest.fn().mockResolvedValue(mockPet)\n    });\n    mockPet.save.mockResolvedValue(mockPet);\n    mockPet.populate.mockResolvedValue(mockPet);\n  });\n  \n  afterEach(() => {\n    jest.restoreAllMocks();\n  });\n\n  describe('createPet', () => {\n    const petData: CreatePetData = {\n      name: '小花',\n      type: 'cat',\n      breed: '波斯貓',\n      status: 'lost',\n      description: '走失的小貓',\n      location: {\n        address: '台北市信義區',\n        city: '台北市',\n        coordinates: [121.5654, 25.0330]\n      },\n      contact: {\n        phone: '0912345678',\n        email: 'owner@example.com'\n      }\n    };\n\n    it('應該成功創建寵物', async () => {\n      // 模擬 Pet 構造函數\n      const mockPetConstructor = jest.fn().mockImplementation(() => ({\n        ...mockPet,\n        ...petData,\n        save: jest.fn().mockResolvedValue({ ...mockPet, ...petData }),\n        populate: jest.fn().mockResolvedValue({ ...mockPet, ...petData })\n      }));\n      \n      Pet.prototype = mockPetConstructor.prototype;\n      global.Pet = mockPetConstructor;\n      \n      const result = await PetService.createPet('507f1f77bcf86cd799439012', petData);\n       \n       expect(User.findById).toHaveBeenCalledWith('507f1f77bcf86cd799439012');\n      expect(result).toBeDefined();\n      expect(result.name).toBe(petData.name);\n    });\n\n    it('應該在擁有者不存在時拋出錯誤', async () => {\n      User.findById.mockResolvedValue(null);\n      \n      await expect(PetService.createPet('507f1f77bcf86cd799439999', petData))\n         .rejects.toThrow('擁有者不存在');\n    });\n\n    it('應該處理圖片上傳', async () => {\n      const petDataWithImages = {\n        ...petData,\n        images: ['image1.jpg', 'image2.jpg']\n      };\n      \n      CloudinaryService.uploadImage.mockResolvedValue({\n        secure_url: 'https://cloudinary.com/test.jpg',\n        public_id: 'test_id',\n        width: 800,\n        height: 600\n      });\n      \n      const mockPetConstructor = jest.fn().mockImplementation(() => ({\n        ...mockPet,\n        save: jest.fn().mockResolvedValue(mockPet),\n        populate: jest.fn().mockResolvedValue(mockPet)\n      }));\n      \n      global.Pet = mockPetConstructor;\n      \n      await PetService.createPet('507f1f77bcf86cd799439012', petDataWithImages);\n      \n      expect(CloudinaryService.uploadImage).toHaveBeenCalledTimes(2);\n    });\n  });\n\n  describe('getPetById', () => {\n    it('應該成功根據ID獲取寵物', async () => {\n      const result = await PetService.getPetById('507f1f77bcf86cd799439011');\n       \n       expect(Pet.findById).toHaveBeenCalledWith('507f1f77bcf86cd799439011');\n       expect(result).toBeDefined();\n       expect(result?._id).toBe('507f1f77bcf86cd799439011');\n    });\n\n    it('應該在ID無效時拋出錯誤', async () => {\n      await expect(PetService.getPetById('invalid-id'))\n        .rejects.toThrow('無效的寵物 ID');\n    });\n\n    it('應該返回null當寵物不存在', async () => {\n      Pet.findById.mockReturnValue({\n        populate: jest.fn().mockReturnValue({\n          exec: jest.fn().mockResolvedValue(null)\n        })\n      });\n      \n      const result = await PetService.getPetById('507f1f77bcf86cd799439011');\n      \n      expect(result).toBeNull();\n    });\n  });\n\n  describe('updatePet', () => {\n    const updateData: UpdatePetData = {\n      name: '更新的小白',\n      description: '更新的描述'\n    };\n\n    it('應該成功更新寵物', async () => {\n      Pet.findOne.mockResolvedValue(mockPet);\n      Pet.findByIdAndUpdate.mockReturnValue({\n        populate: jest.fn().mockResolvedValue({ ...mockPet, ...updateData })\n      });\n      \n      const result = await PetService.updatePet('507f1f77bcf86cd799439011', '507f1f77bcf86cd799439012', updateData);\n       \n       expect(Pet.findOne).toHaveBeenCalledWith({ _id: '507f1f77bcf86cd799439011', owner: '507f1f77bcf86cd799439012' });\n      expect(Pet.findByIdAndUpdate).toHaveBeenCalled();\n      expect(result?.name).toBe(updateData.name);\n    });\n\n    it('應該在寵物不存在時拋出錯誤', async () => {\n      Pet.findOne.mockResolvedValue(null);\n      \n      await expect(PetService.updatePet('507f1f77bcf86cd799439011', '507f1f77bcf86cd799439012', updateData))\n         .rejects.toThrow('寵物不存在或您沒有權限修改');\n    });\n  });\n\n  describe('deletePet', () => {\n    it('應該成功刪除寵物', async () => {\n      Pet.findOne.mockResolvedValue({\n        ...mockPet,\n        images: [{ publicId: 'test_id', url: 'test.jpg' }]\n      });\n      Pet.findByIdAndDelete.mockResolvedValue(mockPet);\n      CloudinaryService.deleteImage.mockResolvedValue(true);\n      \n      const result = await PetService.deletePet('507f1f77bcf86cd799439011', '507f1f77bcf86cd799439012');\n       \n       expect(Pet.findOne).toHaveBeenCalledWith({ _id: '507f1f77bcf86cd799439011', owner: '507f1f77bcf86cd799439012' });\n       expect(Pet.findByIdAndDelete).toHaveBeenCalledWith('507f1f77bcf86cd799439011');\n      expect(CloudinaryService.deleteImage).toHaveBeenCalledWith('test_id');\n      expect(result).toBe(true);\n    });\n\n    it('應該在寵物不存在時拋出錯誤', async () => {\n      Pet.findOne.mockResolvedValue(null);\n      \n      await expect(PetService.deletePet('507f1f77bcf86cd799439011', '507f1f77bcf86cd799439012'))\n         .rejects.toThrow('寵物不存在或您沒有權限刪除');\n    });\n  });\n\n  describe('getAllPets', () => {\n    it('應該成功獲取所有寵物', async () => {\n      const mockPets = [mockPet, { ...mockPet, _id: '507f1f77bcf86cd799439013', name: '小黑' }];\n      \n      Pet.find.mockReturnValue({\n        populate: jest.fn().mockReturnValue({\n          sort: jest.fn().mockReturnValue({\n            skip: jest.fn().mockReturnValue({\n              limit: jest.fn().mockReturnValue({\n                exec: jest.fn().mockResolvedValue(mockPets)\n              })\n            })\n          })\n        })\n      });\n      \n      Pet.countDocuments.mockResolvedValue(2);\n      \n      const result = await PetService.getAllPets(1, 10);\n      \n      expect(result.pets).toHaveLength(2);\n      expect(result.total).toBe(2);\n      expect(result.page).toBe(1);\n      expect(result.totalPages).toBe(1);\n    });\n  });\n\n  describe('incrementViewCount', () => {\n    it('應該成功增加瀏覽次數', async () => {\n      Pet.findByIdAndUpdate.mockResolvedValue(mockPet);\n      \n      await PetService.incrementViewCount('507f1f77bcf86cd799439011');\n       \n       expect(Pet.findByIdAndUpdate).toHaveBeenCalledWith(\n         '507f1f77bcf86cd799439011',\n        { $inc: { viewCount: 1 } },\n        { new: true }\n      );\n    });\n  });\n\n  describe('incrementShareCount', () => {\n    it('應該成功增加分享次數', async () => {\n      Pet.findByIdAndUpdate.mockResolvedValue(mockPet);\n      \n      await PetService.incrementShareCount('507f1f77bcf86cd799439011');\n       \n       expect(Pet.findByIdAndUpdate).toHaveBeenCalledWith(\n         '507f1f77bcf86cd799439011',\n        { $inc: { shareCount: 1 } },\n        { new: true }\n      );\n    });\n  });\n});\n\nconsole.log('✅ petService 測試檔案已載入');"],"version":3}