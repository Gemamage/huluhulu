{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\notifications.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\notifications.ts"],"sourcesContent":["import { Router, Request, Response } from 'express';\nimport { body, param, query, validationResult } from 'express-validator';\nimport { NotificationService, NotificationOptions, BatchNotificationOptions } from '../services/notificationService';\nimport { NotificationPreference } from '../models/NotificationPreference';\nimport { NotificationType, NotificationPriority } from '../models/Notification';\nimport { authenticate } from '../middleware/auth';\nimport { logger } from '../utils/logger';\nimport { Types } from 'mongoose';\n\nconst router = Router();\n\n/**\n * 驗證錯誤處理中介軟體\n */\nconst handleValidationErrors = (req: Request, res: Response, next: any) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({\n      success: false,\n      message: '請求參數驗證失敗',\n      errors: errors.array(),\n    });\n  }\n  next();\n  return;\n};\n\n/**\n * @route POST /api/notifications/send\n * @desc 發送單一通知\n * @access Private\n */\nrouter.post(\n  '/send',\n  authenticate,\n  [\n    body('userId').isMongoId().withMessage('用戶 ID 格式不正確'),\n    body('type').isIn(Object.values(NotificationType)).withMessage('通知類型不正確'),\n    body('title').trim().isLength({ min: 1, max: 100 }).withMessage('標題長度必須在 1-100 字元之間'),\n    body('message').trim().isLength({ min: 1, max: 500 }).withMessage('訊息長度必須在 1-500 字元之間'),\n    body('priority').optional().isIn(Object.values(NotificationPriority)).withMessage('優先級不正確'),\n    body('actionUrl').optional().isURL().withMessage('動作連結格式不正確'),\n    body('imageUrl').optional().isURL().withMessage('圖片連結格式不正確'),\n    body('channels.push').optional().isBoolean().withMessage('推播通知設定必須為布林值'),\n    body('channels.email').optional().isBoolean().withMessage('Email 通知設定必須為布林值'),\n    body('channels.inApp').optional().isBoolean().withMessage('站內通知設定必須為布林值'),\n    body('scheduledAt').optional().isISO8601().withMessage('排程時間格式不正確'),\n    body('expiresAt').optional().isISO8601().withMessage('過期時間格式不正確'),\n  ],\n  handleValidationErrors,\n  async (req: Request, res: Response) => {\n    try {\n      const options: NotificationOptions = {\n        userId: req.body.userId,\n        type: req.body.type,\n        title: req.body.title,\n        message: req.body.message,\n        priority: req.body.priority,\n        data: req.body.data,\n        actionUrl: req.body.actionUrl,\n        imageUrl: req.body.imageUrl,\n        channels: req.body.channels,\n        scheduledAt: req.body.scheduledAt ? new Date(req.body.scheduledAt) : undefined,\n        expiresAt: req.body.expiresAt ? new Date(req.body.expiresAt) : undefined,\n      };\n\n      const result = await NotificationService.sendNotification(options);\n\n      res.json({\n        success: result.success,\n        message: result.success ? '通知發送成功' : '通知發送失敗',\n        data: {\n          notificationId: result.notificationId,\n          channels: result.channels,\n        },\n      });\n    } catch (error) {\n      logger.error('發送通知 API 錯誤', { error, body: req.body });\n      res.status(500).json({\n        success: false,\n        message: '伺服器內部錯誤',\n      });\n      return;\n    }\n  }\n);\n\n/**\n * @route POST /api/notifications/batch\n * @desc 批次發送通知\n * @access Private\n */\nrouter.post(\n  '/batch',\n  authenticate,\n  [\n    body('userIds').isArray({ min: 1 }).withMessage('用戶 ID 列表不能為空'),\n    body('userIds.*').isMongoId().withMessage('用戶 ID 格式不正確'),\n    body('type').isIn(Object.values(NotificationType)).withMessage('通知類型不正確'),\n    body('title').trim().isLength({ min: 1, max: 100 }).withMessage('標題長度必須在 1-100 字元之間'),\n    body('message').trim().isLength({ min: 1, max: 500 }).withMessage('訊息長度必須在 1-500 字元之間'),\n    body('priority').optional().isIn(Object.values(NotificationPriority)).withMessage('優先級不正確'),\n  ],\n  handleValidationErrors,\n  async (req: Request, res: Response) => {\n    try {\n      const options: BatchNotificationOptions = {\n        userIds: req.body.userIds,\n        type: req.body.type,\n        title: req.body.title,\n        message: req.body.message,\n        priority: req.body.priority,\n        data: req.body.data,\n        actionUrl: req.body.actionUrl,\n        imageUrl: req.body.imageUrl,\n        channels: req.body.channels,\n        scheduledAt: req.body.scheduledAt ? new Date(req.body.scheduledAt) : undefined,\n        expiresAt: req.body.expiresAt ? new Date(req.body.expiresAt) : undefined,\n      };\n\n      const result = await NotificationService.sendBatchNotification(options);\n\n      res.json({\n        success: true,\n        message: '批次通知發送完成',\n        data: result,\n      });\n    } catch (error) {\n      logger.error('批次發送通知 API 錯誤', { error, body: req.body });\n      res.status(500).json({\n        success: false,\n        message: '伺服器內部錯誤',\n      });\n      return;\n    }\n  }\n);\n\n/**\n * @route GET /api/notifications\n * @desc 取得用戶通知列表\n * @access Private\n */\nrouter.get(\n  '/',\n  authenticate,\n  [\n    query('page').optional().isInt({ min: 1 }).withMessage('頁碼必須為正整數'),\n    query('limit').optional().isInt({ min: 1, max: 50 }).withMessage('每頁數量必須在 1-50 之間'),\n  ],\n  handleValidationErrors,\n  async (req: Request, res: Response) => {\n    try {\n      const userId = (req as any).user.userId;\n      const page = parseInt(req.query.page as string) || 1;\n      const limit = parseInt(req.query.limit as string) || 20;\n\n      const result = await NotificationService.getUserNotifications(userId, page, limit);\n\n      res.json({\n        success: true,\n        message: '取得通知列表成功',\n        data: {\n          notifications: result.notifications,\n          pagination: {\n            page,\n            limit,\n            total: result.total,\n            hasMore: result.hasMore,\n          },\n        },\n      });\n    } catch (error) {\n      logger.error('取得通知列表 API 錯誤', { error, userId: (req as any).user?.userId });\n      res.status(500).json({\n        success: false,\n        message: '伺服器內部錯誤',\n      });\n      return;\n    }\n  }\n);\n\n/**\n * @route PUT /api/notifications/:id/read\n * @desc 標記通知為已讀\n * @access Private\n */\nrouter.put(\n  '/:id/read',\n  authenticate,\n  [\n    param('id').isMongoId().withMessage('通知 ID 格式不正確'),\n  ],\n  handleValidationErrors,\n  async (req: Request, res: Response) => {\n    try {\n      const notificationId = req.params.id;\n      const userId = (req as any).user?.userId;\n\n      if (!userId) {\n        return res.status(401).json({\n          success: false,\n          message: '用戶未認證',\n        });\n      }\n\n      const success = await NotificationService.markAsRead(notificationId as string, userId as string);\n\n      if (success) {\n        return res.json({\n          success: true,\n          message: '通知已標記為已讀',\n        });\n      } else {\n        return res.status(404).json({\n          success: false,\n          message: '找不到指定的通知',\n        });\n      }\n    } catch (error) {\n      logger.error('標記通知已讀 API 錯誤', { error, notificationId: req.params.id });\n      res.status(500).json({\n        success: false,\n        message: '伺服器內部錯誤',\n      });\n      return;\n    }\n  }\n);\n\n/**\n * @route GET /api/notifications/unread-count\n * @desc 取得未讀通知數量\n * @access Private\n */\nrouter.get(\n  '/unread-count',\n  authenticate,\n  async (req: Request, res: Response) => {\n    try {\n      const userId = (req as any).user.userId;\n      const count = await NotificationService.getUnreadCount(userId);\n\n      res.json({\n        success: true,\n        message: '取得未讀通知數量成功',\n        data: { count },\n      });\n    } catch (error) {\n      logger.error('取得未讀通知數量 API 錯誤', { error, userId: (req as any).user?.userId });\n      res.status(500).json({\n        success: false,\n        message: '伺服器內部錯誤',\n      });\n      return;\n    }\n  }\n);\n\n/**\n * @route GET /api/notifications/preferences\n * @desc 取得用戶通知偏好設定\n * @access Private\n */\nrouter.get(\n  '/preferences',\n  authenticate,\n  async (req: Request, res: Response) => {\n    try {\n      const userId = (req as any).user.userId;\n      const preferences = await NotificationPreference.findByUserId(userId);\n\n      if (!preferences) {\n        return res.status(404).json({\n          success: false,\n          message: '找不到通知偏好設定',\n        });\n      }\n\n      res.json({\n        success: true,\n        message: '取得通知偏好設定成功',\n        data: preferences,\n      });\n      return;\n    } catch (error) {\n      logger.error('取得通知偏好設定 API 錯誤', { error, userId: (req as any).user?.userId });\n      res.status(500).json({\n        success: false,\n        message: '伺服器內部錯誤',\n      });\n      return;\n    }\n  }\n);\n\n/**\n * @route PUT /api/notifications/preferences\n * @desc 更新用戶通知偏好設定\n * @access Private\n */\nrouter.put(\n  '/preferences',\n  authenticate,\n  [\n    body('pushNotifications').optional().isObject().withMessage('推播通知設定必須為物件'),\n    body('emailNotifications').optional().isObject().withMessage('Email 通知設定必須為物件'),\n    body('inAppNotifications').optional().isObject().withMessage('站內通知設定必須為物件'),\n    body('globalSettings.pushEnabled').optional().isBoolean().withMessage('推播開關必須為布林值'),\n    body('globalSettings.emailEnabled').optional().isBoolean().withMessage('Email 開關必須為布林值'),\n    body('globalSettings.quietHours.enabled').optional().isBoolean().withMessage('勿擾時段開關必須為布林值'),\n    body('globalSettings.quietHours.start').optional().matches(/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/).withMessage('勿擾開始時間格式不正確'),\n    body('globalSettings.quietHours.end').optional().matches(/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/).withMessage('勿擾結束時間格式不正確'),\n    body('globalSettings.frequency').optional().isIn(['immediate', 'hourly', 'daily']).withMessage('通知頻率設定不正確'),\n  ],\n  handleValidationErrors,\n  async (req: Request, res: Response) => {\n    try {\n      const userId = (req as any).user.userId;\n      const updateData = req.body;\n\n      const preferences = await NotificationPreference.findByUserId(userId);\n      if (!preferences) {\n        return res.status(404).json({\n          success: false,\n          message: '找不到通知偏好設定',\n        });\n      }\n\n      // 更新偏好設定\n      if (updateData.preferences) {\n        Object.assign(preferences.preferences, updateData.preferences);\n        preferences.markModified('preferences');\n      }\n      \n      // 更新全域設定\n      if (updateData.globalSettings) {\n        Object.assign(preferences.globalSettings, updateData.globalSettings);\n        preferences.markModified('globalSettings');\n      }\n      \n      const updatedPreferences = await preferences.save();\n\n      res.json({\n        success: true,\n        message: '通知偏好設定更新成功',\n        data: updatedPreferences,\n      });\n      return;\n    } catch (error) {\n      logger.error('更新通知偏好設定 API 錯誤', { error, userId: (req as any).user?.userId });\n      res.status(500).json({\n        success: false,\n        message: '伺服器內部錯誤',\n      });\n      return;\n    }\n  }\n);\n\n/**\n * @route POST /api/notifications/device-token\n * @desc 新增裝置 Token\n * @access Private\n */\nrouter.post(\n  '/device-token',\n  authenticate,\n  [\n    body('token').trim().isLength({ min: 1 }).withMessage('裝置 Token 不能為空'),\n    body('platform').optional().isIn(['ios', 'android', 'web']).withMessage('平台類型不正確'),\n  ],\n  handleValidationErrors,\n  async (req: Request, res: Response) => {\n    try {\n      const userId = (req as any).user.userId;\n      const { token, platform } = req.body;\n\n      const preferences = await NotificationPreference.findByUserId(userId);\n      if (!preferences) {\n        return res.status(404).json({\n          success: false,\n          message: '找不到通知偏好設定',\n        });\n      }\n\n      await preferences.addDeviceToken(token, platform);\n\n      res.json({\n        success: true,\n        message: '裝置 Token 新增成功',\n      });\n      return;\n    } catch (error) {\n      logger.error('新增裝置 Token API 錯誤', { error, userId: (req as any).user?.userId });\n      res.status(500).json({\n        success: false,\n        message: '伺服器內部錯誤',\n      });\n      return;\n    }\n  }\n);\n\n/**\n * @route DELETE /api/notifications/device-token\n * @desc 移除裝置 Token\n * @access Private\n */\nrouter.delete(\n  '/device-token',\n  authenticate,\n  [\n    body('token').trim().isLength({ min: 1 }).withMessage('裝置 Token 不能為空'),\n  ],\n  handleValidationErrors,\n  async (req: Request, res: Response) => {\n    try {\n      const userId = (req as any).user.userId;\n      const { token } = req.body;\n\n      const preferences = await NotificationPreference.findByUserId(userId);\n      if (!preferences) {\n        return res.status(404).json({\n          success: false,\n          message: '找不到通知偏好設定',\n        });\n      }\n\n      await preferences.removeDeviceTokens([token]);\n\n      res.json({\n        success: true,\n        message: '裝置 Token 移除成功',\n      });\n      return;\n    } catch (error) {\n      logger.error('移除裝置 Token API 錯誤', { error, userId: (req as any).user?.userId });\n      res.status(500).json({\n        success: false,\n        message: '伺服器內部錯誤',\n      });\n      return;\n    }\n  }\n);\n\n/**\n * @route GET /api/notifications/stats\n * @desc 取得通知統計資訊\n * @access Private\n */\nrouter.get(\n  '/stats',\n  authenticate,\n  async (req: Request, res: Response) => {\n    try {\n      const userId = (req as any).user.userId;\n      const stats = await NotificationService.getNotificationStats(userId);\n\n      res.json({\n        success: true,\n        message: '取得通知統計成功',\n        data: stats,\n      });\n      return;\n    } catch (error) {\n      logger.error('取得通知統計 API 錯誤', { error, userId: (req as any).user?.userId });\n      res.status(500).json({\n        success: false,\n        message: '伺服器內部錯誤',\n      });\n      return;\n    }\n  }\n);\n\n/**\n * @route POST /api/notifications/test\n * @desc 發送測試通知（僅開發環境）\n * @access Private\n */\nif (process.env.NODE_ENV === 'development') {\n  router.post(\n    '/test',\n    authenticate,\n    [\n      body('type').optional().isIn(Object.values(NotificationType)).withMessage('通知類型不正確'),\n      body('priority').optional().isIn(Object.values(NotificationPriority)).withMessage('優先級不正確'),\n    ],\n    handleValidationErrors,\n    async (req: Request, res: Response) => {\n      try {\n        const userId = (req as any).user.userId;\n        const { type = NotificationType.SYSTEM_UPDATE, priority = NotificationPriority.NORMAL } = req.body;\n\n        const options: NotificationOptions = {\n          userId,\n          type,\n          title: '測試通知',\n          message: '這是一個測試通知，用於驗證通知系統是否正常運作。',\n          priority,\n          data: {\n            test: true,\n            timestamp: new Date().toISOString(),\n          },\n        };\n\n        const result = await NotificationService.sendNotification(options);\n\n        res.json({\n          success: result.success,\n          message: '測試通知發送完成',\n          data: {\n            notificationId: result.notificationId,\n            channels: result.channels,\n          },\n        });\n        return;\n      } catch (error) {\n        logger.error('發送測試通知 API 錯誤', { error, userId: (req as any).user?.userId });\n        res.status(500).json({\n          success: false,\n          message: '伺服器內部錯誤',\n        });\n        return;\n      }\n    }\n  );\n}\n\nexport default router;"],"version":3}