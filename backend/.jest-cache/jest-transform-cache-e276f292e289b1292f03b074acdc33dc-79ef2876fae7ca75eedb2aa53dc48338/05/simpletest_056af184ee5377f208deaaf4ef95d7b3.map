{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\test\\simple.test.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\test\\simple.test.ts"],"sourcesContent":["// 簡單的單元測試 - 不依賴數據庫\nimport { describe, it, expect } from '@jest/globals';\n\n// 設置基本環境變數\nprocess.env.NODE_ENV = 'test';\nprocess.env.JWT_SECRET = 'test-jwt-secret-key-with-minimum-32-characters-length';\n\ndescribe('基本功能測試', () => {\n  it('應該能夠運行基本的 JavaScript 測試', () => {\n    expect(1 + 1).toBe(2);\n  });\n  \n  it('應該能夠測試字符串操作', () => {\n    const testString = 'Hello World';\n    expect(testString.toLowerCase()).toBe('hello world');\n    expect(testString.length).toBe(11);\n  });\n  \n  it('應該能夠測試數組操作', () => {\n    const testArray = [1, 2, 3, 4, 5];\n    expect(testArray.length).toBe(5);\n    expect(testArray.includes(3)).toBe(true);\n    expect(testArray.filter(x => x > 3)).toEqual([4, 5]);\n  });\n  \n  it('應該能夠測試對象操作', () => {\n    const testObject = {\n      name: 'Test User',\n      email: 'test@example.com',\n      age: 25\n    };\n    \n    expect(testObject.name).toBe('Test User');\n    expect(testObject.email).toContain('@');\n    expect(testObject.age).toBeGreaterThan(18);\n  });\n  \n  it('應該能夠測試異步操作', async () => {\n    const asyncFunction = async () => {\n      return new Promise(resolve => {\n        setTimeout(() => resolve('async result'), 10);\n      });\n    };\n    \n    const result = await asyncFunction();\n    expect(result).toBe('async result');\n  });\n});\n\ndescribe('環境變數測試', () => {\n  it('應該正確設置測試環境', () => {\n    expect(process.env.NODE_ENV).toBe('test');\n    expect(process.env.JWT_SECRET).toBeDefined();\n    expect(process.env.JWT_SECRET!.length).toBeGreaterThan(30);\n  });\n});\n\ndescribe('TypeScript 功能測試', () => {\n  interface TestInterface {\n    id: number;\n    name: string;\n    active: boolean;\n  }\n  \n  it('應該能夠使用 TypeScript 接口', () => {\n    const testItem: TestInterface = {\n      id: 1,\n      name: 'Test Item',\n      active: true\n    };\n    \n    expect(testItem.id).toBe(1);\n    expect(testItem.name).toBe('Test Item');\n    expect(testItem.active).toBe(true);\n  });\n  \n  it('應該能夠使用泛型', () => {\n    function identity<T>(arg: T): T {\n      return arg;\n    }\n    \n    expect(identity<string>('hello')).toBe('hello');\n    expect(identity<number>(42)).toBe(42);\n    expect(identity<boolean>(true)).toBe(true);\n  });\n});\n\nconsole.log('✅ 簡單測試檔案已載入');"],"version":3}