{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\config\\elasticsearch.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\config\\elasticsearch.ts"],"sourcesContent":["import { Client } from \"@elastic/elasticsearch\";\nimport { logger } from \"../utils/logger\";\n\n// Elasticsearch 配置介面\nexport interface ElasticsearchConfig {\n  node: string;\n  auth?: {\n    username: string;\n    password: string;\n  };\n  tls?: {\n    ca?: string;\n    cert?: string;\n    key?: string;\n    rejectUnauthorized?: boolean;\n  };\n  requestTimeout?: number;\n  pingTimeout?: number;\n  sniffOnStart?: boolean;\n  sniffInterval?: number;\n  maxRetries?: number;\n  resurrectStrategy?: string;\n}\n\n// 從環境變數獲取 Elasticsearch 配置\nexport const getElasticsearchConfig = (): ElasticsearchConfig => {\n  const config: ElasticsearchConfig = {\n    node: process.env.ELASTICSEARCH_URL || \"http://localhost:9200\",\n    requestTimeout: parseInt(\n      process.env.ELASTICSEARCH_REQUEST_TIMEOUT || \"30000\",\n    ),\n    pingTimeout: parseInt(process.env.ELASTICSEARCH_PING_TIMEOUT || \"3000\"),\n    sniffOnStart: process.env.ELASTICSEARCH_SNIFF_ON_START === \"true\",\n    sniffInterval: parseInt(\n      process.env.ELASTICSEARCH_SNIFF_INTERVAL || \"300000\",\n    ),\n    maxRetries: parseInt(process.env.ELASTICSEARCH_MAX_RETRIES || \"3\"),\n    resurrectStrategy: process.env.ELASTICSEARCH_RESURRECT_STRATEGY || \"ping\",\n  };\n\n  // 如果有認證資訊\n  if (\n    process.env.ELASTICSEARCH_USERNAME &&\n    process.env.ELASTICSEARCH_PASSWORD\n  ) {\n    config.auth = {\n      username: process.env.ELASTICSEARCH_USERNAME,\n      password: process.env.ELASTICSEARCH_PASSWORD,\n    };\n  }\n\n  // TLS 配置\n  if (process.env.ELASTICSEARCH_TLS_ENABLED === \"true\") {\n    config.tls = {\n      rejectUnauthorized:\n        process.env.ELASTICSEARCH_TLS_REJECT_UNAUTHORIZED !== \"false\",\n    };\n\n    if (process.env.ELASTICSEARCH_TLS_CA) {\n      config.tls.ca = process.env.ELASTICSEARCH_TLS_CA;\n    }\n    if (process.env.ELASTICSEARCH_TLS_CERT) {\n      config.tls.cert = process.env.ELASTICSEARCH_TLS_CERT;\n    }\n    if (process.env.ELASTICSEARCH_TLS_KEY) {\n      config.tls.key = process.env.ELASTICSEARCH_TLS_KEY;\n    }\n  }\n\n  return config;\n};\n\n// 中文分析器設定\nexport const chineseAnalyzerSettings = {\n  analysis: {\n    analyzer: {\n      chinese_analyzer: {\n        type: \"custom\",\n        tokenizer: \"ik_max_word\",\n        filter: [\"lowercase\", \"stop_filter\", \"synonym_filter\"],\n      },\n      chinese_search_analyzer: {\n        type: \"custom\",\n        tokenizer: \"ik_smart\",\n        filter: [\"lowercase\", \"stop_filter\", \"synonym_filter\"],\n      },\n    },\n    tokenizer: {\n      ik_max_word: {\n        type: \"ik_max_word\",\n      },\n      ik_smart: {\n        type: \"ik_smart\",\n      },\n    },\n    filter: {\n      stop_filter: {\n        type: \"stop\",\n        stopwords: [\n          \"的\",\n          \"了\",\n          \"在\",\n          \"是\",\n          \"我\",\n          \"有\",\n          \"和\",\n          \"就\",\n          \"不\",\n          \"人\",\n          \"都\",\n          \"一\",\n          \"一個\",\n          \"上\",\n          \"也\",\n          \"很\",\n          \"到\",\n          \"說\",\n          \"要\",\n          \"去\",\n          \"你\",\n          \"會\",\n          \"著\",\n          \"沒有\",\n          \"看\",\n          \"好\",\n          \"自己\",\n          \"這\",\n          \"那\",\n          \"他\",\n          \"她\",\n          \"它\",\n        ],\n      },\n      synonym_filter: {\n        type: \"synonym\",\n        synonyms: [\n          \"狗,犬,汪星人\",\n          \"貓,喵,貓咪,喵星人\",\n          \"走失,失蹤,不見,遺失\",\n          \"尋找,找,協尋\",\n          \"黃金獵犬,金毛,黃金\",\n          \"拉布拉多,拉拉\",\n          \"柴犬,柴柴\",\n          \"博美,波美拉尼亞\",\n          \"吉娃娃,奇娃娃\",\n          \"哈士奇,西伯利亞雪橇犬\",\n          \"邊境牧羊犬,邊牧\",\n          \"德國牧羊犬,德牧\",\n          \"比熊,比熊犬\",\n          \"泰迪,貴賓犬\",\n          \"馬爾濟斯,瑪爾濟斯\",\n          \"約克夏,約克夏梗\",\n          \"法國鬥牛犬,法鬥\",\n          \"英國鬥牛犬,英鬥\",\n          \"米克斯,混種,雜種\",\n          \"波斯貓,波斯\",\n          \"英國短毛貓,英短\",\n          \"美國短毛貓,美短\",\n          \"俄羅斯藍貓,俄藍\",\n          \"暹羅貓,暹羅\",\n          \"布偶貓,布偶\",\n          \"緬因貓,緬因\",\n          \"蘇格蘭摺耳貓,摺耳貓\",\n          \"挪威森林貓,挪威\",\n          \"孟加拉貓,豹貓\",\n          \"阿比西尼亞貓,阿比\",\n          \"土耳其安哥拉貓,安哥拉\",\n          \"小,幼,年輕\",\n          \"大,成年,老\",\n          \"黑色,黑,烏黑\",\n          \"白色,白,雪白\",\n          \"棕色,咖啡色,褐色\",\n          \"黃色,金色,淡黃\",\n          \"灰色,銀色,銀灰\",\n          \"橘色,橙色,橘紅\",\n          \"台北,台北市\",\n          \"新北,新北市\",\n          \"桃園,桃園市\",\n          \"台中,台中市\",\n          \"台南,台南市\",\n          \"高雄,高雄市\",\n          \"基隆,基隆市\",\n          \"新竹,新竹市,新竹縣\",\n          \"苗栗,苗栗縣\",\n          \"彰化,彰化縣\",\n          \"南投,南投縣\",\n          \"雲林,雲林縣\",\n          \"嘉義,嘉義市,嘉義縣\",\n          \"屏東,屏東縣\",\n          \"宜蘭,宜蘭縣\",\n          \"花蓮,花蓮縣\",\n          \"台東,台東縣\",\n          \"澎湖,澎湖縣\",\n          \"金門,金門縣\",\n          \"連江,馬祖\",\n        ],\n      },\n    },\n  },\n};\n\n// 索引模板設定\nexport const indexTemplateSettings = {\n  index_patterns: [\"pets*\", \"search_analytics*\"],\n  settings: {\n    number_of_shards: 1,\n    number_of_replicas: 0,\n    refresh_interval: \"1s\",\n    max_result_window: 10000,\n    ...chineseAnalyzerSettings,\n  },\n  mappings: {\n    dynamic_templates: [\n      {\n        strings_as_keywords: {\n          match_mapping_type: \"string\",\n          match: \"*_id\",\n          mapping: {\n            type: \"keyword\",\n          },\n        },\n      },\n      {\n        strings_as_text: {\n          match_mapping_type: \"string\",\n          mapping: {\n            type: \"text\",\n            analyzer: \"chinese_analyzer\",\n            search_analyzer: \"chinese_search_analyzer\",\n            fields: {\n              keyword: {\n                type: \"keyword\",\n                ignore_above: 256,\n              },\n            },\n          },\n        },\n      },\n    ],\n  },\n};\n\n// 健康檢查配置\nexport const healthCheckConfig = {\n  timeout: 5000,\n  interval: 30000,\n  retries: 3,\n  retryDelay: 1000,\n};\n\n// 效能監控配置\nexport const performanceConfig = {\n  slowQueryThreshold: 1000, // 毫秒\n  enableQueryLogging: process.env.NODE_ENV === \"development\",\n  enableMetrics: true,\n  metricsInterval: 60000, // 1分鐘\n};\n\n// 建立 Elasticsearch 客戶端\nexport const createElasticsearchClient = (): Client => {\n  const config = getElasticsearchConfig();\n\n  const client = new Client(config);\n\n  // 錯誤處理\n  client.on(\"response\", (err, result) => {\n    if (err) {\n      logger.error(\"Elasticsearch 回應錯誤:\", err);\n    }\n  });\n\n  client.on(\"request\", (err, result) => {\n    if (performanceConfig.enableQueryLogging) {\n      logger.debug(\"Elasticsearch 請求:\", {\n        method: result?.meta?.request?.params?.method,\n        path: result?.meta?.request?.params?.path,\n        body: result?.body,\n      });\n    }\n  });\n\n  client.on(\"sniff\", (err, result) => {\n    if (err) {\n      logger.warn(\"Elasticsearch 節點嗅探失敗:\", err);\n    } else {\n      logger.info(\"Elasticsearch 節點嗅探成功\");\n    }\n  });\n\n  client.on(\"resurrect\", (err, result) => {\n    if (err) {\n      logger.warn(\"Elasticsearch 節點復活失敗:\", err);\n    } else {\n      logger.info(\"Elasticsearch 節點復活成功\");\n    }\n  });\n\n  return client;\n};\n\n// 驗證 Elasticsearch 連接\nexport const validateElasticsearchConnection = async (\n  client: Client,\n): Promise<boolean> => {\n  try {\n    const response = await client.ping({\n      requestTimeout: healthCheckConfig.timeout,\n    });\n\n    if (response.statusCode === 200) {\n      logger.info(\"Elasticsearch 連接驗證成功\");\n      return true;\n    } else {\n      logger.error(\"Elasticsearch 連接驗證失敗:\", response);\n      return false;\n    }\n  } catch (error) {\n    logger.error(\"Elasticsearch 連接驗證錯誤:\", error);\n    return false;\n  }\n};\n\n// 獲取 Elasticsearch 叢集資訊\nexport const getClusterInfo = async (client: Client) => {\n  try {\n    const [health, info, stats] = await Promise.all([\n      client.cluster.health(),\n      client.info(),\n      client.cluster.stats(),\n    ]);\n\n    return {\n      health,\n      info,\n      stats,\n    };\n  } catch (error) {\n    logger.error(\"獲取 Elasticsearch 叢集資訊失敗:\", error);\n    throw error;\n  }\n};\n\nexport default {\n  getElasticsearchConfig,\n  chineseAnalyzerSettings,\n  indexTemplateSettings,\n  healthCheckConfig,\n  performanceConfig,\n  createElasticsearchClient,\n  validateElasticsearchConnection,\n  getClusterInfo,\n};\n"],"version":3}