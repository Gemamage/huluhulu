{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\users.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\users.ts"],"sourcesContent":["import { Router, Request, Response } from 'express';\nimport { body, validationResult, query } from 'express-validator';\nimport { logger } from '../utils/logger';\nimport { AppError } from '../utils/errors';\nimport { UserService } from '../services/userService';\nimport { EmailService } from '../services/emailService';\nimport { CloudinaryService } from '../services/cloudinaryService';\nimport { authenticate, authorize, authorizeOwnerOrAdmin } from '../middleware/auth';\nimport { IUser } from '../models/User';\nimport { config } from '../config/environment';\nimport multer from 'multer';\n\nconst router = Router();\nconst userService = new UserService();\n\n// Cloudinary 配置已移至 CloudinaryService\n\n// 配置 multer 用於檔案上傳\nconst upload = multer({\n  storage: multer.memoryStorage(),\n  limits: {\n    fileSize: config.upload.maxFileSize,\n  },\n  fileFilter: (_req, file, cb) => {\n    if (config.upload.allowedMimeTypes.includes(file.mimetype as any)) {\n      cb(null, true);\n    } else {\n      cb(new AppError('不支援的檔案格式', 400));\n    }\n  },\n});\n\n// 獲取用戶列表（僅管理員）\nrouter.get(\n  '/',\n  authenticate,\n  authorize('admin'),\n  [\n    query('page').optional().isInt({ min: 1 }),\n    query('limit').optional().isInt({ min: 1, max: 100 }),\n    query('search').optional().isString(),\n    query('role').optional().isIn(['user', 'admin']),\n    query('isActive').optional().isBoolean(),\n    query('isEmailVerified').optional().isBoolean(),\n  ],\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const errors = validationResult(req);\n      if (!errors.isEmpty()) {\n        res.status(400).json({\n          success: false,\n          message: '查詢參數驗證失敗',\n          errors: errors.array(),\n        });\n        return;\n      }\n\n      const {\n        page = 1,\n        limit = 20,\n        search,\n        role,\n        isActive,\n        isEmailVerified,\n        sortBy = 'createdAt',\n        sortOrder = 'desc',\n      } = req.query;\n\n      // 獲取用戶列表\n      const queryOptions: any = {\n        page: Number(page),\n        limit: Number(limit),\n        search: search as string,\n        sortBy: sortBy as string,\n        sortOrder: sortOrder as 'asc' | 'desc',\n      };\n      \n      if (role) {\n        queryOptions.role = role as 'user' | 'admin';\n      }\n      \n      if (isActive !== undefined) {\n        queryOptions.isActive = Boolean(isActive);\n      }\n      \n      if (isEmailVerified !== undefined) {\n        queryOptions.isEmailVerified = Boolean(isEmailVerified);\n      }\n      \n      const result = await userService.getUsers(queryOptions);\n\n      logger.info('獲取用戶列表成功', {\n        page,\n        limit,\n        total: result.total,\n        adminId: (req.user as IUser)?._id.toString(),\n      });\n\n      res.json({\n        success: true,\n        data: result,\n      });\n    } catch (error) {\n      logger.error('獲取用戶列表失敗', { error });\n      res.status(500).json({\n        success: false,\n        message: '獲取用戶列表失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 獲取特定用戶資訊\nrouter.get(\n  '/:id',\n  authenticate,\n  authorizeOwnerOrAdmin,\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const { id } = req.params;\n\n      if (!id) {\n        res.status(400).json({\n          success: false,\n          message: '缺少用戶 ID',\n        });\n        return;\n      }\n\n      // 獲取用戶資訊\n      const user = await userService.getUserById(id);\n      if (!user) {\n        res.status(404).json({\n          success: false,\n          message: '用戶不存在',\n        });\n        return;\n      }\n\n      logger.info('獲取用戶資訊成功', { userId: id, requesterId: (req.user as IUser)?._id.toString() });\n\n      res.json({\n        success: true,\n        data: {\n          user: {\n            id: user._id,\n            email: user.email,\n            name: user.name,\n            phone: user.phone,\n            avatar: user.avatar,\n            role: user.role,\n            isEmailVerified: user.isEmailVerified,\n            isActive: user.isActive,\n            createdAt: user.createdAt,\n            updatedAt: user.updatedAt,\n            lastLoginAt: user.lastLoginAt,\n          },\n        },\n      });\n    } catch (error) {\n      logger.error('獲取用戶資訊失敗', { error });\n      \n      if (error instanceof AppError) {\n        res.status(error.statusCode).json({\n          success: false,\n          message: error.message,\n        });\n        return;\n      }\n\n      res.status(500).json({\n        success: false,\n        message: '獲取用戶資訊失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 更新用戶資訊\nrouter.put(\n  '/:id',\n  authenticate,\n  authorizeOwnerOrAdmin,\n  [\n    body('name').optional().trim().isLength({ min: 1 }).withMessage('姓名不能為空'),\n    body('phone').optional().isMobilePhone('zh-TW').withMessage('請提供有效的手機號碼'),\n  ],\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const errors = validationResult(req);\n      if (!errors.isEmpty()) {\n        res.status(400).json({\n          success: false,\n          message: '輸入資料驗證失敗',\n          errors: errors.array(),\n        });\n        return;\n      }\n\n      const { id } = req.params;\n      const updateData = req.body;\n\n      if (!id) {\n        res.status(400).json({\n          success: false,\n          message: '缺少用戶 ID',\n        });\n        return;\n      }\n\n      // 更新用戶資訊\n      const updatedUser = await userService.updateUser(id, updateData);\n\n      logger.info('用戶資訊更新成功', {\n        userId: id,\n        updateData,\n        updaterId: (req.user as IUser)?._id.toString(),\n      });\n\n      res.json({\n        success: true,\n        message: '用戶資訊更新成功',\n        data: {\n          user: {\n            id: updatedUser._id,\n            email: updatedUser.email,\n            name: updatedUser.name,\n            phone: updatedUser.phone,\n            avatar: updatedUser.avatar,\n            role: updatedUser.role,\n            isEmailVerified: updatedUser.isEmailVerified,\n            isActive: updatedUser.isActive,\n            updatedAt: updatedUser.updatedAt,\n          },\n        },\n      });\n    } catch (error) {\n      logger.error('用戶資訊更新失敗', { error });\n      \n      if (error instanceof AppError) {\n        res.status(error.statusCode).json({\n          success: false,\n          message: error.message,\n        });\n        return;\n      }\n\n      res.status(500).json({\n        success: false,\n        message: '用戶資訊更新失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 停用用戶帳號（軟刪除）\nrouter.delete(\n  '/:id',\n  authenticate,\n  authorizeOwnerOrAdmin,\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const { id } = req.params;\n\n      if (!id) {\n        res.status(400).json({\n          success: false,\n          message: '缺少用戶 ID',\n        });\n        return;\n      }\n\n      // 停用用戶帳號\n      await userService.deactivateUser(id);\n\n      logger.info('用戶帳號已停用', {\n        userId: id,\n        deactivatedBy: (req.user as IUser)?._id.toString(),\n      });\n\n      res.json({\n        success: true,\n        message: '用戶帳號已停用',\n      });\n    } catch (error) {\n      logger.error('停用用戶帳號失敗', { error });\n      \n      if (error instanceof AppError) {\n        res.status(error.statusCode).json({\n          success: false,\n          message: error.message,\n        });\n        return;\n      }\n\n      res.status(500).json({\n        success: false,\n        message: '停用用戶帳號失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 上傳用戶頭像\nrouter.post(\n  '/:id/avatar',\n  authenticate,\n  authorizeOwnerOrAdmin,\n  upload.single('avatar'),\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const { id } = req.params;\n      const file = req.file;\n\n      if (!id) {\n        res.status(400).json({\n          success: false,\n          message: '缺少用戶 ID',\n        });\n        return;\n      }\n\n      if (!file) {\n        res.status(400).json({\n          success: false,\n          message: '請選擇要上傳的頭像檔案',\n        });\n        return;\n      }\n\n      // 上傳到 Cloudinary\n      const uploadResult = await CloudinaryService.uploadFile(\n        file.buffer,\n        file.originalname,\n        file.mimetype,\n        id,\n        'avatar'\n      );\n\n      const avatarUrl = uploadResult.secureUrl;\n\n      // 更新用戶頭像\n      const updatedUser = await userService.updateUser(id, { avatar: avatarUrl });\n\n      logger.info('用戶頭像上傳成功', {\n        userId: id,\n        avatarUrl,\n        uploaderId: (req.user as IUser)?._id.toString(),\n      });\n\n      res.json({\n        success: true,\n        message: '頭像上傳成功',\n        data: {\n          avatarUrl,\n          user: {\n            id: updatedUser._id,\n            avatar: updatedUser.avatar,\n          },\n        },\n      });\n    } catch (error) {\n      logger.error('頭像上傳失敗', { error });\n      \n      if (error instanceof AppError) {\n        res.status(error.statusCode).json({\n          success: false,\n          message: error.message,\n        });\n        return;\n      }\n\n      res.status(500).json({\n        success: false,\n        message: '頭像上傳失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 發送電子郵件驗證\nrouter.post(\n  '/:id/send-verification',\n  authenticate,\n  authorizeOwnerOrAdmin,\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const { id } = req.params;\n\n      if (!id) {\n        res.status(400).json({\n          success: false,\n          message: '缺少用戶 ID',\n        });\n        return;\n      }\n\n      // 獲取用戶資訊\n      const user = await userService.getUserById(id);\n      \n      if (user.isEmailVerified) {\n        res.status(400).json({\n          success: false,\n          message: '電子郵件已經驗證過了',\n        });\n        return;\n      }\n\n      // 生成驗證令牌\n      const verificationToken = user.generateEmailVerificationToken();\n      await user.save();\n\n      // 發送驗證郵件\n      await EmailService.sendVerificationEmail(\n        user.email,\n        user.name,\n        verificationToken\n      );\n\n      logger.info('驗證郵件發送成功', {\n        userId: id,\n        email: user.email,\n        requesterId: (req.user as IUser)?._id.toString(),\n      });\n\n      res.json({\n        success: true,\n        message: '驗證郵件已發送，請檢查您的信箱',\n      });\n    } catch (error) {\n      logger.error('發送驗證郵件失敗', { error });\n      \n      if (error instanceof AppError) {\n        res.status(error.statusCode).json({\n          success: false,\n          message: error.message,\n        });\n        return;\n      }\n\n      res.status(500).json({\n        success: false,\n        message: '發送驗證郵件失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 驗證電子郵件\nrouter.post(\n  '/:id/verify-email',\n  [\n    body('token').notEmpty().withMessage('請提供驗證令牌'),\n  ],\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const errors = validationResult(req);\n      if (!errors.isEmpty()) {\n        res.status(400).json({\n          success: false,\n          message: '輸入資料驗證失敗',\n          errors: errors.array(),\n        });\n        return;\n      }\n\n      const { id } = req.params;\n      const { token } = req.body;\n\n      // 驗證電子郵件\n      await userService.verifyEmailByToken(token);\n\n      logger.info('電子郵件驗證成功', {\n         userId: id,\n       });\n\n      res.json({\n        success: true,\n        message: '電子郵件驗證成功',\n      });\n    } catch (error) {\n      logger.error('電子郵件驗證失敗', { error });\n      \n      if (error instanceof AppError) {\n        res.status(error.statusCode).json({\n          success: false,\n          message: error.message,\n        });\n        return;\n      }\n\n      res.status(500).json({\n        success: false,\n        message: '電子郵件驗證失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 獲取用戶的寵物列表\nrouter.get(\n  '/:id/pets',\n  authenticate,\n  authorizeOwnerOrAdmin,\n  [\n    query('page').optional().isInt({ min: 1 }),\n    query('limit').optional().isInt({ min: 1, max: 50 }),\n    query('status').optional().isIn(['lost', 'found', 'adopted']),\n    query('type').optional().isIn(['dog', 'cat', 'other']),\n  ],\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const errors = validationResult(req);\n      if (!errors.isEmpty()) {\n        res.status(400).json({\n          success: false,\n          message: '查詢參數驗證失敗',\n          errors: errors.array(),\n        });\n        return;\n      }\n\n      const { id } = req.params;\n      \n      if (!id) {\n        res.status(400).json({\n          success: false,\n          message: '缺少用戶 ID',\n        });\n        return;\n      }\n      \n      const {\n        page = 1,\n        limit = 10,\n        status,\n        type,\n        // sortBy = 'createdAt',\n        // sortOrder = 'desc',\n      } = req.query;\n\n      // 構建查詢條件\n      const query: any = { owner: id };\n      \n      if (status) {\n        query.status = status;\n      }\n      \n      if (type) {\n        query.type = type;\n      }\n\n      // 分頁參數\n      const pageNum = Math.max(1, parseInt(page as string));\n      const limitNum = Math.min(50, Math.max(1, parseInt(limit as string)));\n\n      // 查詢寵物（這裡假設有 Pet 模型，實際需要根據寵物模組實作）\n      // 暫時返回空列表，等寵物模組完成後再實作\n      const pets: any[] = [];\n      const total = 0;\n\n      logger.info('獲取用戶寵物列表成功', {\n        userId: id,\n        query,\n        pagination: { page: pageNum, limit: limitNum },\n        requesterId: (req.user as IUser)?._id.toString(),\n      });\n\n      res.json({\n        success: true,\n        message: '獲取用戶寵物列表成功',\n        data: {\n          pets,\n          pagination: {\n            currentPage: pageNum,\n            totalPages: Math.ceil(total / limitNum),\n            totalItems: total,\n            itemsPerPage: limitNum,\n            hasNextPage: pageNum < Math.ceil(total / limitNum),\n            hasPrevPage: pageNum > 1,\n          },\n        },\n      });\n    } catch (error) {\n      logger.error('獲取用戶寵物列表失敗', { error });\n      \n      if (error instanceof AppError) {\n        res.status(error.statusCode).json({\n          success: false,\n          message: error.message,\n        });\n        return;\n      }\n\n      res.status(500).json({\n        success: false,\n        message: '獲取用戶寵物列表失敗，請稍後再試',\n      });\n    }\n  }\n);\n\n// 更改密碼\nrouter.put(\n  '/:id/change-password',\n  authenticate,\n  authorizeOwnerOrAdmin,\n  [\n    body('currentPassword').notEmpty().withMessage('請提供當前密碼'),\n    body('newPassword')\n      .isLength({ min: 8 })\n      .withMessage('新密碼長度至少為 8 個字符')\n      .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/)\n      .withMessage('新密碼必須包含至少一個小寫字母、一個大寫字母和一個數字'),\n  ],\n  async (req: Request, res: Response): Promise<void> => {\n    try {\n      const errors = validationResult(req);\n      if (!errors.isEmpty()) {\n        res.status(400).json({\n          success: false,\n          message: '輸入資料驗證失敗',\n          errors: errors.array(),\n        });\n        return;\n      }\n\n      const { id } = req.params;\n      const { currentPassword, newPassword } = req.body;\n\n      if (!id || !currentPassword || !newPassword) {\n        res.status(400).json({\n          success: false,\n          message: '缺少必要參數',\n        });\n        return;\n      }\n\n      // 更改密碼\n      await userService.changePassword(id, currentPassword, newPassword);\n\n      logger.info('密碼更改成功', {\n        userId: id,\n        changedBy: (req.user as IUser)?._id.toString(),\n      });\n\n      res.json({\n        success: true,\n        message: '密碼更改成功',\n      });\n    } catch (error) {\n      logger.error('密碼更改失敗', { error });\n      \n      if (error instanceof AppError) {\n        res.status(error.statusCode).json({\n          success: false,\n          message: error.message,\n        });\n        return;\n      }\n\n      res.status(500).json({\n        success: false,\n        message: '密碼更改失敗，請稍後再試',\n      });\n    }\n  }\n);\n\nexport { router as userRoutes };"],"version":3}