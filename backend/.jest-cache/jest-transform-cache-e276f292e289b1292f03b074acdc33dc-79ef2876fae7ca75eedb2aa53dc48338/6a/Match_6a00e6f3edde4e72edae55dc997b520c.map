{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\models\\Match.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qDAAsD;AAkBtD,MAAM,WAAW,GAAG,IAAI,iBAAM,CAC5B;IACE,OAAO,EAAE;QACP,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,KAAK;QACV,QAAQ,EAAE,IAAI;QACd,KAAK,EAAE,IAAI;KACZ;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,KAAK;QACV,QAAQ,EAAE,IAAI;QACd,KAAK,EAAE,IAAI;KACZ;IACD,UAAU,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,CAAC;QACN,GAAG,EAAE,CAAC;KACP;IACD,UAAU,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC;QAC/B,QAAQ,EAAE,IAAI;KACf;IACD,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,SAAS,EAAE,WAAW,EAAE,UAAU,CAAC;QAC1C,OAAO,EAAE,SAAS;QAClB,KAAK,EAAE,IAAI;KACZ;IACD,WAAW,EAAE;QACX,IAAI,EAAE,IAAI;KACX;IACD,UAAU,EAAE;QACV,IAAI,EAAE,IAAI;KACX;IACD,WAAW,EAAE;QACX,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;KACZ;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,IAAI;KAChB;CACF,EACD;IACE,UAAU,EAAE,IAAI;CACjB,CACF,CAAC;AAEF,iBAAiB;AACjB,WAAW,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AAEjE,WAAW;AACX,WAAW,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACrC,WAAW,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACtC,WAAW,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAEnC,QAAA,KAAK,GAAG,kBAAQ,CAAC,KAAK,CAAS,OAAO,EAAE,WAAW,CAAC,CAAC","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\models\\Match.ts"],"sourcesContent":["import mongoose, { Document, Schema } from \"mongoose\";\nimport { IPet } from \"./Pet\";\nimport { IUser } from \"./User\";\n\nexport interface IMatch extends Document {\n  lostPet: mongoose.Types.ObjectId | IPet;\n  foundPet: mongoose.Types.ObjectId | IPet;\n  similarity: number;\n  confidence: \"low\" | \"medium\" | \"high\";\n  status: \"pending\" | \"confirmed\" | \"rejected\";\n  confirmedAt?: Date;\n  rejectedAt?: Date;\n  confirmedBy?: mongoose.Types.ObjectId | IUser;\n  notes?: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nconst matchSchema = new Schema<IMatch>(\n  {\n    lostPet: {\n      type: Schema.Types.ObjectId,\n      ref: \"Pet\",\n      required: true,\n      index: true,\n    },\n    foundPet: {\n      type: Schema.Types.ObjectId,\n      ref: \"Pet\",\n      required: true,\n      index: true,\n    },\n    similarity: {\n      type: Number,\n      required: true,\n      min: 0,\n      max: 1,\n    },\n    confidence: {\n      type: String,\n      enum: [\"low\", \"medium\", \"high\"],\n      required: true,\n    },\n    status: {\n      type: String,\n      enum: [\"pending\", \"confirmed\", \"rejected\"],\n      default: \"pending\",\n      index: true,\n    },\n    confirmedAt: {\n      type: Date,\n    },\n    rejectedAt: {\n      type: Date,\n    },\n    confirmedBy: {\n      type: Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    notes: {\n      type: String,\n      maxlength: 1000,\n    },\n  },\n  {\n    timestamps: true,\n  },\n);\n\n// 複合索引確保不會有重複的配對\nmatchSchema.index({ lostPet: 1, foundPet: 1 }, { unique: true });\n\n// 索引優化查詢性能\nmatchSchema.index({ createdAt: -1 });\nmatchSchema.index({ similarity: -1 });\nmatchSchema.index({ status: 1, createdAt: -1 });\n\nexport const Match = mongoose.model<IMatch>(\"Match\", matchSchema);\n"],"version":3}