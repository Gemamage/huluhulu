5c29d7bd2d0077e8dccefe8978c67404
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReminderService = void 0;
const notificationService_1 = require("../notificationService");
const Pet_1 = require("../../models/Pet");
const User_1 = require("../../models/User");
const Notification_1 = require("../../models/Notification");
const logger_1 = require("../../utils/logger");
class ReminderService {
    /**
     * 初始化提醒服務
     */
    static initialize(config) {
        if (config) {
            this.config = { ...this.config, ...config };
        }
        this.start();
        logger_1.logger.info("提醒服務已初始化", { config: this.config });
    }
    /**
     * 啟動提醒任務
     */
    static start() {
        if (!this.config.enabled || this.interval)
            return;
        // 每小時檢查一次提醒
        this.interval = setInterval(async () => {
            try {
                await this.processReminders();
            }
            catch (error) {
                logger_1.logger.error("定期提醒任務失敗", { error });
            }
        }, 60 * 60 * 1000); // 1小時
        logger_1.logger.info("定期提醒任務已啟動");
    }
    /**
     * 停止提醒任務
     */
    static stop() {
        if (this.interval) {
            clearInterval(this.interval);
            this.interval = null;
            logger_1.logger.info("定期提醒任務已停止");
        }
    }
    /**
     * 處理定期提醒
     */
    static async processReminders() {
        try {
            const now = new Date();
            for (const days of this.config.intervals) {
                const targetDate = new Date(now.getTime() - days * 24 * 60 * 60 * 1000);
                const startOfDay = new Date(targetDate.getFullYear(), targetDate.getMonth(), targetDate.getDate());
                const endOfDay = new Date(startOfDay.getTime() + 24 * 60 * 60 * 1000);
                // 查找在目標日期創建且仍未找到的寵物
                const pets = await Pet_1.Pet.find({
                    status: { $in: ["lost", "found"] },
                    createdAt: {
                        $gte: startOfDay,
                        $lt: endOfDay,
                    },
                }).populate("owner");
                for (const pet of pets) {
                    try {
                        // 檢查是否已發送過此提醒
                        const existingReminder = await Notification_1.Notification.findOne({
                            userId: pet.userId,
                            type: "REMINDER",
                            "data.petId": pet._id.toString(),
                            "data.reminderDay": days,
                        });
                        if (!existingReminder) {
                            await this.sendReminderNotification(pet, days);
                        }
                    }
                    catch (error) {
                        logger_1.logger.error("發送提醒通知失敗", {
                            petId: pet._id,
                            days,
                            error,
                        });
                    }
                }
            }
        }
        catch (error) {
            logger_1.logger.error("處理定期提醒失敗", { error });
        }
    }
    /**
     * 發送提醒通知
     */
    static async sendReminderNotification(pet, days) {
        const owner = (await User_1.User.findById(pet.userId));
        const isLost = pet.status === "lost";
        let title;
        let message;
        if (days === 1) {
            title = isLost ? "🔍 持續尋找中" : "📢 持續協尋中";
            message = `您的${isLost ? "失蹤" : "拾獲"}寵物 ${pet.name} 已經${days}天了，建議您更新資訊或擴大搜尋範圍。`;
        }
        else if (days <= 7) {
            title = isLost ? "💪 不要放棄" : "🤝 繼續協助";
            message = `${pet.name} 已經${isLost ? "失蹤" : "等待認領"}${days}天了，我們建議您分享到更多社群平台。`;
        }
        else {
            title = isLost ? "🌟 保持希望" : "❤️ 感謝您的愛心";
            message = `${pet.name} 已經${days}天了，雖然時間較長，但仍有很多成功案例。建議聯繫當地動物收容所。`;
        }
        await notificationService_1.NotificationService.sendNotification({
            userId: owner._id.toString(),
            type: "REMINDER",
            title,
            message,
            data: {
                petId: pet._id.toString(),
                reminderDay: days,
                suggestions: this.getReminderSuggestions(pet, days),
            },
            priority: days <= 3 ? Notification_1.NotificationPriority.HIGH : Notification_1.NotificationPriority.NORMAL,
        });
    }
    /**
     * 獲取提醒建議
     */
    static getReminderSuggestions(pet, days) {
        const suggestions = [];
        const isLost = pet.status === "lost";
        if (days === 1) {
            suggestions.push(isLost ? "在附近張貼尋寵啟事" : "聯繫當地動物收容所", "分享到社群媒體", "通知鄰居和朋友");
        }
        else if (days <= 7) {
            suggestions.push("擴大搜尋範圍", "聯繫獸醫診所", "在寵物相關論壇發布", "考慮提供獎勵");
        }
        else {
            suggestions.push("聯繫動物收容所和救援組織", "在更多平台發布資訊", "考慮專業尋寵服務", "保持資訊更新");
        }
        return suggestions;
    }
    /**
     * 手動發送提醒
     */
    static async sendManualReminder(userId, petId, customMessage) {
        const pet = await Pet_1.Pet.findOne({ _id: petId, owner: userId });
        if (!pet) {
            throw new Error("寵物不存在或無權限");
        }
        const owner = (await User_1.User.findById(userId));
        const daysSinceCreated = Math.floor((Date.now() - pet.createdAt.getTime()) / (24 * 60 * 60 * 1000));
        await notificationService_1.NotificationService.sendNotification({
            userId: owner._id.toString(),
            type: "REMINDER",
            title: "📝 手動提醒",
            message: customMessage ||
                `關於您的${pet.status === "lost" ? "失蹤" : "拾獲"}寵物 ${pet.name} 的提醒`,
            data: {
                petId: pet._id.toString(),
                reminderDay: daysSinceCreated,
                isManual: true,
                suggestions: this.getReminderSuggestions(pet, daysSinceCreated),
            },
            priority: Notification_1.NotificationPriority.NORMAL,
        });
        logger_1.logger.info("手動提醒已發送", { userId, petId });
    }
    /**
     * 獲取用戶的提醒統計
     */
    static async getUserReminderStats(userId, startDate, endDate) {
        const start = startDate || new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // 預設 30 天前
        const end = endDate || new Date();
        const reminders = await Notification_1.Notification.find({
            userId,
            type: "REMINDER",
            createdAt: { $gte: start, $lte: end },
        }).sort({ createdAt: -1 });
        const remindersByDay = {};
        let lastReminderDate;
        for (const reminder of reminders) {
            const day = reminder.data?.reminderDay;
            if (day !== undefined) {
                remindersByDay[day] = (remindersByDay[day] || 0) + 1;
            }
            if (!lastReminderDate || reminder.createdAt > lastReminderDate) {
                lastReminderDate = reminder.createdAt;
            }
        }
        return {
            totalReminders: reminders.length,
            remindersByDay,
            lastReminderDate,
        };
    }
    /**
     * 獲取配置
     */
    static getConfig() {
        return { ...this.config };
    }
    /**
     * 更新配置
     */
    static updateConfig(newConfig) {
        this.config = { ...this.config, ...newConfig };
        // 如果啟用狀態改變，重新啟動或停止服務
        if (newConfig.enabled !== undefined) {
            this.stop();
            if (newConfig.enabled) {
                this.start();
            }
        }
        logger_1.logger.info("提醒配置已更新", { config: this.config });
        return { ...this.config };
    }
    /**
     * 獲取統計信息
     */
    static async getStats() {
        const today = new Date();
        today.setHours(0, 0, 0, 0);
        const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);
        const sentToday = await Notification_1.Notification.countDocuments({
            type: "REMINDER",
            createdAt: {
                $gte: today,
                $lt: tomorrow,
            },
        });
        return {
            enabled: this.config.enabled,
            running: this.interval !== null,
            sentToday,
            config: { ...this.config },
        };
    }
}
exports.ReminderService = ReminderService;
ReminderService.config = {
    enabled: true,
    intervals: [1, 3, 7, 14, 30], // 1天, 3天, 1週, 2週, 1個月
    maxReminders: 5,
};
ReminderService.interval = null;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,