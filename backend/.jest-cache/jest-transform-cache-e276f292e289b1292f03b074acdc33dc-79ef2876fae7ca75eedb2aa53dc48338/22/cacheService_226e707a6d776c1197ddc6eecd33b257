91041bd206812fa6da0cb17884d9d8ca
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cacheService = exports.CacheService = void 0;
// 快取服務 - 提供請求快取和去重功能
const logger_1 = require("../utils/logger");
class CacheService {
    constructor(config) {
        this.cache = new Map();
        this.pendingRequests = new Map();
        this.cleanupTimer = null;
        this.config = {
            defaultTTL: 5 * 60 * 1000, // 5分鐘
            maxSize: 1000, // 最多1000個快取項目
            cleanupInterval: 60 * 1000, // 每分鐘清理一次
            ...config
        };
        // 啟動定期清理
        this.startCleanup();
    }
    /**
     * 獲取快取服務實例（單例模式）
     */
    static getInstance(config) {
        if (!CacheService.instance) {
            CacheService.instance = new CacheService(config);
        }
        return CacheService.instance;
    }
    /**
     * 生成快取鍵
     */
    generateKey(prefix, params) {
        const paramStr = params.map(p => typeof p === 'object' ? JSON.stringify(p) : String(p)).join('|');
        return `${prefix}:${paramStr}`;
    }
    /**
     * 檢查快取項目是否過期
     */
    isExpired(item) {
        return Date.now() - item.timestamp > item.ttl;
    }
    /**
     * 獲取快取資料
     */
    get(key) {
        const item = this.cache.get(key);
        if (!item) {
            return null;
        }
        if (this.isExpired(item)) {
            this.cache.delete(key);
            return null;
        }
        logger_1.logger.debug(`快取命中: ${key}`);
        return item.data;
    }
    /**
     * 設置快取資料
     */
    set(key, data, ttl) {
        // 檢查快取大小限制
        if (this.cache.size >= this.config.maxSize) {
            this.evictOldest();
        }
        const item = {
            data,
            timestamp: Date.now(),
            ttl: ttl || this.config.defaultTTL
        };
        this.cache.set(key, item);
        logger_1.logger.debug(`快取設置: ${key}`);
    }
    /**
     * 刪除快取項目
     */
    delete(key) {
        const deleted = this.cache.delete(key);
        if (deleted) {
            logger_1.logger.debug(`快取刪除: ${key}`);
        }
        return deleted;
    }
    /**
     * 清空所有快取
     */
    clear() {
        this.cache.clear();
        this.pendingRequests.clear();
        logger_1.logger.info('所有快取已清空');
    }
    /**
     * 帶快取的函數執行（包含請求去重）
     */
    async withCache(cacheKey, asyncFunction, ttl) {
        // 檢查快取
        const cached = this.get(cacheKey);
        if (cached !== null) {
            return cached;
        }
        // 檢查是否有相同的請求正在進行（請求去重）
        const pending = this.pendingRequests.get(cacheKey);
        if (pending) {
            logger_1.logger.debug(`請求去重: ${cacheKey}`);
            return pending.promise;
        }
        // 執行新請求
        const promise = asyncFunction();
        this.pendingRequests.set(cacheKey, {
            promise,
            timestamp: Date.now()
        });
        try {
            const result = await promise;
            // 將結果存入快取
            this.set(cacheKey, result, ttl);
            return result;
        }
        catch (error) {
            logger_1.logger.error(`快取函數執行失敗: ${cacheKey}`, error);
            throw error;
        }
        finally {
            // 清除進行中的請求記錄
            this.pendingRequests.delete(cacheKey);
        }
    }
    /**
     * 批量刪除快取（支援模式匹配）
     */
    deletePattern(pattern) {
        let deletedCount = 0;
        const regex = new RegExp(pattern);
        for (const key of this.cache.keys()) {
            if (regex.test(key)) {
                this.cache.delete(key);
                deletedCount++;
            }
        }
        if (deletedCount > 0) {
            logger_1.logger.debug(`批量刪除快取: ${deletedCount} 個項目`);
        }
        return deletedCount;
    }
    /**
     * 移除最舊的快取項目
     */
    evictOldest() {
        let oldestKey = null;
        let oldestTime = Date.now();
        for (const [key, item] of this.cache.entries()) {
            if (item.timestamp < oldestTime) {
                oldestTime = item.timestamp;
                oldestKey = key;
            }
        }
        if (oldestKey) {
            this.cache.delete(oldestKey);
            logger_1.logger.debug(`移除最舊快取: ${oldestKey}`);
        }
    }
    /**
     * 清理過期的快取項目
     */
    cleanup() {
        let cleanedCount = 0;
        const now = Date.now();
        // 清理過期快取
        for (const [key, item] of this.cache.entries()) {
            if (this.isExpired(item)) {
                this.cache.delete(key);
                cleanedCount++;
            }
        }
        // 清理過期的進行中請求（超過5分鐘）
        for (const [key, pending] of this.pendingRequests.entries()) {
            if (now - pending.timestamp > 5 * 60 * 1000) {
                this.pendingRequests.delete(key);
            }
        }
        if (cleanedCount > 0) {
            logger_1.logger.debug(`清理過期快取: ${cleanedCount} 個項目`);
        }
    }
    /**
     * 啟動定期清理
     */
    startCleanup() {
        this.cleanupTimer = setInterval(() => {
            this.cleanup();
        }, this.config.cleanupInterval);
    }
    /**
     * 停止定期清理
     */
    stopCleanup() {
        if (this.cleanupTimer) {
            clearInterval(this.cleanupTimer);
            this.cleanupTimer = null;
        }
    }
    /**
     * 獲取快取統計資訊
     */
    getStats() {
        return {
            cacheSize: this.cache.size,
            pendingRequests: this.pendingRequests.size,
            maxSize: this.config.maxSize,
            defaultTTL: this.config.defaultTTL
        };
    }
}
exports.CacheService = CacheService;
// 預設快取實例
exports.cacheService = CacheService.getInstance();
console.log('✅ CacheService 已載入');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,