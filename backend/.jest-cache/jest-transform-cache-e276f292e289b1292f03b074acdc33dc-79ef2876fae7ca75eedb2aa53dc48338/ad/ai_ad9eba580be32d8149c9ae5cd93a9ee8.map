{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\ai.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\ai.ts"],"sourcesContent":["import express from 'express';\nimport multer from 'multer';\nimport { authenticate } from '../middleware/auth';\nimport { AIService } from '../services/aiService';\nimport { CloudinaryService } from '../services/cloudinaryService';\nimport { AppError } from '../utils/errors';\nimport { logger } from '../utils/logger';\nimport { validateRequest } from '../utils/validation';\nimport { Request, Response, NextFunction } from 'express';\nimport { IUser } from '../models/User';\nimport { Pet } from '../models/Pet';\nimport { \n  imageOptimizeSchema,\n  imageCropSchema,\n  similaritySearchSchema\n} from '../schemas/ai';\n\nconst router = express.Router();\n\n// Multer 配置\nconst upload = multer({\n  storage: multer.memoryStorage(),\n  limits: {\n    fileSize: 10 * 1024 * 1024, // 10MB for AI processing\n    files: 1,\n  },\n  fileFilter: (req, file, cb) => {\n    const allowedMimes = [\n      'image/jpeg',\n      'image/jpg',\n      'image/png',\n      'image/webp',\n      'image/gif'\n    ];\n    \n    if (allowedMimes.includes(file.mimetype)) {\n      cb(null, true);\n    } else {\n      cb(new AppError('不支援的文件類型，請上傳圖片文件', 400));\n    }\n  },\n});\n\n\n\n/**\n * @route POST /api/ai/analyze\n * @desc 分析上傳的圖片，識別寵物品種和特徵\n * @access Private\n */\nrouter.post('/analyze', authenticate, upload.single('image'), async (req: Request, res: Response, next: NextFunction) => {\n  try {\n    if (!req.file) {\n      throw new AppError('請上傳圖片文件', 400);\n    }\n\n    const userId = (req.user as IUser)!._id.toString();\n\n    logger.info('開始 AI 圖像分析', {\n      userId,\n      fileName: req.file.originalname,\n      fileSize: req.file.size\n    });\n\n    // 執行 AI 分析\n    const analysisResult = await AIService.analyzeImageWithVision(req.file.buffer);\n\n    // 生成搜尋建議\n    const searchSuggestions = AIService.generateSearchSuggestions(analysisResult);\n\n    logger.info('AI 圖像分析完成', {\n      userId,\n      petType: analysisResult.petType,\n      breed: analysisResult.breed,\n      confidence: analysisResult.confidence\n    });\n\n    res.json({\n      success: true,\n      message: '圖像分析完成',\n      data: {\n        analysis: {\n          petType: analysisResult.petType,\n          breed: analysisResult.breed,\n          confidence: analysisResult.confidence,\n          labels: analysisResult.labels,\n          safeSearch: analysisResult.safeSearch\n        },\n        searchSuggestions,\n        features: {\n          dominantColors: analysisResult.features.dominantColors,\n          // 不返回完整的特徵向量以減少響應大小\n        }\n      }\n    });\n  } catch (error) {\n    next(error);\n  }\n});\n\n/**\n * @route POST /api/ai/optimize\n * @desc 優化圖片（壓縮、調整大小）\n * @access Private\n */\nrouter.post('/optimize', authenticate, upload.single('image'), async (req: Request, res: Response, next: NextFunction) => {\n  try {\n    if (!req.file) {\n      throw new AppError('請上傳圖片文件', 400);\n    }\n\n    const userId = (req.user as IUser)!._id.toString();\n    const options = imageOptimizeSchema.parse(req.body);\n\n    logger.info('開始圖像優化', {\n      userId,\n      fileName: req.file.originalname,\n      originalSize: req.file.size,\n      options\n    });\n\n    // 優化圖像\n    const { buffer: optimizedBuffer, metadata } = await AIService.optimizeImage(\n      req.file.buffer,\n      options\n    );\n\n    // 上傳優化後的圖像到 Cloudinary\n    const uploadResult = await CloudinaryService.uploadFile(\n      optimizedBuffer,\n      `optimized_${req.file.originalname}`,\n      options.format === 'png' ? 'image/png' : \n      options.format === 'webp' ? 'image/webp' : 'image/jpeg',\n      userId,\n      'pet'\n    );\n\n    logger.info('圖像優化完成', {\n      userId,\n      originalSize: req.file.size,\n      optimizedSize: optimizedBuffer.length,\n      url: uploadResult.secureUrl\n    });\n\n    res.json({\n      success: true,\n      message: '圖像優化完成',\n      data: {\n        url: uploadResult.secureUrl,\n        publicId: uploadResult.publicId,\n        metadata: {\n          width: metadata.width,\n          height: metadata.height,\n          format: metadata.format,\n          size: optimizedBuffer.length,\n          originalSize: req.file.size,\n          compressionRatio: ((req.file.size - optimizedBuffer.length) / req.file.size * 100).toFixed(2) + '%'\n        }\n      }\n    });\n  } catch (error) {\n    next(error);\n  }\n});\n\n/**\n * @route POST /api/ai/crop\n * @desc 裁剪圖片\n * @access Private\n */\nrouter.post('/crop', authenticate, upload.single('image'), async (req: Request, res: Response, next: NextFunction) => {\n  try {\n    if (!req.file) {\n      throw new AppError('請上傳圖片文件', 400);\n    }\n\n    const userId = (req.user as IUser)!._id.toString();\n    const cropOptions = imageCropSchema.parse(req.body) as {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n\n    logger.info('開始圖像裁剪', {\n      userId,\n      fileName: req.file.originalname,\n      cropOptions\n    });\n\n    // 裁剪圖像\n    const croppedBuffer = await AIService.cropImage(req.file.buffer, cropOptions);\n\n    // 上傳裁剪後的圖像到 Cloudinary\n    const uploadResult = await CloudinaryService.uploadFile(\n      croppedBuffer,\n      `cropped_${req.file.originalname}`,\n      req.file.mimetype,\n      userId,\n      'pet'\n    );\n\n    logger.info('圖像裁剪完成', {\n      userId,\n      url: uploadResult.secureUrl\n    });\n\n    res.json({\n      success: true,\n      message: '圖像裁剪完成',\n      data: {\n        url: uploadResult.secureUrl,\n        publicId: uploadResult.publicId,\n        cropOptions\n      }\n    });\n  } catch (error) {\n    next(error);\n  }\n});\n\n/**\n * @route POST /api/ai/similarity-search\n * @desc 基於圖像相似度搜尋寵物\n * @access Private\n */\nrouter.post('/similarity-search', authenticate, upload.single('image'), async (req: Request, res: Response, next: NextFunction) => {\n  try {\n    if (!req.file) {\n      throw new AppError('請上傳圖片文件', 400);\n    }\n\n    const userId = (req.user as IUser)!._id.toString();\n    const { threshold, limit } = similaritySearchSchema.parse(req.body);\n\n    logger.info('開始相似度搜尋', {\n      userId,\n      fileName: req.file.originalname,\n      threshold,\n      limit\n    });\n\n    // 提取上傳圖像的特徵\n    const queryFeatures = await AIService.extractImageFeatures(req.file.buffer);\n\n    // 獲取所有寵物記錄（實際應用中應該分批處理）\n    const pets = await Pet.find({ status: 'active' })\n      .populate('owner', 'username email')\n      .limit(1000); // 限制搜尋範圍\n\n    // 計算相似度並排序\n    const similarities: Array<{\n      pet: any;\n      similarity: number;\n    }> = [];\n\n    for (const pet of pets) {\n      if (pet.aiFeatures && pet.aiFeatures.length > 0) {\n        try {\n          // 使用第一個圖像特徵進行比較\n          const features = pet.aiFeatures[0]?.features || [];\n          const petFeatures = {\n            colorHistogram: features.slice(0, 256) || [],\n            textureFeatures: features.slice(256, 260) || [],\n            shapeFeatures: features.slice(260, 264) || [],\n            dominantColors: ['#000000'] // 簡化處理\n          };\n          const similarity = AIService.calculateImageSimilarity(\n            queryFeatures,\n            petFeatures\n          );\n          \n          if (similarity >= threshold) {\n            similarities.push({ pet, similarity });\n          }\n        } catch (error) {\n          logger.warn('相似度計算失敗', { petId: pet._id, error });\n        }\n      }\n    }\n\n    // 按相似度排序並限制結果數量\n    similarities.sort((a, b) => b.similarity - a.similarity);\n    const results = similarities.slice(0, limit);\n\n    logger.info('相似度搜尋完成', {\n      userId,\n      totalPets: pets.length,\n      matchedPets: results.length,\n      threshold\n    });\n\n    res.json({\n      success: true,\n      message: `找到 ${results.length} 個相似的寵物`,\n      data: {\n        results: results.map(({ pet, similarity }) => ({\n          pet: {\n            _id: pet._id,\n            name: pet.name,\n            type: pet.type,\n            breed: pet.breed,\n            description: pet.description,\n            images: pet.images,\n            location: pet.location,\n            status: pet.status,\n            createdAt: pet.createdAt,\n            owner: pet.userId\n          },\n          similarity: Math.round(similarity * 100) / 100\n        })),\n        searchParams: {\n          threshold,\n          limit,\n          totalScanned: pets.length\n        }\n      }\n    });\n  } catch (error) {\n    next(error);\n  }\n});\n\n/**\n * @route GET /api/ai/suggestions/:petId\n * @desc 基於寵物資料生成搜尋建議\n * @access Private\n */\nrouter.get('/suggestions/:petId', authenticate, async (req: Request, res: Response, next: NextFunction) => {\n  try {\n    const { petId } = req.params;\n    const userId = (req.user as IUser)!._id.toString();\n\n    // 獲取寵物資料\n    const pet = await Pet.findById(petId);\n    if (!pet) {\n      throw new AppError('寵物資料不存在', 404);\n    }\n\n    // 基於寵物資料生成建議\n    const suggestions: string[] = [];\n    \n    // 基本資訊建議\n    if (pet.type) suggestions.push(pet.type);\n    if (pet.breed && pet.breed !== '混種') suggestions.push(pet.breed);\n    if (pet.color) suggestions.push(pet.color);\n    if (pet.size) suggestions.push(pet.size);\n    \n    // 位置建議\n    if (pet.lastSeenLocation) {\n      const locationParts = pet.lastSeenLocation.split(/[,，\\s]+/);\n      suggestions.push(...locationParts.slice(0, 2));\n    }\n    \n    // 特徵建議\n    if (pet.aiTags && pet.aiTags.length > 0) {\n      suggestions.push(...pet.aiTags.slice(0, 3));\n    }\n\n    logger.info('生成搜尋建議', {\n      userId,\n      petId,\n      suggestionsCount: suggestions.length\n    });\n\n    res.json({\n      success: true,\n      message: '搜尋建議生成完成',\n      data: {\n        suggestions: suggestions.slice(0, 8), // 限制為 8 個建議\n        petInfo: {\n          name: pet.name,\n          type: pet.type,\n          breed: pet.breed\n        }\n      }\n    });\n  } catch (error) {\n    next(error);\n  }\n});\n\nexport { router as aiRoutes };"],"version":3}