f4981abd11670b30df2462ce4d79ead2
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReminderService = void 0;
const notificationService_1 = require("../notificationService");
const Pet_1 = require("../../models/Pet");
const User_1 = require("../../models/User");
const Notification_1 = require("../../models/Notification");
const logger_1 = require("../../utils/logger");
class ReminderService {
    /**
     * 初始化提醒服務
     */
    static initialize(config) {
        if (config) {
            this.config = { ...this.config, ...config };
        }
        this.start();
        logger_1.logger.info('提醒服務已初始化', { config: this.config });
    }
    /**
     * 啟動提醒任務
     */
    static start() {
        if (!this.config.enabled || this.interval)
            return;
        // 每小時檢查一次提醒
        this.interval = setInterval(async () => {
            try {
                await this.processReminders();
            }
            catch (error) {
                logger_1.logger.error('定期提醒任務失敗', { error });
            }
        }, 60 * 60 * 1000); // 1小時
        logger_1.logger.info('定期提醒任務已啟動');
    }
    /**
     * 停止提醒任務
     */
    static stop() {
        if (this.interval) {
            clearInterval(this.interval);
            this.interval = null;
            logger_1.logger.info('定期提醒任務已停止');
        }
    }
    /**
     * 處理定期提醒
     */
    static async processReminders() {
        try {
            const now = new Date();
            for (const days of this.config.intervals) {
                const targetDate = new Date(now.getTime() - days * 24 * 60 * 60 * 1000);
                const startOfDay = new Date(targetDate.getFullYear(), targetDate.getMonth(), targetDate.getDate());
                const endOfDay = new Date(startOfDay.getTime() + 24 * 60 * 60 * 1000);
                // 查找在目標日期創建且仍未找到的寵物
                const pets = await Pet_1.Pet.find({
                    status: { $in: ['lost', 'found'] },
                    createdAt: {
                        $gte: startOfDay,
                        $lt: endOfDay
                    }
                }).populate('owner');
                for (const pet of pets) {
                    try {
                        // 檢查是否已發送過此提醒
                        const existingReminder = await Notification_1.Notification.findOne({
                            userId: pet.userId,
                            type: 'REMINDER',
                            'data.petId': pet._id.toString(),
                            'data.reminderDay': days
                        });
                        if (!existingReminder) {
                            await this.sendReminderNotification(pet, days);
                        }
                    }
                    catch (error) {
                        logger_1.logger.error('發送提醒通知失敗', {
                            petId: pet._id,
                            days,
                            error
                        });
                    }
                }
            }
        }
        catch (error) {
            logger_1.logger.error('處理定期提醒失敗', { error });
        }
    }
    /**
     * 發送提醒通知
     */
    static async sendReminderNotification(pet, days) {
        const owner = await User_1.User.findById(pet.userId);
        const isLost = pet.status === 'lost';
        let title;
        let message;
        if (days === 1) {
            title = isLost ? '🔍 持續尋找中' : '📢 持續協尋中';
            message = `您的${isLost ? '失蹤' : '拾獲'}寵物 ${pet.name} 已經${days}天了，建議您更新資訊或擴大搜尋範圍。`;
        }
        else if (days <= 7) {
            title = isLost ? '💪 不要放棄' : '🤝 繼續協助';
            message = `${pet.name} 已經${isLost ? '失蹤' : '等待認領'}${days}天了，我們建議您分享到更多社群平台。`;
        }
        else {
            title = isLost ? '🌟 保持希望' : '❤️ 感謝您的愛心';
            message = `${pet.name} 已經${days}天了，雖然時間較長，但仍有很多成功案例。建議聯繫當地動物收容所。`;
        }
        await notificationService_1.NotificationService.sendNotification({
            userId: owner._id.toString(),
            type: 'REMINDER',
            title,
            message,
            data: {
                petId: pet._id.toString(),
                reminderDay: days,
                suggestions: this.getReminderSuggestions(pet, days)
            },
            priority: days <= 3 ? Notification_1.NotificationPriority.HIGH : Notification_1.NotificationPriority.NORMAL
        });
    }
    /**
     * 獲取提醒建議
     */
    static getReminderSuggestions(pet, days) {
        const suggestions = [];
        const isLost = pet.status === 'lost';
        if (days === 1) {
            suggestions.push(isLost ? '在附近張貼尋寵啟事' : '聯繫當地動物收容所', '分享到社群媒體', '通知鄰居和朋友');
        }
        else if (days <= 7) {
            suggestions.push('擴大搜尋範圍', '聯繫獸醫診所', '在寵物相關論壇發布', '考慮提供獎勵');
        }
        else {
            suggestions.push('聯繫動物收容所和救援組織', '在更多平台發布資訊', '考慮專業尋寵服務', '保持資訊更新');
        }
        return suggestions;
    }
    /**
     * 手動發送提醒
     */
    static async sendManualReminder(userId, petId, customMessage) {
        const pet = await Pet_1.Pet.findOne({ _id: petId, owner: userId });
        if (!pet) {
            throw new Error('寵物不存在或無權限');
        }
        const owner = await User_1.User.findById(userId);
        const daysSinceCreated = Math.floor((Date.now() - pet.createdAt.getTime()) / (24 * 60 * 60 * 1000));
        await notificationService_1.NotificationService.sendNotification({
            userId: owner._id.toString(),
            type: 'REMINDER',
            title: '📝 手動提醒',
            message: customMessage || `關於您的${pet.status === 'lost' ? '失蹤' : '拾獲'}寵物 ${pet.name} 的提醒`,
            data: {
                petId: pet._id.toString(),
                reminderDay: daysSinceCreated,
                isManual: true,
                suggestions: this.getReminderSuggestions(pet, daysSinceCreated)
            },
            priority: Notification_1.NotificationPriority.NORMAL
        });
        logger_1.logger.info('手動提醒已發送', { userId, petId });
    }
    /**
     * 獲取用戶的提醒統計
     */
    static async getUserReminderStats(userId, startDate, endDate) {
        const start = startDate || new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // 預設 30 天前
        const end = endDate || new Date();
        const reminders = await Notification_1.Notification.find({
            userId,
            type: 'REMINDER',
            createdAt: { $gte: start, $lte: end }
        }).sort({ createdAt: -1 });
        const remindersByDay = {};
        let lastReminderDate;
        for (const reminder of reminders) {
            const day = reminder.data?.reminderDay;
            if (day !== undefined) {
                remindersByDay[day] = (remindersByDay[day] || 0) + 1;
            }
            if (!lastReminderDate || reminder.createdAt > lastReminderDate) {
                lastReminderDate = reminder.createdAt;
            }
        }
        return {
            totalReminders: reminders.length,
            remindersByDay,
            lastReminderDate
        };
    }
    /**
     * 獲取配置
     */
    static getConfig() {
        return { ...this.config };
    }
    /**
     * 更新配置
     */
    static updateConfig(newConfig) {
        this.config = { ...this.config, ...newConfig };
        // 如果啟用狀態改變，重新啟動或停止服務
        if (newConfig.enabled !== undefined) {
            this.stop();
            if (newConfig.enabled) {
                this.start();
            }
        }
        logger_1.logger.info('提醒配置已更新', { config: this.config });
        return { ...this.config };
    }
    /**
     * 獲取統計信息
     */
    static async getStats() {
        const today = new Date();
        today.setHours(0, 0, 0, 0);
        const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);
        const sentToday = await Notification_1.Notification.countDocuments({
            type: 'REMINDER',
            createdAt: {
                $gte: today,
                $lt: tomorrow
            }
        });
        return {
            enabled: this.config.enabled,
            running: this.interval !== null,
            sentToday,
            config: { ...this.config }
        };
    }
}
exports.ReminderService = ReminderService;
ReminderService.config = {
    enabled: true,
    intervals: [1, 3, 7, 14, 30], // 1天, 3天, 1週, 2週, 1個月
    maxReminders: 5
};
ReminderService.interval = null;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxVc2VyXFxEZXNrdG9wXFx0cmFlcHJvamVjdFxcdGVzdDJcXHBldC1maW5kZXItYXBwXFxiYWNrZW5kXFxzcmNcXHNlcnZpY2VzXFxub3RpZmljYXRpb25zXFxyZW1pbmRlcnMudHMiLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0VBQTZEO0FBQzdELDBDQUE2QztBQUM3Qyw0Q0FBZ0Q7QUFDaEQsNERBQWlHO0FBQ2pHLCtDQUE0QztBQVE1QyxNQUFhLGVBQWU7SUFTMUI7O09BRUc7SUFDSCxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQWdDO1FBQ2hELElBQUksTUFBTSxFQUFFLENBQUM7WUFDWCxJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsTUFBTSxFQUFFLENBQUM7UUFDOUMsQ0FBQztRQUVELElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNiLGVBQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFFRDs7T0FFRztJQUNILE1BQU0sQ0FBQyxLQUFLO1FBQ1YsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxRQUFRO1lBQUUsT0FBTztRQUVsRCxZQUFZO1FBQ1osSUFBSSxDQUFDLFFBQVEsR0FBRyxXQUFXLENBQUMsS0FBSyxJQUFJLEVBQUU7WUFDckMsSUFBSSxDQUFDO2dCQUNILE1BQU0sSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7WUFDaEMsQ0FBQztZQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7Z0JBQ2YsZUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1lBQ3RDLENBQUM7UUFDSCxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU07UUFFMUIsZUFBTSxDQUFDLElBQUks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QUFDLE9BQU87WUFDNUIsT0FBTyxFQUFFLElBQUksQ0FBQyxRQUFRLEtBQUssSUFBSTtZQUMvQixTQUFTO1lBQ1QsTUFBTSxFQUFFLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFO1NBQzNCLENBQUM7SUFDSixDQUFDOztBQXJTSCwwQ0FzU0M7QUFyU2dCLHNCQUFNLEdBQW1CO0lBQ3RDLE9BQU8sRUFBRSxJQUFJO0lBQ2IsU0FBUyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLHNCQUFzQjtJQUNwRCxZQUFZLEVBQUUsQ0FBQztDQUNoQixDQUFDO0FBRWEsd0JBQVEsR0FBMEIsSUFBSSxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVXNlclxcRGVza3RvcFxcdHJhZXByb2plY3RcXHRlc3QyXFxwZXQtZmluZGVyLWFwcFxcYmFja2VuZFxcc3JjXFxzZXJ2aWNlc1xcbm90aWZpY2F0aW9uc1xccmVtaW5kZXJzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICcuLi9ub3RpZmljYXRpb25TZXJ2aWNlJztcbmltcG9ydCB7IFBldCwgSVBldCB9IGZyb20gJy4uLy4uL21vZGVscy9QZXQnO1xuaW1wb3J0IHsgVXNlciwgSVVzZXIgfSBmcm9tICcuLi8uLi9tb2RlbHMvVXNlcic7XG5pbXBvcnQgeyBOb3RpZmljYXRpb24sIE5vdGlmaWNhdGlvblR5cGUsIE5vdGlmaWNhdGlvblByaW9yaXR5IH0gZnJvbSAnLi4vLi4vbW9kZWxzL05vdGlmaWNhdGlvbic7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuLi8uLi91dGlscy9sb2dnZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlbWluZGVyQ29uZmlnIHtcbiAgZW5hYmxlZDogYm9vbGVhbjtcbiAgaW50ZXJ2YWxzOiBudW1iZXJbXTsgLy8gZGF5cyBhZnRlciBwZXQgbG9zdC9mb3VuZFxuICBtYXhSZW1pbmRlcnM6IG51bWJlcjtcbn1cblxuZXhwb3J0IGNsYXNzIFJlbWluZGVyU2VydmljZSB7XG4gIHByaXZhdGUgc3RhdGljIGNvbmZpZzogUmVtaW5kZXJDb25maWcgPSB7XG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICBpbnRlcnZhbHM6IFsxLCAzLCA3LCAxNCwgMzBdLCAvLyAx5aSpLCAz5aSpLCAx6YCxLCAy6YCxLCAx5YCL5pyIXG4gICAgbWF4UmVtaW5kZXJzOiA1XG4gIH07XG4gIFxuICBwcml2YXRlIHN0YXRpYyBpbnRlcnZhbDogTm9kZUpTLlRpbWVvdXQgfCBudWxsID0gbnVsbDtcblxuICAvKipcbiAgICog5Yid5aeL5YyW5o+Q6YaS5pyN5YuZXG4gICAqL1xuICBzdGF0aWMgaW5pdGlhbGl6ZShjb25maWc/OiBQYXJ0aWFsPFJlbWluZGVyQ29uZmlnPik6IHZvaWQge1xuICAgIGlmIChjb25maWcpIHtcbiAgICAgIHRoaXMuY29uZmlnID0geyAuLi50aGlzLmNvbmZpZywgLi4uY29uZmlnIH07XG4gICAgfVxuXG4gICAgdGhpcy5zdGFydCgpO1xuICAgIGxvZ2dlci5pbmZvKCfmj5DphpLmnI3li5nlt7LliJ3lp4vljJYnLCB7IGNvbmZpZzogdGhpcy5jb25maWcgfSk7XG4gIH1cblxuICAvKipcbiAgICog5ZWf5YuV5o+Q6YaS5Lu75YuZXG4gICAqL1xuICBzdGF0aWMgc3RhcnQoKTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLmNvbmZpZy5lbmFibGVkIHx8IHRoaXMuaW50ZXJ2YWwpIHJldHVybjtcblxuICAgIC8vIOavj+Wwj+aZguaqouafpeS4gOasoeaPkOmGklxuICAgIHRoaXMuaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChhc3luYyAoKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCB0aGlzLnByb2Nlc3NSZW1pbmRlcnMoKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGxvZ2dlci5lcnJvcign5a6a5pyf5o+Q6YaS5Lu75YuZ5aSx5pWXJywgeyBlcnJvciB9KTtcbiAgICAgIH1cbiAgICB9LCA2MCAqIDYwICogMTAwMCk7IC8vIDHlsI/mmYJcblxuICAgIGxvZ2dlci5pbmZvKCflrprmnJ/mj5DphpLku7vli5nlt7LllZ/li5UnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDlgZzmraLmj5DphpLku7vli5lcbiAgICovXG4gIHN0YXRpYyBzdG9wKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmludGVydmFsKSB7XG4gICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpO1xuICAgICAgdGhpcy5pbnRlcnZhbCA9IG51bGw7XG4gICAgICBsb2dnZXIuaW5mbygn5a6a5pyf5o+Q6YaS5Lu75YuZ5bey5YGc5q2iJyk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOiZleeQhuWumuacn+aPkOmGklxuICAgKi9cbiAgcHJpdmF0ZSBzdGF0aWMgYXN5bmMgcHJvY2Vzc1JlbWluZGVycygpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgIFxuICAgICAgZm9yIChjb25zdCBkYXlzIG9mIHRoaXMuY29uZmlnLmludGVydmFscykge1xuICAgICAgICBjb25zdCB0YXJnZXREYXRlID0gbmV3IERhdGUobm93LmdldFRpbWUoKSAtIGRheXMgKiAyNCAqIDYwICogNjAgKiAxMDAwKTtcbiAgICAgICAgY29uc3Qgc3RhcnRPZkRheSA9IG5ldyBEYXRlKHRhcmdldERhdGUuZ2V0RnVsbFllYXIoKSwgdGFyZ2V0RGF0ZS5nZXRNb250aCgpLCB0YXJnZXREYXRlLmdldERhdGUoKSk7XG4gICAgICAgIGNvbnN0IGVuZE9mRGF5ID0gbmV3IERhdGUoc3RhcnRPZkRheS5nZXRUaW1lKCkgKyAyNCAqIDYwICogNjAgKiAxMDAwKTtcblxuICAgICAgICAvLyDmn6Xmib7lnKjnm67mqJnml6XmnJ/libXlu7rkuJTku43mnKrmib7liLDnmoTlr7XnialcbiAgICAgICAgY29uc3QgcGV0cyA9IGF3YWl0IFBldC5maW5kKHtcbiAgICAgICAgICBzdGF0dXM6IHsgJGluOiBbJ2xvc3QnLCAnZm91bmQnXSB9LFxuICAgICAgICAgIGNyZWF0ZWRBdDoge1xuICAgICAgICAgICAgJGd0ZTogc3RhcnRPZkRheSxcbiAgICAgICAgICAgICRsdDogZW5kT2ZEYXlcbiAgICAgICAgICB9XG4gICAgICAgIH0pLnBvcHVsYXRlKCdvd25lcicpO1xuXG4gICAgICAgIGZvciAoY29uc3QgcGV0IG9mIHBldHMpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8g5qqi5p+l5piv5ZCm5bey55m86YCB6YGO5q2k5o+Q6YaSXG4gICAgICAgICAgICBjb25zdCBleGlzdGluZ1JlbWluZGVyID0gYXdhaXQgTm90aWZpY2F0aW9uLmZpbmRPbmUoe1xuICAgICAgICAgICAgICB1c2VySWQ6IHBldC51c2VySWQsXG4gICAgICAgICAgICAgIHR5cGU6ICdSRU1JTkRFUicsXG4gICAgICAgICAgICAgICdkYXRhLnBldElkJzogcGV0Ll9pZC50b1N0cmluZygpLFxuICAgICAgICAgICAgICAnZGF0YS5yZW1pbmRlckRheSc6IGRheXNcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAoIWV4aXN0aW5nUmVtaW5kZXIpIHtcbiAgICAgICAgICAgICAgYXdhaXQgdGhpcy5zZW5kUmVtaW5kZXJOb3RpZmljYXRpb24ocGV0LCBkYXlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgbG9nZ2VyLmVycm9yKCfnmbzpgIHmj5DphpLpgJrnn6XlpLHmlZcnLCB7IFxuICAgICAgICAgICAgICBwZXRJZDogcGV0Ll9pZCwgXG4gICAgICAgICAgICAgIGRheXMsIFxuICAgICAgICAgICAgICBlcnJvciBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoJ+iZleeQhuWumuacn+aPkOmGkuWkseaVlycsIHsgZXJyb3IgfSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIOeZvOmAgeaPkOmGkumAmuefpVxuICAgKi9cbiAgcHJpdmF0ZSBzdGF0aWMgYXN5bmMgc2VuZFJlbWluZGVyTm90aWZpY2F0aW9uKFxuICAgIHBldDogSVBldCxcbiAgICBkYXlzOiBudW1iZXJcbiAgKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgY29uc3Qgb3duZXIgPSBhd2FpdCBVc2VyLmZpbmRCeUlkKHBldC51c2VySWQpIGFzIElVc2VyO1xuICAgIGNvbnN0IGlzTG9zdCA9IHBldC5zdGF0dXMgPT09ICdsb3N0JztcbiAgICBcbiAgICBsZXQgdGl0bGU6IHN0cmluZztcbiAgICBsZXQgbWVzc2FnZTogc3RyaW5nO1xuICAgIFxuICAgIGlmIChkYXlzID09PSAxKSB7XG4gICAgICB0aXRsZSA9IGlzTG9zdCA/ICfwn5SNIOaMgee6jOWwi+aJvuS4rScgOiAn8J+ToiDmjIHnuozljZTlsIvkuK0nO1xuICAgICAgbWVzc2FnZSA9IGDmgqjnmoQke2lzTG9zdCA/ICflpLHouaQnIDogJ+aLvueNsid95a+154mpICR7cGV0Lm5hbWV9IOW3sue2kyR7ZGF5c33lpKnkuobvvIzlu7rorbDmgqjmm7TmlrDos4foqIrmiJbmk7TlpKfmkJzlsIvnr4TlnI3jgIJgO1xuICAgIH0gZWxzZSBpZiAoZGF5cyA8PSA3KSB7XG4gICAgICB0aXRsZSA9IGlzTG9zdCA/ICfwn5KqIOS4jeimgeaUvuajhCcgOiAn8J+knSDnubznuozljZTliqknO1xuICAgICAgbWVzc2FnZSA9IGAke3BldC5uYW1lfSDlt7LntpMke2lzTG9zdCA/ICflpLHouaQnIDogJ+etieW+heiqjemgmCd9JHtkYXlzfeWkqeS6hu+8jOaIkeWAkeW7uuitsOaCqOWIhuS6q+WIsOabtOWkmuekvue+pOW5s+WPsOOAgmA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRpdGxlID0gaXNMb3N0ID8gJ/CfjJ8g5L+d5oyB5biM5pybJyA6ICfinaTvuI8g5oSf6Kyd5oKo55qE5oSb5b+DJztcbiAgICAgIG1lc3NhZ2UgPSBgJHtwZXQubmFtZX0g5bey57aTJHtkYXlzfeWkqeS6hu+8jOmblueEtuaZgumWk+i8g+mVt++8jOS9huS7jeacieW+iOWkmuaIkOWKn+ahiOS+i+OAguW7uuitsOiBr+e5q+eVtuWcsOWLleeJqeaUtuWuueaJgOOAgmA7XG4gICAgfVxuXG4gICAgYXdhaXQgTm90aWZpY2F0aW9uU2VydmljZS5zZW5kTm90aWZpY2F0aW9uKHtcbiAgICAgIHVzZXJJZDogb3duZXIuX2lkLnRvU3RyaW5nKCksXG4gICAgICB0eXBlOiAnUkVNSU5ERVInIGFzIE5vdGlmaWNhdGlvblR5cGUsXG4gICAgICB0aXRsZSxcbiAgICAgIG1lc3NhZ2UsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIHBldElkOiBwZXQuX2lkLnRvU3RyaW5nKCksXG4gICAgICAgIHJlbWluZGVyRGF5OiBkYXlzLFxuICAgICAgICBzdWdnZXN0aW9uczogdGhpcy5nZXRSZW1pbmRlclN1Z2dlc3Rpb25zKHBldCwgZGF5cylcbiAgICAgIH0sXG4gICAgICBwcmlvcml0eTogZGF5cyA8PSAzID8gTm90aWZpY2F0aW9uUHJpb3JpdHkuSElHSCA6IE5vdGlmaWNhdGlvblByaW9yaXR5Lk5PUk1BTFxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIOeNsuWPluaPkOmGkuW7uuitsFxuICAgKi9cbiAgcHJpdmF0ZSBzdGF0aWMgZ2V0UmVtaW5kZXJTdWdnZXN0aW9ucyhwZXQ6IElQZXQsIGRheXM6IG51bWJlcik6IHN0cmluZ1tdIHtcbiAgICBjb25zdCBzdWdnZXN0aW9uczogc3RyaW5nW10gPSBbXTtcbiAgICBjb25zdCBpc0xvc3QgPSBwZXQuc3RhdHVzID09PSAnbG9zdCc7XG5cbiAgICBpZiAoZGF5cyA9PT0gMSkge1xuICAgICAgc3VnZ2VzdGlvbnMucHVzaChcbiAgICAgICAgaXNMb3N0ID8gJ+WcqOmZhOi/keW8teiyvOWwi+WvteWVn+S6iycgOiAn6IGv57mr55W25Zyw5YuV54mp5pS25a655omAJyxcbiAgICAgICAgJ+WIhuS6q+WIsOekvue+pOWqkumrlCcsXG4gICAgICAgICfpgJrnn6XphLDlsYXlkozmnIvlj4snXG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAoZGF5cyA8PSA3KSB7XG4gICAgICBzdWdnZXN0aW9ucy5wdXNoKFxuICAgICAgICAn5pO05aSn5pCc5bCL56+E5ZyNJyxcbiAgICAgICAgJ+iBr+e5q+eNuOmGq+iouuaJgCcsXG4gICAgICAgICflnKjlr7Xniannm7jpl5zoq5blo4fnmbzluIMnLFxuICAgICAgICAn6ICD5oWu5o+Q5L6b542O5Yu1J1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3VnZ2VzdGlvbnMucHVzaChcbiAgICAgICAgJ+iBr+e5q+WLleeJqeaUtuWuueaJgOWSjOaVkeaPtOe1hOe5lCcsXG4gICAgICAgICflnKjmm7TlpJrlubPlj7DnmbzluIPos4foqIonLFxuICAgICAgICAn6ICD5oWu5bCI5qWt5bCL5a+15pyN5YuZJyxcbiAgICAgICAgJ+S/neaMgeizh+ioiuabtOaWsCdcbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN1Z2dlc3Rpb25zO1xuICB9XG5cbiAgLyoqXG4gICAqIOaJi+WLleeZvOmAgeaPkOmGklxuICAgKi9cbiAgc3RhdGljIGFzeW5jIHNlbmRNYW51YWxSZW1pbmRlcihcbiAgICB1c2VySWQ6IHN0cmluZyxcbiAgICBwZXRJZDogc3RyaW5nLFxuICAgIGN1c3RvbU1lc3NhZ2U/OiBzdHJpbmdcbiAgKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgY29uc3QgcGV0ID0gYXdhaXQgUGV0LmZpbmRPbmUoeyBfaWQ6IHBldElkLCBvd25lcjogdXNlcklkIH0pO1xuICAgIGlmICghcGV0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ+WvteeJqeS4jeWtmOWcqOaIlueEoeasiumZkCcpO1xuICAgIH1cblxuICAgIGNvbnN0IG93bmVyID0gYXdhaXQgVXNlci5maW5kQnlJZCh1c2VySWQpIGFzIElVc2VyO1xuICAgIGNvbnN0IGRheXNTaW5jZUNyZWF0ZWQgPSBNYXRoLmZsb29yKFxuICAgICAgKERhdGUubm93KCkgLSBwZXQuY3JlYXRlZEF0LmdldFRpbWUoKSkgLyAoMjQgKiA2MCAqIDYwICogMTAwMClcbiAgICApO1xuXG4gICAgYXdhaXQgTm90aWZpY2F0aW9uU2VydmljZS5zZW5kTm90aWZpY2F0aW9uKHtcbiAgICAgIHVzZXJJZDogb3duZXIuX2lkLnRvU3RyaW5nKCksXG4gICAgICB0eXBlOiAnUkVNSU5ERVInIGFzIE5vdGlmaWNhdGlvblR5cGUsXG4gICAgICB0aXRsZTogJ/Cfk50g5omL5YuV5o+Q6YaSJyxcbiAgICAgIG1lc3NhZ2U6IGN1c3RvbU1lc3NhZ2UgfHwgYOmXnOaWvOaCqOeahCR7cGV0LnN0YXR1cyA9PT0gJ2xvc3QnID8gJ+Wksei5pCcgOiAn5ou+542yJ33lr7XniakgJHtwZXQubmFtZX0g55qE5o+Q6YaSYCxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgcGV0SWQ6IHBldC5faWQudG9TdHJpbmcoKSxcbiAgICAgICAgcmVtaW5kZXJEYXk6IGRheXNTaW5jZUNyZWF0ZWQsXG4gICAgICAgIGlzTWFudWFsOiB0cnVlLFxuICAgICAgICBzdWdnZXN0aW9uczogdGhpcy5nZXRSZW1pbmRlclN1Z2dlc3Rpb25zKHBldCwgZGF5c1NpbmNlQ3JlYXRlZClcbiAgICAgIH0sXG4gICAgICBwcmlvcml0eTogTm90aWZpY2F0aW9uUHJpb3JpdHkuTk9STUFMXG4gICAgfSk7XG5cbiAgICBsb2dnZXIuaW5mbygn5omL5YuV5o+Q6YaS5bey55m86YCBJywgeyB1c2VySWQsIHBldElkIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIOeNsuWPlueUqOaItueahOaPkOmGkue1seioiFxuICAgKi9cbiAgc3RhdGljIGFzeW5jIGdldFVzZXJSZW1pbmRlclN0YXRzKHVzZXJJZDogc3RyaW5nLCBzdGFydERhdGU/OiBEYXRlLCBlbmREYXRlPzogRGF0ZSk6IFByb21pc2U8e1xuICAgIHRvdGFsUmVtaW5kZXJzOiBudW1iZXI7XG4gICAgcmVtaW5kZXJzQnlEYXk6IFJlY29yZDxudW1iZXIsIG51bWJlcj47XG4gICAgbGFzdFJlbWluZGVyRGF0ZT86IERhdGU7XG4gIH0+IHtcbiAgICBjb25zdCBzdGFydCA9IHN0YXJ0RGF0ZSB8fCBuZXcgRGF0ZShEYXRlLm5vdygpIC0gMzAgKiAyNCAqIDYwICogNjAgKiAxMDAwKTsgLy8g6aCQ6KitIDMwIOWkqeWJjVxuICAgIGNvbnN0IGVuZCA9IGVuZERhdGUgfHwgbmV3IERhdGUoKTtcblxuICAgIGNvbnN0IHJlbWluZGVycyA9IGF3YWl0IE5vdGlmaWNhdGlvbi5maW5kKHtcbiAgICAgIHVzZXJJZCxcbiAgICAgIHR5cGU6ICdSRU1JTkRFUicsXG4gICAgICBjcmVhdGVkQXQ6IHsgJGd0ZTogc3RhcnQsICRsdGU6IGVuZCB9XG4gICAgfSkuc29ydCh7IGNyZWF0ZWRBdDogLTEgfSk7XG5cbiAgICBjb25zdCByZW1pbmRlcnNCeURheTogUmVjb3JkPG51bWJlciwgbnVtYmVyPiA9IHt9O1xuICAgIGxldCBsYXN0UmVtaW5kZXJEYXRlOiBEYXRlIHwgdW5kZWZpbmVkO1xuXG4gICAgZm9yIChjb25zdCByZW1pbmRlciBvZiByZW1pbmRlcnMpIHtcbiAgICAgIGNvbnN0IGRheSA9IHJlbWluZGVyLmRhdGE/LnJlbWluZGVyRGF5IGFzIG51bWJlcjtcbiAgICAgIGlmIChkYXkgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZW1pbmRlcnNCeURheVtkYXldID0gKHJlbWluZGVyc0J5RGF5W2RheV0gfHwgMCkgKyAxO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAoIWxhc3RSZW1pbmRlckRhdGUgfHwgcmVtaW5kZXIuY3JlYXRlZEF0ID4gbGFzdFJlbWluZGVyRGF0ZSkge1xuICAgICAgICBsYXN0UmVtaW5kZXJEYXRlID0gcmVtaW5kZXIuY3JlYXRlZEF0O1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICB0b3RhbFJlbWluZGVyczogcmVtaW5kZXJzLmxlbmd0aCxcbiAgICAgIHJlbWluZGVyc0J5RGF5LFxuICAgICAgbGFzdFJlbWluZGVyRGF0ZVxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICog542y5Y+W6YWN572uXG4gICAqL1xuICBzdGF0aWMgZ2V0Q29uZmlnKCk6IFJlbWluZGVyQ29uZmlnIHtcbiAgICByZXR1cm4geyAuLi50aGlzLmNvbmZpZyB9O1xuICB9XG5cbiAgLyoqXG4gICAqIOabtOaWsOmFjee9rlxuICAgKi9cbiAgc3RhdGljIHVwZGF0ZUNvbmZpZyhuZXdDb25maWc6IFBhcnRpYWw8UmVtaW5kZXJDb25maWc+KTogUmVtaW5kZXJDb25maWcge1xuICAgIHRoaXMuY29uZmlnID0geyAuLi50aGlzLmNvbmZpZywgLi4ubmV3Q29uZmlnIH07XG4gICAgXG4gICAgLy8g5aaC5p6c5ZWf55So54uA5oWL5pS56K6K77yM6YeN5paw5ZWf5YuV5oiW5YGc5q2i5pyN5YuZXG4gICAgaWYgKG5ld0NvbmZpZy5lbmFibGVkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRoaXMuc3RvcCgpO1xuICAgICAgaWYgKG5ld0NvbmZpZy5lbmFibGVkKSB7XG4gICAgICAgIHRoaXMuc3RhcnQoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgbG9nZ2VyLmluZm8oJ+aPkOmGkumFjee9ruW3suabtOaWsCcsIHsgY29uZmlnOiB0aGlzLmNvbmZpZyB9KTtcbiAgICByZXR1cm4geyAuLi50aGlzLmNvbmZpZyB9O1xuICB9XG5cbiAgLyoqXG4gICAqIOeNsuWPlue1seioiOS/oeaBr1xuICAgKi9cbiAgc3RhdGljIGFzeW5jIGdldFN0YXRzKCk6IFByb21pc2U8e1xuICAgIGVuYWJsZWQ6IGJvb2xlYW47XG4gICAgcnVubmluZzogYm9vbGVhbjtcbiAgICBzZW50VG9kYXk6IG51bWJlcjtcbiAgICBjb25maWc6IFJlbWluZGVyQ29uZmlnO1xuICB9PiB7XG4gICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICAgIHRvZGF5LnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICAgIGNvbnN0IHRvbW9ycm93ID0gbmV3IERhdGUodG9kYXkuZ2V0VGltZSgpICsgMjQgKiA2MCAqIDYwICogMTAwMCk7XG5cbiAgICBjb25zdCBzZW50VG9kYXkgPSBhd2FpdCBOb3RpZmljYXRpb24uY291bnREb2N1bWVudHMoe1xuICAgICAgdHlwZTogJ1JFTUlOREVSJyxcbiAgICAgIGNyZWF0ZWRBdDoge1xuICAgICAgICAkZ3RlOiB0b2RheSxcbiAgICAgICAgJGx0OiB0b21vcnJvd1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGVuYWJsZWQ6IHRoaXMuY29uZmlnLmVuYWJsZWQsXG4gICAgICBydW5uaW5nOiB0aGlzLmludGVydmFsICE9PSBudWxsLFxuICAgICAgc2VudFRvZGF5LFxuICAgICAgY29uZmlnOiB7IC4uLnRoaXMuY29uZmlnIH1cbiAgICB9O1xuICB9XG59Il0sInZlcnNpb24iOjN9