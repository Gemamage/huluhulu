abaf17d8f90f8b9b6af5586eb252c743
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReportStats = exports.Report = void 0;
const mongoose_1 = __importStar(require("mongoose"));
// 舉報 Schema
const reportSchema = new mongoose_1.Schema({
    reporterId: {
        type: mongoose_1.Schema.Types.ObjectId,
        ref: 'User',
        required: [true, '舉報者ID為必填項目'],
        index: true,
    },
    reportedUserId: {
        type: mongoose_1.Schema.Types.ObjectId,
        ref: 'User',
        default: null,
        index: true,
    },
    reportedContentId: {
        type: mongoose_1.Schema.Types.ObjectId,
        default: null,
        index: true,
    },
    contentType: {
        type: String,
        enum: ['user', 'comment', 'review', 'message', 'pet'],
        required: [true, '內容類型為必填項目'],
        index: true,
    },
    reportType: {
        type: String,
        required: [true, '舉報類型為必填項目'],
        enum: [
            '不當內容',
            '騷擾行為',
            '虛假信息',
            '垃圾訊息',
            '詐騙行為',
            '侵犯隱私',
            '仇恨言論',
            '暴力威脅',
            '侵犯版權',
            '其他'
        ],
        index: true,
    },
    reason: {
        type: String,
        required: [true, '舉報原因為必填項目'],
        trim: true,
        maxlength: [200, '舉報原因不能超過 200 個字符'],
    },
    description: {
        type: String,
        trim: true,
        maxlength: [1000, '詳細描述不能超過 1000 個字符'],
        default: '',
    },
    evidence: [{
            type: String,
            validate: {
                validator: function (url) {
                    return /^https?:\/\/.+/.test(url);
                },
                message: '證據必須是有效的URL',
            },
        }],
    status: {
        type: String,
        enum: ['pending', 'investigating', 'resolved', 'dismissed'],
        default: 'pending',
        required: true,
        index: true,
    },
    priority: {
        type: String,
        enum: ['low', 'medium', 'high', 'urgent'],
        default: 'medium',
        required: true,
        index: true,
    },
    assignedTo: {
        type: mongoose_1.Schema.Types.ObjectId,
        ref: 'User',
        default: null,
        index: true,
    },
    resolution: {
        type: String,
        trim: true,
        maxlength: [1000, '處理結果不能超過 1000 個字符'],
        default: '',
    },
    resolvedAt: {
        type: Date,
        default: null,
    },
    resolvedBy: {
        type: mongoose_1.Schema.Types.ObjectId,
        ref: 'User',
        default: null,
    },
    isDeleted: {
        type: Boolean,
        default: false,
        index: true,
    },
}, {
    timestamps: true,
    toJSON: {
        transform: function (doc, ret) {
            ret.id = ret._id;
            delete ret._id;
            delete ret.__v;
            return ret;
        },
    },
});
// 舉報統計 Schema
const reportStatsSchema = new mongoose_1.Schema({
    userId: {
        type: mongoose_1.Schema.Types.ObjectId,
        ref: 'User',
        default: null,
        index: true,
    },
    contentId: {
        type: mongoose_1.Schema.Types.ObjectId,
        default: null,
        index: true,
    },
    contentType: {
        type: String,
        required: true,
        index: true,
    },
    totalReports: {
        type: Number,
        default: 0,
        min: 0,
    },
    reportTypes: [{
            type: {
                type: String,
                required: true,
            },
            count: {
                type: Number,
                required: true,
                min: 1,
            },
        }],
    statusDistribution: {
        pending: { type: Number, default: 0, min: 0 },
        investigating: { type: Number, default: 0, min: 0 },
        resolved: { type: Number, default: 0, min: 0 },
        dismissed: { type: Number, default: 0, min: 0 },
    },
    lastReportedAt: {
        type: Date,
        default: Date.now,
    },
    riskLevel: {
        type: String,
        enum: ['low', 'medium', 'high', 'critical'],
        default: 'low',
        index: true,
    },
}, {
    timestamps: true,
    toJSON: {
        transform: function (doc, ret) {
            ret.id = ret._id;
            delete ret._id;
            delete ret.__v;
            return ret;
        },
    },
});
// 複合索引
reportSchema.index({ reporterId: 1, reportedUserId: 1, contentType: 1 });
reportSchema.index({ reportedContentId: 1, contentType: 1 });
reportSchema.index({ status: 1, priority: 1, createdAt: -1 });
reportSchema.index({ assignedTo: 1, status: 1 });
reportSchema.index({ createdAt: -1, status: 1 });
// 防止重複舉報同一內容
reportSchema.index({
    reporterId: 1,
    reportedContentId: 1,
    contentType: 1
}, {
    unique: true,
    partialFilterExpression: {
        reportedContentId: { $ne: null },
        isDeleted: false
    }
});
// 注意：查詢時需要手動添加 { isDeleted: false } 條件
// 自動設置優先級的中介軟體
reportSchema.pre('save', function (next) {
    if (this.isNew) {
        // 根據舉報類型自動設置優先級
        const highPriorityTypes = ['暴力威脅', '騷擾行為', '詐騙行為'];
        const urgentTypes = ['仇恨言論'];
        if (urgentTypes.includes(this.reportType)) {
            this.priority = 'urgent';
        }
        else if (highPriorityTypes.includes(this.reportType)) {
            this.priority = 'high';
        }
    }
    next();
});
// 狀態變更時的中介軟體
reportSchema.pre('findOneAndUpdate', function (next) {
    const update = this.getUpdate();
    if (update.status === 'resolved' || update.status === 'dismissed') {
        update.resolvedAt = new Date();
    }
    next();
});
exports.Report = mongoose_1.default.model('Report', reportSchema);
exports.ReportStats = mongoose_1.default.model('ReportStats', reportStatsSchema);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,