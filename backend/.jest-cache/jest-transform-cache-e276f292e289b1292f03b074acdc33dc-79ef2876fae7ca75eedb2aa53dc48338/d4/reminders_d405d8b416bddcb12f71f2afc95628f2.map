{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\services\\notifications\\reminders.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\services\\notifications\\reminders.ts"],"sourcesContent":["import { NotificationService } from '../notificationService';\nimport { Pet, IPet } from '../../models/Pet';\nimport { User, IUser } from '../../models/User';\nimport { Notification, NotificationType, NotificationPriority } from '../../models/Notification';\nimport { logger } from '../../utils/logger';\n\nexport interface ReminderConfig {\n  enabled: boolean;\n  intervals: number[]; // days after pet lost/found\n  maxReminders: number;\n}\n\nexport class ReminderService {\n  private static config: ReminderConfig = {\n    enabled: true,\n    intervals: [1, 3, 7, 14, 30], // 1天, 3天, 1週, 2週, 1個月\n    maxReminders: 5\n  };\n  \n  private static interval: NodeJS.Timeout | null = null;\n\n  /**\n   * 初始化提醒服務\n   */\n  static initialize(config?: Partial<ReminderConfig>): void {\n    if (config) {\n      this.config = { ...this.config, ...config };\n    }\n\n    this.start();\n    logger.info('提醒服務已初始化', { config: this.config });\n  }\n\n  /**\n   * 啟動提醒任務\n   */\n  static start(): void {\n    if (!this.config.enabled || this.interval) return;\n\n    // 每小時檢查一次提醒\n    this.interval = setInterval(async () => {\n      try {\n        await this.processReminders();\n      } catch (error) {\n        logger.error('定期提醒任務失敗', { error });\n      }\n    }, 60 * 60 * 1000); // 1小時\n\n    logger.info('定期提醒任務已啟動');\n  }\n\n  /**\n   * 停止提醒任務\n   */\n  static stop(): void {\n    if (this.interval) {\n      clearInterval(this.interval);\n      this.interval = null;\n      logger.info('定期提醒任務已停止');\n    }\n  }\n\n  /**\n   * 處理定期提醒\n   */\n  private static async processReminders(): Promise<void> {\n    try {\n      const now = new Date();\n      \n      for (const days of this.config.intervals) {\n        const targetDate = new Date(now.getTime() - days * 24 * 60 * 60 * 1000);\n        const startOfDay = new Date(targetDate.getFullYear(), targetDate.getMonth(), targetDate.getDate());\n        const endOfDay = new Date(startOfDay.getTime() + 24 * 60 * 60 * 1000);\n\n        // 查找在目標日期創建且仍未找到的寵物\n        const pets = await Pet.find({\n          status: { $in: ['lost', 'found'] },\n          createdAt: {\n            $gte: startOfDay,\n            $lt: endOfDay\n          }\n        }).populate('owner');\n\n        for (const pet of pets) {\n          try {\n            // 檢查是否已發送過此提醒\n            const existingReminder = await Notification.findOne({\n              userId: pet.userId,\n              type: 'REMINDER',\n              'data.petId': pet._id.toString(),\n              'data.reminderDay': days\n            });\n\n            if (!existingReminder) {\n              await this.sendReminderNotification(pet, days);\n            }\n          } catch (error) {\n            logger.error('發送提醒通知失敗', { \n              petId: pet._id, \n              days, \n              error \n            });\n          }\n        }\n      }\n    } catch (error) {\n      logger.error('處理定期提醒失敗', { error });\n    }\n  }\n\n  /**\n   * 發送提醒通知\n   */\n  private static async sendReminderNotification(\n    pet: IPet,\n    days: number\n  ): Promise<void> {\n    const owner = await User.findById(pet.userId) as IUser;\n    const isLost = pet.status === 'lost';\n    \n    let title: string;\n    let message: string;\n    \n    if (days === 1) {\n      title = isLost ? '🔍 持續尋找中' : '📢 持續協尋中';\n      message = `您的${isLost ? '失蹤' : '拾獲'}寵物 ${pet.name} 已經${days}天了，建議您更新資訊或擴大搜尋範圍。`;\n    } else if (days <= 7) {\n      title = isLost ? '💪 不要放棄' : '🤝 繼續協助';\n      message = `${pet.name} 已經${isLost ? '失蹤' : '等待認領'}${days}天了，我們建議您分享到更多社群平台。`;\n    } else {\n      title = isLost ? '🌟 保持希望' : '❤️ 感謝您的愛心';\n      message = `${pet.name} 已經${days}天了，雖然時間較長，但仍有很多成功案例。建議聯繫當地動物收容所。`;\n    }\n\n    await NotificationService.sendNotification({\n      userId: owner._id.toString(),\n      type: 'REMINDER' as NotificationType,\n      title,\n      message,\n      data: {\n        petId: pet._id.toString(),\n        reminderDay: days,\n        suggestions: this.getReminderSuggestions(pet, days)\n      },\n      priority: days <= 3 ? NotificationPriority.HIGH : NotificationPriority.NORMAL\n    });\n  }\n\n  /**\n   * 獲取提醒建議\n   */\n  private static getReminderSuggestions(pet: IPet, days: number): string[] {\n    const suggestions: string[] = [];\n    const isLost = pet.status === 'lost';\n\n    if (days === 1) {\n      suggestions.push(\n        isLost ? '在附近張貼尋寵啟事' : '聯繫當地動物收容所',\n        '分享到社群媒體',\n        '通知鄰居和朋友'\n      );\n    } else if (days <= 7) {\n      suggestions.push(\n        '擴大搜尋範圍',\n        '聯繫獸醫診所',\n        '在寵物相關論壇發布',\n        '考慮提供獎勵'\n      );\n    } else {\n      suggestions.push(\n        '聯繫動物收容所和救援組織',\n        '在更多平台發布資訊',\n        '考慮專業尋寵服務',\n        '保持資訊更新'\n      );\n    }\n\n    return suggestions;\n  }\n\n  /**\n   * 手動發送提醒\n   */\n  static async sendManualReminder(\n    userId: string,\n    petId: string,\n    customMessage?: string\n  ): Promise<void> {\n    const pet = await Pet.findOne({ _id: petId, owner: userId });\n    if (!pet) {\n      throw new Error('寵物不存在或無權限');\n    }\n\n    const owner = await User.findById(userId) as IUser;\n    const daysSinceCreated = Math.floor(\n      (Date.now() - pet.createdAt.getTime()) / (24 * 60 * 60 * 1000)\n    );\n\n    await NotificationService.sendNotification({\n      userId: owner._id.toString(),\n      type: 'REMINDER' as NotificationType,\n      title: '📝 手動提醒',\n      message: customMessage || `關於您的${pet.status === 'lost' ? '失蹤' : '拾獲'}寵物 ${pet.name} 的提醒`,\n      data: {\n        petId: pet._id.toString(),\n        reminderDay: daysSinceCreated,\n        isManual: true,\n        suggestions: this.getReminderSuggestions(pet, daysSinceCreated)\n      },\n      priority: NotificationPriority.NORMAL\n    });\n\n    logger.info('手動提醒已發送', { userId, petId });\n  }\n\n  /**\n   * 獲取用戶的提醒統計\n   */\n  static async getUserReminderStats(userId: string, startDate?: Date, endDate?: Date): Promise<{\n    totalReminders: number;\n    remindersByDay: Record<number, number>;\n    lastReminderDate?: Date;\n  }> {\n    const start = startDate || new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // 預設 30 天前\n    const end = endDate || new Date();\n\n    const reminders = await Notification.find({\n      userId,\n      type: 'REMINDER',\n      createdAt: { $gte: start, $lte: end }\n    }).sort({ createdAt: -1 });\n\n    const remindersByDay: Record<number, number> = {};\n    let lastReminderDate: Date | undefined;\n\n    for (const reminder of reminders) {\n      const day = reminder.data?.reminderDay as number;\n      if (day !== undefined) {\n        remindersByDay[day] = (remindersByDay[day] || 0) + 1;\n      }\n      \n      if (!lastReminderDate || reminder.createdAt > lastReminderDate) {\n        lastReminderDate = reminder.createdAt;\n      }\n    }\n\n    return {\n      totalReminders: reminders.length,\n      remindersByDay,\n      lastReminderDate\n    };\n  }\n\n  /**\n   * 獲取配置\n   */\n  static getConfig(): ReminderConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * 更新配置\n   */\n  static updateConfig(newConfig: Partial<ReminderConfig>): ReminderConfig {\n    this.config = { ...this.config, ...newConfig };\n    \n    // 如果啟用狀態改變，重新啟動或停止服務\n    if (newConfig.enabled !== undefined) {\n      this.stop();\n      if (newConfig.enabled) {\n        this.start();\n      }\n    }\n    \n    logger.info('提醒配置已更新', { config: this.config });\n    return { ...this.config };\n  }\n\n  /**\n   * 獲取統計信息\n   */\n  static async getStats(): Promise<{\n    enabled: boolean;\n    running: boolean;\n    sentToday: number;\n    config: ReminderConfig;\n  }> {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\n\n    const sentToday = await Notification.countDocuments({\n      type: 'REMINDER',\n      createdAt: {\n        $gte: today,\n        $lt: tomorrow\n      }\n    });\n\n    return {\n      enabled: this.config.enabled,\n      running: this.interval !== null,\n      sentToday,\n      config: { ...this.config }\n    };\n  }\n}"],"version":3}