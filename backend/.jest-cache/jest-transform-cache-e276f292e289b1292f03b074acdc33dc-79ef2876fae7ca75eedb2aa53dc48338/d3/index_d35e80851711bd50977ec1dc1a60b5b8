dae361972b711ce8feddcaa4e4c4625d
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.userService = exports.UserListResult = exports.UserQueryOptions = exports.AdminUpdateUserData = exports.UpdateUserData = exports.LoginUserData = exports.RegisterUserData = exports.UserService = void 0;
const basic_1 = require("./basic");
Object.defineProperty(exports, "RegisterUserData", { enumerable: true, get: function () { return basic_1.RegisterUserData; } });
Object.defineProperty(exports, "LoginUserData", { enumerable: true, get: function () { return basic_1.LoginUserData; } });
Object.defineProperty(exports, "UpdateUserData", { enumerable: true, get: function () { return basic_1.UpdateUserData; } });
const password_1 = require("./password");
const verification_1 = require("./verification");
const admin_1 = require("./admin");
Object.defineProperty(exports, "AdminUpdateUserData", { enumerable: true, get: function () { return admin_1.AdminUpdateUserData; } });
Object.defineProperty(exports, "UserQueryOptions", { enumerable: true, get: function () { return admin_1.UserQueryOptions; } });
const query_1 = require("./query");
Object.defineProperty(exports, "UserListResult", { enumerable: true, get: function () { return query_1.UserListResult; } });
const logger_1 = require("../../utils/logger");
/**
 * 統一的用戶服務 - 整合所有用戶相關功能
 */
class UserService {
    constructor() {
        this.basicService = new basic_1.BasicUserService();
        this.passwordService = new password_1.PasswordService();
        this.verificationService = new verification_1.VerificationService();
        this.adminService = new admin_1.AdminUserService();
        this.queryService = new query_1.UserQueryService();
    }
    // ===== 基本用戶操作 =====
    /**
     * 用戶註冊
     */
    async register(userData) {
        const result = await this.basicService.register(userData);
        // 自動發送郵件驗證
        try {
            await this.verificationService.sendEmailVerification(result.user._id.toString());
        }
        catch (error) {
            logger_1.logger.warn("註冊後發送驗證郵件失敗", { error, userId: result.user._id });
        }
        return result;
    }
    /**
     * 用戶登入
     */
    async login(loginData) {
        return this.basicService.login(loginData);
    }
    /**
     * 根據 ID 獲取用戶
     */
    async getUserById(userId) {
        return this.basicService.getUserById(userId);
    }
    /**
     * 根據郵箱獲取用戶
     */
    async getUserByEmail(email) {
        return this.basicService.getUserByEmail(email);
    }
    /**
     * 更新用戶資料
     */
    async updateUser(userId, updateData) {
        return this.basicService.updateUser(userId, updateData);
    }
    /**
     * 停用用戶帳號
     */
    async deactivateUser(userId) {
        return this.basicService.deactivateUser(userId);
    }
    // ===== 密碼管理 =====
    /**
     * 變更密碼
     */
    async changePassword(userId, currentPassword, newPassword) {
        return this.passwordService.changePassword(userId, currentPassword, newPassword);
    }
    /**
     * 請求密碼重設
     */
    async requestPasswordReset(email) {
        return this.passwordService.requestPasswordReset(email);
    }
    /**
     * 重設密碼
     */
    async resetPassword(token, newPassword) {
        return this.passwordService.resetPassword(token, newPassword);
    }
    /**
     * 驗證密碼重設令牌
     */
    async validateResetToken(token) {
        return this.passwordService.validateResetToken(token);
    }
    // ===== 郵件驗證 =====
    /**
     * 發送郵件驗證
     */
    async sendEmailVerification(userId) {
        return this.verificationService.sendEmailVerification(userId);
    }
    /**
     * 驗證郵箱（通過用戶ID）
     */
    async verifyEmailByUserId(userId) {
        return this.verificationService.verifyEmailByUserId(userId);
    }
    /**
     * 驗證郵箱（通過令牌）
     */
    async verifyEmailByToken(token) {
        return this.verificationService.verifyEmailByToken(token);
    }
    /**
     * 重新發送驗證郵件
     */
    async resendEmailVerification(email) {
        return this.verificationService.resendEmailVerification(email);
    }
    /**
     * 驗證郵件驗證令牌
     */
    async validateVerificationToken(token) {
        return this.verificationService.validateVerificationToken(token);
    }
    /**
     * 獲取用戶驗證狀態
     */
    async getVerificationStatus(userId) {
        return this.verificationService.getVerificationStatus(userId);
    }
    // ===== 用戶查詢和統計 =====
    /**
     * 獲取用戶列表（帶篩選和分頁）
     */
    async getUserList(options = {}) {
        return this.queryService.getUserList(options);
    }
    /**
     * 搜索用戶
     */
    async searchUsers(searchTerm, options = {}) {
        return this.queryService.searchUsers(searchTerm, options);
    }
    /**
     * 根據角色獲取用戶列表
     */
    async getUsersByRole(role, options = {}) {
        return this.queryService.getUsersByRole(role, options);
    }
    /**
     * 獲取最近註冊的用戶
     */
    async getRecentUsers(limit = 10) {
        return this.queryService.getRecentUsers(limit);
    }
    /**
     * 獲取活躍用戶列表
     */
    async getActiveUsers(options = {}) {
        return this.queryService.getActiveUsers(options);
    }
    /**
     * 獲取用戶統計信息
     */
    async getUserStatistics() {
        return this.queryService.getUserStatistics();
    }
    /**
     * 檢查用戶是否存在
     */
    async userExists(identifier, type = "id") {
        return this.queryService.userExists(identifier, type);
    }
    // ===== 管理員功能 =====
    /**
     * 管理員獲取用戶列表（帶篩選和分頁）
     */
    async getAdminUserList(options = {}) {
        return this.adminService.getAdminUserList(options);
    }
    /**
     * 管理員獲取單個用戶詳情
     */
    async getAdminUserById(userId) {
        return this.adminService.getAdminUserById(userId);
    }
    /**
     * 管理員更新用戶資料
     */
    async adminUpdateUser(userId, updateData, adminUser) {
        return this.adminService.adminUpdateUser(userId, updateData, adminUser);
    }
    /**
     * 管理員刪除用戶（軟刪除）
     */
    async adminDeleteUser(userId, adminUser) {
        return this.adminService.adminDeleteUser(userId, adminUser);
    }
    /**
     * 管理員重設用戶密碼
     */
    async adminResetUserPassword(userId, adminUser) {
        return this.adminService.adminResetUserPassword(userId, adminUser);
    }
    /**
     * 管理員批量操作用戶
     */
    async adminBatchUpdateUsers(userIds, updateData, adminUser) {
        return this.adminService.adminBatchUpdateUsers(userIds, updateData, adminUser);
    }
    /**
     * 獲取系統統計
     */
    async getSystemStatistics() {
        return this.adminService.getSystemStatistics();
    }
    /**
     * 管理員搜索用戶
     */
    async adminSearchUsers(searchTerm, options = {}) {
        return this.adminService.adminSearchUsers(searchTerm, options);
    }
    // ===== 維護功能 =====
    /**
     * 清理過期令牌
     */
    async cleanupExpiredTokens() {
        const [passwordTokens, verificationTokens, queryTokens] = await Promise.all([
            this.passwordService.cleanupExpiredResetTokens(),
            this.verificationService.cleanupExpiredVerificationTokens(),
            this.queryService.cleanupExpiredTokens(),
        ]);
        const totalDeleted = passwordTokens.deletedCount +
            verificationTokens.deletedCount +
            queryTokens.deletedCount;
        logger_1.logger.info("清理過期令牌完成", {
            passwordTokens: passwordTokens.deletedCount,
            verificationTokens: verificationTokens.deletedCount,
            queryTokens: queryTokens.deletedCount,
            total: totalDeleted,
        });
        return { deletedCount: totalDeleted };
    }
}
exports.UserService = UserService;
// 導出默認實例
exports.userService = new UserService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,