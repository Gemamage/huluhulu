{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\schemas\\auth.ts","mappings":";;;AAAA,6BAAwB;AAExB,SAAS;AACI,QAAA,WAAW,GAAG,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;AAC/C,QAAA,cAAc,GAAG,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;AACrD,QAAA,WAAW,GAAG,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,oBAAoB,EAAE,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC9E,QAAA,UAAU,GAAG,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,iBAAiB,CAAC,CAAC;AAEzF,WAAW;AACE,QAAA,sBAAsB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC7C,KAAK,EAAE,mBAAW;IAClB,QAAQ,EAAE,sBAAc;IACxB,IAAI,EAAE,kBAAU;IAChB,KAAK,EAAE,mBAAW;CACnB,CAAC,CAAC;AAEH,WAAW;AACE,QAAA,eAAe,GAAG,OAAC,CAAC,MAAM,CAAC;IACtC,KAAK,EAAE,mBAAW;IAClB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC;CACvC,CAAC,CAAC;AAEH,WAAW;AACE,QAAA,gBAAgB,GAAG,OAAC,CAAC,MAAM,CAAC;IACvC,IAAI,EAAE,kBAAU,CAAC,QAAQ,EAAE;IAC3B,KAAK,EAAE,mBAAW;IAClB,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE;CAClD,CAAC,CAAC,OAAO,EAAE,CAAC;AAEb,WAAW;AACE,QAAA,mBAAmB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC1C,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC;IACnC,WAAW,EAAE,sBAAc;CAC5B,CAAC,CAAC;AAEH,WAAW;AACE,QAAA,oBAAoB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC3C,KAAK,EAAE,mBAAW;CACnB,CAAC,CAAC;AAEH,aAAa;AACA,QAAA,uBAAuB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC9C,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,WAAW,CAAC;CACtC,CAAC,CAAC;AAEH,aAAa;AACA,QAAA,6BAA6B,GAAG,OAAC,CAAC,MAAM,CAAC;IACpD,KAAK,EAAE,mBAAW;CACnB,CAAC,CAAC","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\schemas\\auth.ts"],"sourcesContent":["import { z } from 'zod';\n\n// 基礎驗證規則\nexport const emailSchema = z.string().email('請提供有效的電子郵件地址');\nexport const passwordSchema = z.string().min(6, '密碼長度至少需要 6 個字符');\nexport const phoneSchema = z.string().regex(/^[+]?[0-9\\s\\-()]+$/, '請提供有效的電話號碼').optional();\nexport const nameSchema = z.string().trim().min(1, '姓名為必填項目').max(50, '姓名長度不能超過 50 個字符');\n\n// 用戶註冊驗證架構\nexport const userRegistrationSchema = z.object({\n  email: emailSchema,\n  password: passwordSchema,\n  name: nameSchema,\n  phone: phoneSchema,\n});\n\n// 用戶登入驗證架構\nexport const userLoginSchema = z.object({\n  email: emailSchema,\n  password: z.string().min(1, '密碼為必填項目'),\n});\n\n// 用戶更新驗證架構\nexport const userUpdateSchema = z.object({\n  name: nameSchema.optional(),\n  phone: phoneSchema,\n  avatar: z.string().url('請提供有效的圖片 URL').optional(),\n}).partial();\n\n// 密碼重設驗證架構\nexport const passwordResetSchema = z.object({\n  token: z.string().min(1, '請提供重設令牌'),\n  newPassword: passwordSchema,\n});\n\n// 忘記密碼驗證架構\nexport const forgotPasswordSchema = z.object({\n  email: emailSchema,\n});\n\n// 電子郵件驗證參數架構\nexport const verifyEmailParamsSchema = z.object({\n  token: z.string().min(1, '驗證令牌為必填項目'),\n});\n\n// 重新發送驗證郵件架構\nexport const resendVerificationEmailSchema = z.object({\n  email: emailSchema,\n});\n\n// 類型導出\nexport type UserRegistrationData = z.infer<typeof userRegistrationSchema>;\nexport type UserLoginData = z.infer<typeof userLoginSchema>;\nexport type UserUpdateData = z.infer<typeof userUpdateSchema>;\nexport type PasswordResetData = z.infer<typeof passwordResetSchema>;\nexport type ForgotPasswordData = z.infer<typeof forgotPasswordSchema>;\nexport type VerifyEmailParams = z.infer<typeof verifyEmailParamsSchema>;\nexport type ResendVerificationEmailData = z.infer<typeof resendVerificationEmailSchema>;"],"version":3}