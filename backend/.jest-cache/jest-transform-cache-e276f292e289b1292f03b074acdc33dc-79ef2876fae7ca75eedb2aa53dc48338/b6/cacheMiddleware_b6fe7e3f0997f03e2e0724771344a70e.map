{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\middleware\\cacheMiddleware.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\middleware\\cacheMiddleware.ts"],"sourcesContent":["// 快取中間件 - 為 Express 路由提供自動快取功能\nimport { Request, Response, NextFunction } from 'express';\nimport { cacheService } from '../services/cacheService';\nimport { logger } from '../utils/logger';\n\n/**\n * 快取中間件選項\n */\ninterface CacheOptions {\n  ttl?: number; // 快取存活時間（毫秒）\n  keyGenerator?: (req: Request) => string; // 自定義快取鍵生成器\n  condition?: (req: Request) => boolean; // 快取條件判斷\n  skipMethods?: string[]; // 跳過快取的 HTTP 方法\n}\n\n/**\n * 創建快取中間件\n */\nexport function createCacheMiddleware(options: CacheOptions = {}) {\n  const {\n    ttl = 5 * 60 * 1000, // 預設5分鐘\n    keyGenerator = defaultKeyGenerator,\n    condition = () => true,\n    skipMethods = ['POST', 'PUT', 'DELETE', 'PATCH']\n  } = options;\n\n  return async (req: Request, res: Response, next: NextFunction) => {\n    // 檢查是否應該跳過快取\n    if (skipMethods.includes(req.method) || !condition(req)) {\n      return next();\n    }\n\n    const cacheKey = keyGenerator(req);\n    \n    try {\n      // 嘗試從快取獲取數據\n      const cachedData = cacheService.get(cacheKey);\n      \n      if (cachedData) {\n        logger.debug(`快取命中: ${cacheKey}`);\n        return res.json(cachedData);\n      }\n\n      // 攔截 res.json 方法來快取回應\n      const originalJson = res.json.bind(res);\n      res.json = function(data: any) {\n        // 只快取成功的回應\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n          cacheService.set(cacheKey, data, ttl);\n          logger.debug(`快取設置: ${cacheKey}`);\n        }\n        return originalJson(data);\n      };\n\n      next();\n    } catch (error) {\n      logger.error('快取中間件錯誤:', error);\n      next(); // 發生錯誤時繼續執行，不影響正常流程\n    }\n  };\n}\n\n/**\n * 預設快取鍵生成器\n */\nfunction defaultKeyGenerator(req: Request): string {\n  const { method, originalUrl, query, params } = req;\n  const queryStr = Object.keys(query).length > 0 ? JSON.stringify(query) : '';\n  const paramsStr = Object.keys(params).length > 0 ? JSON.stringify(params) : '';\n  \n  return `route:${method}:${originalUrl}:${queryStr}:${paramsStr}`;\n}\n\n/**\n * 寵物相關路由的快取鍵生成器\n */\nexport function petCacheKeyGenerator(req: Request): string {\n  const { method, path, params, query } = req;\n  \n  if (path.includes('/pets/:id')) {\n    return `pet:${params.id}`;\n  }\n  \n  if (path.includes('/pets/owner/:ownerId')) {\n    return `pets:owner:${params.ownerId}`;\n  }\n  \n  if (path.includes('/pets')) {\n    const { page = 1, limit = 10, ...filters } = query;\n    const filterStr = Object.keys(filters).length > 0 ? JSON.stringify(filters) : 'none';\n    return `pets:all:page:${page}:limit:${limit}:filters:${filterStr}`;\n  }\n  \n  return defaultKeyGenerator(req);\n}\n\n/**\n * 搜尋相關路由的快取鍵生成器\n */\nexport function searchCacheKeyGenerator(req: Request): string {\n  const { query } = req;\n  const { q, ...filters } = query;\n  const filterStr = Object.keys(filters).length > 0 ? JSON.stringify(filters) : 'none';\n  \n  return `search:${q}:filters:${filterStr}`;\n}\n\n/**\n * 快取失效中間件 - 用於數據修改後清除相關快取\n */\nexport function createCacheInvalidationMiddleware(patterns: string[]) {\n  return (req: Request, res: Response, next: NextFunction) => {\n    // 攔截回應，在成功後清除快取\n    const originalJson = res.json.bind(res);\n    res.json = function(data: any) {\n      // 只在成功回應時清除快取\n      if (res.statusCode >= 200 && res.statusCode < 300) {\n        patterns.forEach(pattern => {\n          // 替換模式中的參數\n          const dynamicPattern = pattern.replace(/:(\\w+)/g, (match, paramName) => {\n            return req.params[paramName] || match;\n          });\n          \n          if (dynamicPattern.includes('*') || dynamicPattern.startsWith('^')) {\n            cacheService.deletePattern(dynamicPattern);\n          } else {\n            cacheService.delete(dynamicPattern);\n          }\n          \n          logger.debug(`快取失效: ${dynamicPattern}`);\n        });\n      }\n      return originalJson(data);\n    };\n    \n    next();\n  };\n}\n\n/**\n * 條件快取中間件 - 根據用戶角色或其他條件決定是否快取\n */\nexport function conditionalCacheMiddleware(options: CacheOptions & {\n  userCondition?: (req: Request) => boolean;\n}) {\n  const { userCondition, ...cacheOptions } = options;\n  \n  return createCacheMiddleware({\n    ...cacheOptions,\n    condition: (req: Request) => {\n      // 檢查基本條件\n      if (cacheOptions.condition && !cacheOptions.condition(req)) {\n        return false;\n      }\n      \n      // 檢查用戶條件\n      if (userCondition && !userCondition(req)) {\n        return false;\n      }\n      \n      return true;\n    }\n  });\n}\n\n/**\n * 快取統計中間件 - 記錄快取使用統計\n */\nexport function cacheStatsMiddleware() {\n  let requestCount = 0;\n  let cacheHits = 0;\n  \n  return (req: Request, res: Response, next: NextFunction) => {\n    requestCount++;\n    \n    // 檢查是否為快取命中（通過檢查回應時間）\n    const startTime = Date.now();\n    \n    res.on('finish', () => {\n      const responseTime = Date.now() - startTime;\n      \n      // 如果回應時間很短，可能是快取命中\n      if (responseTime < 10) {\n        cacheHits++;\n      }\n      \n      // 每100個請求記錄一次統計\n      if (requestCount % 100 === 0) {\n        const hitRate = ((cacheHits / requestCount) * 100).toFixed(2);\n        logger.info(`快取統計 - 請求數: ${requestCount}, 命中率: ${hitRate}%`);\n      }\n    });\n    \n    next();\n  };\n}\n\nconsole.log('✅ CacheMiddleware 已載入');"],"version":3}