959342a5bd1ad71e38b4946a968ee138
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createCacheMiddleware = createCacheMiddleware;
exports.petCacheKeyGenerator = petCacheKeyGenerator;
exports.searchCacheKeyGenerator = searchCacheKeyGenerator;
exports.createCacheInvalidationMiddleware = createCacheInvalidationMiddleware;
exports.conditionalCacheMiddleware = conditionalCacheMiddleware;
exports.cacheStatsMiddleware = cacheStatsMiddleware;
const cacheService_1 = require("../services/cacheService");
const logger_1 = require("../utils/logger");
/**
 * 創建快取中間件
 */
function createCacheMiddleware(options = {}) {
    const { ttl = 5 * 60 * 1000, // 預設5分鐘
    keyGenerator = defaultKeyGenerator, condition = () => true, skipMethods = ['POST', 'PUT', 'DELETE', 'PATCH'] } = options;
    return async (req, res, next) => {
        // 檢查是否應該跳過快取
        if (skipMethods.includes(req.method) || !condition(req)) {
            return next();
        }
        const cacheKey = keyGenerator(req);
        try {
            // 嘗試從快取獲取數據
            const cachedData = cacheService_1.cacheService.get(cacheKey);
            if (cachedData) {
                logger_1.logger.debug(`快取命中: ${cacheKey}`);
                return res.json(cachedData);
            }
            // 攔截 res.json 方法來快取回應
            const originalJson = res.json.bind(res);
            res.json = function (data) {
                // 只快取成功的回應
                if (res.statusCode >= 200 && res.statusCode < 300) {
                    cacheService_1.cacheService.set(cacheKey, data, ttl);
                    logger_1.logger.debug(`快取設置: ${cacheKey}`);
                }
                return originalJson(data);
            };
            next();
        }
        catch (error) {
            logger_1.logger.error('快取中間件錯誤:', error);
            next(); // 發生錯誤時繼續執行，不影響正常流程
        }
    };
}
/**
 * 預設快取鍵生成器
 */
function defaultKeyGenerator(req) {
    const { method, originalUrl, query, params } = req;
    const queryStr = Object.keys(query).length > 0 ? JSON.stringify(query) : '';
    const paramsStr = Object.keys(params).length > 0 ? JSON.stringify(params) : '';
    return `route:${method}:${originalUrl}:${queryStr}:${paramsStr}`;
}
/**
 * 寵物相關路由的快取鍵生成器
 */
function petCacheKeyGenerator(req) {
    const { method, path, params, query } = req;
    if (path.includes('/pets/:id')) {
        return `pet:${params.id}`;
    }
    if (path.includes('/pets/owner/:ownerId')) {
        return `pets:owner:${params.ownerId}`;
    }
    if (path.includes('/pets')) {
        const { page = 1, limit = 10, ...filters } = query;
        const filterStr = Object.keys(filters).length > 0 ? JSON.stringify(filters) : 'none';
        return `pets:all:page:${page}:limit:${limit}:filters:${filterStr}`;
    }
    return defaultKeyGenerator(req);
}
/**
 * 搜尋相關路由的快取鍵生成器
 */
function searchCacheKeyGenerator(req) {
    const { query } = req;
    const { q, ...filters } = query;
    const filterStr = Object.keys(filters).length > 0 ? JSON.stringify(filters) : 'none';
    return `search:${q}:filters:${filterStr}`;
}
/**
 * 快取失效中間件 - 用於數據修改後清除相關快取
 */
function createCacheInvalidationMiddleware(patterns) {
    return (req, res, next) => {
        // 攔截回應，在成功後清除快取
        const originalJson = res.json.bind(res);
        res.json = function (data) {
            // 只在成功回應時清除快取
            if (res.statusCode >= 200 && res.statusCode < 300) {
                patterns.forEach(pattern => {
                    // 替換模式中的參數
                    const dynamicPattern = pattern.replace(/:(\w+)/g, (match, paramName) => {
                        return req.params[paramName] || match;
                    });
                    if (dynamicPattern.includes('*') || dynamicPattern.startsWith('^')) {
                        cacheService_1.cacheService.deletePattern(dynamicPattern);
                    }
                    else {
                        cacheService_1.cacheService.delete(dynamicPattern);
                    }
                    logger_1.logger.debug(`快取失效: ${dynamicPattern}`);
                });
            }
            return originalJson(data);
        };
        next();
    };
}
/**
 * 條件快取中間件 - 根據用戶角色或其他條件決定是否快取
 */
function conditionalCacheMiddleware(options) {
    const { userCondition, ...cacheOptions } = options;
    return createCacheMiddleware({
        ...cacheOptions,
        condition: (req) => {
            // 檢查基本條件
            if (cacheOptions.condition && !cacheOptions.condition(req)) {
                return false;
            }
            // 檢查用戶條件
            if (userCondition && !userCondition(req)) {
                return false;
            }
            return true;
        }
    });
}
/**
 * 快取統計中間件 - 記錄快取使用統計
 */
function cacheStatsMiddleware() {
    let requestCount = 0;
    let cacheHits = 0;
    return (req, res, next) => {
        requestCount++;
        // 檢查是否為快取命中（通過檢查回應時間）
        const startTime = Date.now();
        res.on('finish', () => {
            const responseTime = Date.now() - startTime;
            // 如果回應時間很短，可能是快取命中
            if (responseTime < 10) {
                cacheHits++;
            }
            // 每100個請求記錄一次統計
            if (requestCount % 100 === 0) {
                const hitRate = ((cacheHits / requestCount) * 100).toFixed(2);
                logger_1.logger.info(`快取統計 - 請求數: ${requestCount}, 命中率: ${hitRate}%`);
            }
        });
        next();
    };
}
console.log('✅ CacheMiddleware 已載入');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,