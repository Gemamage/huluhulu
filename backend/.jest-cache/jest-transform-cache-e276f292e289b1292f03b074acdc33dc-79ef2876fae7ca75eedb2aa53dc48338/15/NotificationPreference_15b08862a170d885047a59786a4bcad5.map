{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\models\\NotificationPreference.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\models\\NotificationPreference.ts"],"sourcesContent":["import mongoose, { Document, Schema, Model } from 'mongoose';\nimport { NotificationType } from './Notification';\n\n/**\n * 通知偏好設定介面\n */\nexport interface INotificationPreference extends Document {\n  _id: mongoose.Types.ObjectId;\n  userId: mongoose.Types.ObjectId;\n  preferences: {\n    [key in NotificationType]: {\n      push: boolean;    // 推播通知\n      email: boolean;   // Email 通知\n      inApp: boolean;   // 站內通知\n    };\n  };\n  globalSettings: {\n    pushEnabled: boolean;     // 全域推播開關\n    emailEnabled: boolean;    // 全域 Email 開關\n    quietHours: {\n      enabled: boolean;\n      startTime: string;      // 格式: \"22:00\"\n      endTime: string;        // 格式: \"08:00\"\n      timezone: string;       // 時區\n    };\n    frequency: {\n      immediate: boolean;     // 立即通知\n      digest: boolean;        // 摘要通知\n      digestTime: string;     // 摘要發送時間\n    };\n  };\n  deviceTokens: {\n    fcm: string[];           // Firebase Cloud Messaging tokens\n    apns: string[];          // Apple Push Notification tokens\n  };\n  createdAt: Date;\n  updatedAt: Date;\n\n  // 實例方法\n  updatePreference(\n    type: NotificationType,\n    channel: 'push' | 'email' | 'inApp',\n    enabled: boolean\n  ): Promise<INotificationPreference>;\n  addDeviceToken(platform: 'fcm' | 'apns', token: string): Promise<INotificationPreference>;\n  removeDeviceToken(platform: 'fcm' | 'apns', token: string): Promise<INotificationPreference>;\n  removeDeviceTokens(tokens: string[]): Promise<INotificationPreference>;\n  isQuietTime(): boolean;\n  shouldReceiveNotification(\n    type: NotificationType,\n    channel: 'push' | 'email' | 'inApp'\n  ): boolean;\n}\n\n/**\n * 預設通知偏好設定\n */\nconst defaultPreferences = {\n  [NotificationType.PET_FOUND]: {\n    push: true,\n    email: true,\n    inApp: true,\n  },\n  [NotificationType.PET_MISSING]: {\n    push: true,\n    email: false,\n    inApp: true,\n  },\n  [NotificationType.MATCH_FOUND]: {\n    push: true,\n    email: true,\n    inApp: true,\n  },\n  [NotificationType.MESSAGE_RECEIVED]: {\n    push: true,\n    email: false,\n    inApp: true,\n  },\n  [NotificationType.MESSAGE]: {\n    push: true,\n    email: false,\n    inApp: true,\n  },\n  [NotificationType.COMMENT]: {\n    push: true,\n    email: false,\n    inApp: true,\n  },\n  [NotificationType.REPLY]: {\n    push: true,\n    email: false,\n    inApp: true,\n  },\n  [NotificationType.REVIEW]: {\n    push: true,\n    email: false,\n    inApp: true,\n  },\n  [NotificationType.REPORT]: {\n    push: false,\n    email: true,\n    inApp: true,\n  },\n  [NotificationType.REPORT_RESOLVED]: {\n    push: true,\n    email: false,\n    inApp: true,\n  },\n  [NotificationType.SYSTEM_UPDATE]: {\n    push: false,\n    email: false,\n    inApp: true,\n  },\n  [NotificationType.ACCOUNT_SECURITY]: {\n    push: true,\n    email: true,\n    inApp: true,\n  },\n};\n\n/**\n * 通知偏好設定 Schema\n */\nconst notificationPreferenceSchema = new Schema<INotificationPreference>(\n  {\n    userId: {\n      type: Schema.Types.ObjectId,\n      ref: 'User',\n      required: true,\n      unique: true,\n      index: true,\n    },\n    preferences: {\n      type: Schema.Types.Mixed,\n      default: defaultPreferences,\n    },\n    globalSettings: {\n      pushEnabled: {\n        type: Boolean,\n        default: true,\n      },\n      emailEnabled: {\n        type: Boolean,\n        default: true,\n      },\n      quietHours: {\n        enabled: {\n          type: Boolean,\n          default: false,\n        },\n        startTime: {\n          type: String,\n          default: '22:00',\n          validate: {\n            validator: function (v: string) {\n              return /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/.test(v);\n            },\n            message: '時間格式必須為 HH:MM',\n          },\n        },\n        endTime: {\n          type: String,\n          default: '08:00',\n          validate: {\n            validator: function (v: string) {\n              return /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/.test(v);\n            },\n            message: '時間格式必須為 HH:MM',\n          },\n        },\n        timezone: {\n          type: String,\n          default: 'Asia/Taipei',\n        },\n      },\n      frequency: {\n        immediate: {\n          type: Boolean,\n          default: true,\n        },\n        digest: {\n          type: Boolean,\n          default: false,\n        },\n        digestTime: {\n          type: String,\n          default: '09:00',\n          validate: {\n            validator: function (v: string) {\n              return /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/.test(v);\n            },\n            message: '時間格式必須為 HH:MM',\n          },\n        },\n      },\n    },\n    deviceTokens: {\n      fcm: {\n        type: [String],\n        default: [],\n      },\n      apns: {\n        type: [String],\n        default: [],\n      },\n    },\n  },\n  {\n    timestamps: true,\n    collection: 'notification_preferences',\n  }\n);\n\n// 實例方法\nnotificationPreferenceSchema.methods.updatePreference = function (\n  type: NotificationType,\n  channel: 'push' | 'email' | 'inApp',\n  enabled: boolean\n) {\n  if (!this.preferences[type]) {\n    this.preferences[type] = defaultPreferences[type];\n  }\n  this.preferences[type][channel] = enabled;\n  this.markModified('preferences');\n  return this.save();\n};\n\nnotificationPreferenceSchema.methods.addDeviceToken = function (\n  platform: 'fcm' | 'apns',\n  token: string\n) {\n  if (!this.deviceTokens[platform].includes(token)) {\n    this.deviceTokens[platform].push(token);\n    return this.save();\n  }\n  return Promise.resolve(this);\n};\n\nnotificationPreferenceSchema.methods.removeDeviceToken = function (\n  platform: 'fcm' | 'apns',\n  token: string\n) {\n  const index = this.deviceTokens[platform].indexOf(token);\n  if (index > -1) {\n    this.deviceTokens[platform].splice(index, 1);\n    return this.save();\n  }\n  return Promise.resolve(this);\n};\n\nnotificationPreferenceSchema.methods.removeDeviceTokens = function (\n  tokens: string[]\n) {\n  let modified = false;\n  \n  tokens.forEach(token => {\n    // 檢查 FCM tokens\n    const fcmIndex = this.deviceTokens.fcm.indexOf(token);\n    if (fcmIndex > -1) {\n      this.deviceTokens.fcm.splice(fcmIndex, 1);\n      modified = true;\n    }\n    \n    // 檢查 APNS tokens\n    const apnsIndex = this.deviceTokens.apns.indexOf(token);\n    if (apnsIndex > -1) {\n      this.deviceTokens.apns.splice(apnsIndex, 1);\n      modified = true;\n    }\n  });\n  \n  if (modified) {\n    return this.save();\n  }\n  return Promise.resolve(this);\n};\n\nnotificationPreferenceSchema.methods.isQuietTime = function () {\n  if (!this.globalSettings.quietHours.enabled) {\n    return false;\n  }\n\n  const now = new Date();\n  const currentTime = now.toLocaleTimeString('en-GB', {\n    hour12: false,\n    hour: '2-digit',\n    minute: '2-digit',\n    timeZone: this.globalSettings.quietHours.timezone,\n  });\n\n  const startTime = this.globalSettings.quietHours.startTime;\n  const endTime = this.globalSettings.quietHours.endTime;\n\n  // 處理跨日情況（例如 22:00 到 08:00）\n  if (startTime > endTime) {\n    return currentTime >= startTime || currentTime <= endTime;\n  } else {\n    return currentTime >= startTime && currentTime <= endTime;\n  }\n};\n\nnotificationPreferenceSchema.methods.shouldReceiveNotification = function (\n  type: NotificationType,\n  channel: 'push' | 'email' | 'inApp'\n) {\n  // 檢查全域設定\n  if (channel === 'push' && !this.globalSettings.pushEnabled) {\n    return false;\n  }\n  if (channel === 'email' && !this.globalSettings.emailEnabled) {\n    return false;\n  }\n\n  // 檢查安靜時間（僅適用於推播通知）\n  if (channel === 'push' && this.isQuietTime()) {\n    return false;\n  }\n\n  // 檢查特定類型的偏好設定\n  const preference = this.preferences[type];\n  if (!preference) {\n    return defaultPreferences[type][channel];\n  }\n\n  return preference[channel];\n};\n\n/**\n * 靜態方法介面\n */\ninterface INotificationPreferenceModel extends Model<INotificationPreference> {\n  findByUserId(userId: string | mongoose.Types.ObjectId): Promise<INotificationPreference | null>;\n  createDefault(userId: string | mongoose.Types.ObjectId): Promise<INotificationPreference>;\n}\n\n// 靜態方法\nnotificationPreferenceSchema.statics.findByUserId = function (userId: string | mongoose.Types.ObjectId) {\n  const objectId = typeof userId === 'string' ? new mongoose.Types.ObjectId(userId) : userId;\n  return this.findOne({ userId: objectId });\n};\n\nnotificationPreferenceSchema.statics.createDefault = function (userId: string | mongoose.Types.ObjectId) {\n  const objectId = typeof userId === 'string' ? new mongoose.Types.ObjectId(userId) : userId;\n  return this.create({\n    userId: objectId,\n    preferences: defaultPreferences,\n  });\n};\n\nexport const NotificationPreference = mongoose.model<INotificationPreference, INotificationPreferenceModel>(\n  'NotificationPreference',\n  notificationPreferenceSchema\n);\nexport default NotificationPreference;"],"version":3}