fb98da6423d27f9787d6f109f7a1d5d8
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationPreference = void 0;
const mongoose_1 = __importStar(require("mongoose"));
const Notification_1 = require("./Notification");
/**
 * 預設通知偏好設定
 */
const defaultPreferences = {
    [Notification_1.NotificationType.PET_FOUND]: {
        push: true,
        email: true,
        inApp: true,
    },
    [Notification_1.NotificationType.PET_MISSING]: {
        push: true,
        email: false,
        inApp: true,
    },
    [Notification_1.NotificationType.MATCH_FOUND]: {
        push: true,
        email: true,
        inApp: true,
    },
    [Notification_1.NotificationType.MESSAGE_RECEIVED]: {
        push: true,
        email: false,
        inApp: true,
    },
    [Notification_1.NotificationType.MESSAGE]: {
        push: true,
        email: false,
        inApp: true,
    },
    [Notification_1.NotificationType.COMMENT]: {
        push: true,
        email: false,
        inApp: true,
    },
    [Notification_1.NotificationType.REPLY]: {
        push: true,
        email: false,
        inApp: true,
    },
    [Notification_1.NotificationType.REVIEW]: {
        push: true,
        email: false,
        inApp: true,
    },
    [Notification_1.NotificationType.REPORT]: {
        push: false,
        email: true,
        inApp: true,
    },
    [Notification_1.NotificationType.REPORT_RESOLVED]: {
        push: true,
        email: false,
        inApp: true,
    },
    [Notification_1.NotificationType.SYSTEM_UPDATE]: {
        push: false,
        email: false,
        inApp: true,
    },
    [Notification_1.NotificationType.ACCOUNT_SECURITY]: {
        push: true,
        email: true,
        inApp: true,
    },
};
/**
 * 通知偏好設定 Schema
 */
const notificationPreferenceSchema = new mongoose_1.Schema({
    userId: {
        type: mongoose_1.Schema.Types.ObjectId,
        ref: 'User',
        required: true,
        unique: true,
        index: true,
    },
    preferences: {
        type: mongoose_1.Schema.Types.Mixed,
        default: defaultPreferences,
    },
    globalSettings: {
        pushEnabled: {
            type: Boolean,
            default: true,
        },
        emailEnabled: {
            type: Boolean,
            default: true,
        },
        quietHours: {
            enabled: {
                type: Boolean,
                default: false,
            },
            startTime: {
                type: String,
                default: '22:00',
                validate: {
                    validator: function (v) {
                        return /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/.test(v);
                    },
                    message: '時間格式必須為 HH:MM',
                },
            },
            endTime: {
                type: String,
                default: '08:00',
                validate: {
                    validator: function (v) {
                        return /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/.test(v);
                    },
                    message: '時間格式必須為 HH:MM',
                },
            },
            timezone: {
                type: String,
                default: 'Asia/Taipei',
            },
        },
        frequency: {
            immediate: {
                type: Boolean,
                default: true,
            },
            digest: {
                type: Boolean,
                default: false,
            },
            digestTime: {
                type: String,
                default: '09:00',
                validate: {
                    validator: function (v) {
                        return /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/.test(v);
                    },
                    message: '時間格式必須為 HH:MM',
                },
            },
        },
    },
    deviceTokens: {
        fcm: {
            type: [String],
            default: [],
        },
        apns: {
            type: [String],
            default: [],
        },
    },
}, {
    timestamps: true,
    collection: 'notification_preferences',
});
// 實例方法
notificationPreferenceSchema.methods.updatePreference = function (type, channel, enabled) {
    if (!this.preferences[type]) {
        this.preferences[type] = defaultPreferences[type];
    }
    this.preferences[type][channel] = enabled;
    this.markModified('preferences');
    return this.save();
};
notificationPreferenceSchema.methods.addDeviceToken = function (platform, token) {
    if (!this.deviceTokens[platform].includes(token)) {
        this.deviceTokens[platform].push(token);
        return this.save();
    }
    return Promise.resolve(this);
};
notificationPreferenceSchema.methods.removeDeviceToken = function (platform, token) {
    const index = this.deviceTokens[platform].indexOf(token);
    if (index > -1) {
        this.deviceTokens[platform].splice(index, 1);
        return this.save();
    }
    return Promise.resolve(this);
};
notificationPreferenceSchema.methods.removeDeviceTokens = function (tokens) {
    let modified = false;
    tokens.forEach(token => {
        // 檢查 FCM tokens
        const fcmIndex = this.deviceTokens.fcm.indexOf(token);
        if (fcmIndex > -1) {
            this.deviceTokens.fcm.splice(fcmIndex, 1);
            modified = true;
        }
        // 檢查 APNS tokens
        const apnsIndex = this.deviceTokens.apns.indexOf(token);
        if (apnsIndex > -1) {
            this.deviceTokens.apns.splice(apnsIndex, 1);
            modified = true;
        }
    });
    if (modified) {
        return this.save();
    }
    return Promise.resolve(this);
};
notificationPreferenceSchema.methods.isQuietTime = function () {
    if (!this.globalSettings.quietHours.enabled) {
        return false;
    }
    const now = new Date();
    const currentTime = now.toLocaleTimeString('en-GB', {
        hour12: false,
        hour: '2-digit',
        minute: '2-digit',
        timeZone: this.globalSettings.quietHours.timezone,
    });
    const startTime = this.globalSettings.quietHours.startTime;
    const endTime = this.globalSettings.quietHours.endTime;
    // 處理跨日情況（例如 22:00 到 08:00）
    if (startTime > endTime) {
        return currentTime >= startTime || currentTime <= endTime;
    }
    else {
        return currentTime >= startTime && currentTime <= endTime;
    }
};
notificationPreferenceSchema.methods.shouldReceiveNotification = function (type, channel) {
    // 檢查全域設定
    if (channel === 'push' && !this.globalSettings.pushEnabled) {
        return false;
    }
    if (channel === 'email' && !this.globalSettings.emailEnabled) {
        return false;
    }
    // 檢查安靜時間（僅適用於推播通知）
    if (channel === 'push' && this.isQuietTime()) {
        return false;
    }
    // 檢查特定類型的偏好設定
    const preference = this.preferences[type];
    if (!preference) {
        return defaultPreferences[type][channel];
    }
    return preference[channel];
};
// 靜態方法
notificationPreferenceSchema.statics.findByUserId = function (userId) {
    const objectId = typeof userId === 'string' ? new mongoose_1.default.Types.ObjectId(userId) : userId;
    return this.findOne({ userId: objectId });
};
notificationPreferenceSchema.statics.createDefault = function (userId) {
    const objectId = typeof userId === 'string' ? new mongoose_1.default.Types.ObjectId(userId) : userId;
    return this.create({
        userId: objectId,
        preferences: defaultPreferences,
    });
};
exports.NotificationPreference = mongoose_1.default.model('NotificationPreference', notificationPreferenceSchema);
exports.default = exports.NotificationPreference;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,