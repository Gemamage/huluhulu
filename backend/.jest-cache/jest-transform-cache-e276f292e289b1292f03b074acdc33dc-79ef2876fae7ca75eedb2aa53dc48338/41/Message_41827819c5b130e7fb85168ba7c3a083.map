{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\models\\Message.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\models\\Message.ts"],"sourcesContent":["import mongoose, { Document, Schema } from 'mongoose';\n\n// 私訊介面定義\nexport interface IMessage extends Document {\n  _id: mongoose.Types.ObjectId;\n  conversationId: mongoose.Types.ObjectId;\n  senderId: mongoose.Types.ObjectId;\n  receiverId: mongoose.Types.ObjectId;\n  content: string;\n  messageType: 'text' | 'image' | 'system';\n  imageUrl?: string;\n  isRead: boolean;\n  readAt?: Date;\n  isDeleted: boolean;\n  deletedAt?: Date;\n  deletedBy?: mongoose.Types.ObjectId;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// 對話介面定義\nexport interface IConversation extends Document {\n  _id: mongoose.Types.ObjectId;\n  participants: mongoose.Types.ObjectId[];\n  petId?: mongoose.Types.ObjectId; // 相關寵物\n  lastMessage?: mongoose.Types.ObjectId;\n  lastMessageAt: Date;\n  isActive: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// 私訊 Schema\nconst messageSchema = new Schema<IMessage>({\n  conversationId: {\n    type: Schema.Types.ObjectId,\n    ref: 'Conversation',\n    required: [true, '對話ID為必填項目'],\n    index: true,\n  },\n  senderId: {\n    type: Schema.Types.ObjectId,\n    ref: 'User',\n    required: [true, '發送者ID為必填項目'],\n    index: true,\n  },\n  receiverId: {\n    type: Schema.Types.ObjectId,\n    ref: 'User',\n    required: [true, '接收者ID為必填項目'],\n    index: true,\n  },\n  content: {\n    type: String,\n    required: [true, '訊息內容為必填項目'],\n    trim: true,\n    maxlength: [1000, '訊息內容不能超過 1000 個字符'],\n  },\n  messageType: {\n    type: String,\n    enum: ['text', 'image', 'system'],\n    default: 'text',\n    required: true,\n  },\n  imageUrl: {\n    type: String,\n    default: null,\n  },\n  isRead: {\n    type: Boolean,\n    default: false,\n    index: true,\n  },\n  readAt: {\n    type: Date,\n    default: null,\n  },\n  isDeleted: {\n    type: Boolean,\n    default: false,\n    index: true,\n  },\n  deletedAt: {\n    type: Date,\n    default: null,\n  },\n  deletedBy: {\n    type: Schema.Types.ObjectId,\n    ref: 'User',\n    default: null,\n  },\n}, {\n  timestamps: true,\n  toJSON: {\n    transform: function(doc, ret) {\n      ret.id = ret._id;\n      delete (ret as any)._id;\n      delete (ret as any).__v;\n      return ret;\n    },\n  },\n});\n\n// 對話 Schema\nconst conversationSchema = new Schema<IConversation>({\n  participants: [{\n    type: Schema.Types.ObjectId,\n    ref: 'User',\n    required: true,\n  }],\n  petId: {\n    type: Schema.Types.ObjectId,\n    ref: 'Pet',\n    default: null,\n    index: true,\n  },\n  lastMessage: {\n    type: Schema.Types.ObjectId,\n    ref: 'Message',\n    default: null,\n  },\n  lastMessageAt: {\n    type: Date,\n    default: Date.now,\n    index: true,\n  },\n  isActive: {\n    type: Boolean,\n    default: true,\n    index: true,\n  },\n}, {\n  timestamps: true,\n  toJSON: {\n    transform: function(doc, ret) {\n      ret.id = ret._id;\n      delete (ret as any)._id;\n      delete (ret as any).__v;\n      return ret;\n    },\n  },\n});\n\n// 複合索引\nmessageSchema.index({ conversationId: 1, createdAt: -1 });\nmessageSchema.index({ senderId: 1, createdAt: -1 });\nmessageSchema.index({ receiverId: 1, isRead: 1 });\nconversationSchema.index({ participants: 1, lastMessageAt: -1 });\nconversationSchema.index({ petId: 1, isActive: 1 });\n\n// 確保參與者數組唯一性\nconversationSchema.index({ participants: 1 }, { unique: true });\n\n// 注意：查詢時需要手動添加 { isDeleted: false } 條件\n\nexport const Message = mongoose.model<IMessage>('Message', messageSchema);\nexport const Conversation = mongoose.model<IConversation>('Conversation', conversationSchema);"],"version":3}