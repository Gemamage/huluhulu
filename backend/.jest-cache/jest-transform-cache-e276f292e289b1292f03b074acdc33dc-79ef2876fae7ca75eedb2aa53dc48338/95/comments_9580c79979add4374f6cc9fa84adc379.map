{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\comments.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\comments.ts"],"sourcesContent":["import express from 'express';\nimport { Request, Response } from 'express';\nimport { commentService } from '../services/commentService';\nimport { authenticate } from '../middleware/auth';\nimport { body, param, query } from 'express-validator';\n\nconst router = express.Router();\n\n/**\n * 創建留言\n */\nrouter.post('/',\n  authenticate,\n  [\n    body('petId').isMongoId().withMessage('無效的寵物ID'),\n    body('content').trim().isLength({ min: 1, max: 1000 }).withMessage('留言內容長度必須在1-1000字之間'),\n    body('parentId').optional().isMongoId().withMessage('無效的父留言ID')\n  ],\n  async (req: Request, res: Response) => {\n    try {\n      const { petId, content, parentId } = req.body;\n      const userId = req.user!.id;\n\n      const comment = await commentService.createComment({\n        petId,\n        userId,\n        content,\n        parentId\n      });\n\n      res.status(201).json({\n        success: true,\n        data: comment,\n        message: '留言創建成功'\n      });\n    } catch (error: any) {\n      res.status(400).json({\n        success: false,\n        message: error.message || '創建留言失敗'\n      });\n    }\n  }\n);\n\n/**\n * 獲取寵物留言列表\n */\nrouter.get('/pets/:petId',\n  [\n    param('petId').isMongoId().withMessage('無效的寵物ID'),\n    query('page').optional().isInt({ min: 1 }).withMessage('頁碼必須是正整數'),\n    query('limit').optional().isInt({ min: 1, max: 50 }).withMessage('每頁數量必須在1-50之間'),\n    query('sortBy').optional().isIn(['createdAt', 'likes']).withMessage('排序字段無效'),\n    query('sortOrder').optional().isIn(['asc', 'desc']).withMessage('排序順序無效')\n  ],\n  async (req: Request, res: Response) => {\n    try {\n      const { petId } = req.params;\n      const {\n        page = 1,\n        limit = 20,\n        sortBy = 'createdAt',\n        sortOrder = 'desc'\n      } = req.query;\n\n      if (!petId) {\n        return res.status(400).json({\n          success: false,\n          message: '缺少寵物ID參數'\n        });\n      }\n\n      const result = await commentService.getCommentsByPet(petId, {\n        page: Number(page),\n        limit: Number(limit),\n        sortBy: sortBy as 'createdAt' | 'updatedAt',\n        sortOrder: sortOrder as 'asc' | 'desc'\n      });\n\n      return res.json({\n        success: true,\n        data: result\n      });\n    } catch (error: any) {\n      return res.status(400).json({\n        success: false,\n        message: error.message || '獲取留言列表失敗'\n      });\n    }\n  }\n);\n\n/**\n * 獲取留言樹狀結構\n */\nrouter.get('/pets/:petId/tree',\n  [\n    param('petId').isMongoId().withMessage('無效的寵物ID')\n  ],\n  async (req: Request, res: Response) => {\n    try {\n      const { petId } = req.params;\n      \n      if (!petId) {\n        return res.status(400).json({\n          success: false,\n          message: '缺少寵物ID參數'\n        });\n      }\n      \n      const commentTree = await commentService.getCommentTree(petId);\n\n      return res.json({\n        success: true,\n        data: commentTree\n      });\n    } catch (error: any) {\n      return res.status(400).json({\n        success: false,\n        message: error.message || '獲取留言樹失敗'\n      });\n    }\n  }\n);\n\n/**\n * 更新留言\n */\nrouter.put('/:commentId',\n  authenticate,\n  [\n    param('commentId').isMongoId().withMessage('無效的留言ID'),\n    body('content').trim().isLength({ min: 1, max: 1000 }).withMessage('留言內容長度必須在1-1000字之間')\n  ],\n  async (req: Request, res: Response) => {\n    try {\n      const { commentId } = req.params;\n      const { content } = req.body;\n      const userId = req.user!.id;\n\n      if (!commentId) {\n        return res.status(400).json({\n          success: false,\n          message: '缺少留言ID參數'\n        });\n      }\n\n      const comment = await commentService.updateComment(commentId, userId, { content });\n      if (!comment) {\n        return res.status(404).json({\n           success: false,\n           message: '留言不存在或無權限修改'\n         });\n      }\n\n      return res.json({\n        success: true,\n        data: comment,\n        message: '留言更新成功'\n      });\n    } catch (error: any) {\n      return res.status(400).json({\n        success: false,\n        message: error.message || '更新留言失敗'\n      });\n    }\n  }\n);\n\n/**\n * 刪除留言\n */\nrouter.delete('/:commentId',\n  authenticate,\n  [\n    param('commentId').isMongoId().withMessage('無效的留言ID')\n  ],\n  async (req: Request, res: Response) => {\n    try {\n      const { commentId } = req.params;\n      const userId = req.user!.id;\n\n      if (!commentId) {\n        return res.status(400).json({\n          success: false,\n          message: '缺少留言ID參數'\n        });\n      }\n\n      const success = await commentService.deleteComment(commentId, userId);\n      if (!success) {\n        return res.status(404).json({\n           success: false,\n           message: '留言不存在或無權限刪除'\n         });\n      }\n\n      return res.json({\n        success: true,\n        message: '留言刪除成功'\n      });\n    } catch (error: any) {\n      return res.status(400).json({\n        success: false,\n        message: error.message || '刪除留言失敗'\n      });\n    }\n  }\n);\n\n/**\n * 舉報留言\n */\nrouter.post('/:commentId/report',\n  authenticate,\n  [\n    param('commentId').isMongoId().withMessage('無效的留言ID'),\n    body('reason').trim().isLength({ min: 1, max: 200 }).withMessage('舉報原因長度必須在1-200字之間')\n  ],\n  async (req: Request, res: Response) => {\n    try {\n      const { commentId } = req.params;\n      const userId = req.user!.id;\n\n      if (!commentId) {\n        return res.status(400).json({\n          success: false,\n          message: '缺少留言ID參數'\n        });\n      }\n\n      await commentService.reportComment(commentId, userId);\n\n      return res.json({\n        success: true,\n        message: '檢舉成功'\n      });\n    } catch (error: any) {\n      return res.status(400).json({\n        success: false,\n        message: error.message || '檢舉失敗'\n      });\n    }\n  }\n);\n\nexport default router;"],"version":3}