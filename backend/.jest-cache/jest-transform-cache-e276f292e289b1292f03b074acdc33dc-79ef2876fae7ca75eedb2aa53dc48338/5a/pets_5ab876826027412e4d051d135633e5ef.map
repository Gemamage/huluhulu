{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\pets.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\pets.ts"],"sourcesContent":["import { Router } from 'express';\nimport { asyncHandler } from '../middleware/error-handler';\nimport { ValidationError, NotFoundError, ForbiddenError } from '../utils/errors';\nimport { logger } from '../utils/logger';\n\n// 擴展 Express Request 介面\ndeclare global {\n  namespace Express {\n    interface Request {\n      validatedData?: any;\n      validatedQuery?: any;\n    }\n  }\n}\nimport { validateRequest, validateQuery, petSchema, petUpdateSchema, petSearchSchema } from '../utils/validation';\nimport { Pet, IPet } from '../models/Pet';\nimport { SearchHistory } from '../models/SearchHistory';\nimport { authenticate } from '../middleware/auth';\nimport { requirePermission, Permission, requireActiveAccount, hasPermission } from '../middleware/rbac';\nimport mongoose from 'mongoose';\n\nconst router = Router();\n\n/**\n * @route   GET /api/pets\n * @desc    取得寵物列表\n * @access  Public\n */\nrouter.get('/', validateQuery(petSearchSchema), asyncHandler(async (req, res) => {\n  const {\n    page = 1,\n    limit = 12,\n    status,\n    type,\n    breed,\n    location,\n    search,\n    sortBy = 'createdAt',\n    sortOrder = 'desc',\n    radius = 10\n  } = req.validatedQuery;\n\n  logger.info('獲取寵物列表請求', {\n    page, limit, status, type, breed, location, search, sortBy, sortOrder\n  });\n\n  // 建立查詢條件\n  const query: any = {};\n  \n  // 狀態篩選\n  if (status) {\n    query.status = status;\n  }\n  \n  // 寵物類型篩選\n  if (type) {\n    query.type = type;\n  }\n  \n  // 品種篩選\n  if (breed) {\n    query.breed = new RegExp(breed, 'i');\n  }\n  \n  // 文字搜尋（名稱、描述、地點）\n  if (search) {\n    query.$or = [\n      { name: new RegExp(search, 'i') },\n      { description: new RegExp(search, 'i') },\n      { lastSeenLocation: new RegExp(search, 'i') },\n      { 'contactInfo.name': new RegExp(search, 'i') }\n    ];\n  }\n  \n  // 地點篩選\n  if (location) {\n    query.lastSeenLocation = new RegExp(location, 'i');\n  }\n\n  // 計算分頁\n  const skip = (page - 1) * limit;\n  \n  // 排序設定\n  const sortOptions: any = {};\n  sortOptions[sortBy] = sortOrder === 'desc' ? -1 : 1;\n  \n  // 如果按緊急程度排序，優先顯示緊急案件\n  if (sortBy === 'createdAt') {\n    sortOptions.isUrgent = -1;\n  }\n\n  // 執行查詢\n  const [pets, totalItems] = await Promise.all([\n    Pet.find(query)\n      .sort(sortOptions)\n      .skip(skip)\n      .limit(limit)\n      .populate('userId', 'name email')\n      .lean(),\n    Pet.countDocuments(query)\n  ]);\n\n  // 記錄搜尋歷史（如果有搜尋條件且用戶已登入）\n  if ((search || location || type || status || breed) && req.user?.id) {\n    const searchQuery = search || location || '';\n    const filters = {\n      type,\n      status,\n      location,\n      breed,\n      radius\n    };\n    \n    // 異步記錄搜尋歷史，不影響主要回應\n    SearchHistory.recordSearch(req.user.id, searchQuery, filters, totalItems)\n      .catch(error => {\n        logger.error('記錄搜尋歷史失敗:', error);\n      });\n  }\n\n  // 計算分頁資訊\n  const totalPages = Math.ceil(totalItems / limit);\n\n  res.json({\n    success: true,\n    data: {\n      pets,\n      pagination: {\n        currentPage: page,\n        totalPages,\n        totalItems,\n        itemsPerPage: limit,\n        hasNextPage: page < totalPages,\n        hasPrevPage: page > 1\n      },\n      filters: {\n        status: ['lost', 'found', 'reunited'],\n        type: ['dog', 'cat', 'bird', 'rabbit', 'other'],\n        size: ['small', 'medium', 'large'],\n        gender: ['male', 'female', 'unknown'],\n      },\n    },\n  });\n}));\n\n/**\n * @route   GET /api/pets/my\n * @desc    獲取用戶自己的寵物協尋案例\n * @access  Private\n */\nrouter.get('/my', authenticate, requireActiveAccount, asyncHandler(async (req, res) => {\n  const { page = 1, limit = 12, status } = req.query;\n  const userId = req.user!.id;\n\n  logger.info('獲取用戶寵物列表請求', { userId });\n\n  // 建立查詢條件\n  const query: any = { userId: new mongoose.Types.ObjectId(userId) };\n  \n  // 狀態篩選\n  if (status) {\n    query.status = status;\n  }\n\n  // 計算分頁\n  const skip = (Number(page) - 1) * Number(limit);\n  \n  // 執行查詢\n  const [pets, totalItems] = await Promise.all([\n    Pet.find(query)\n      .sort({ isUrgent: -1, createdAt: -1 })\n      .skip(skip)\n      .limit(Number(limit))\n      .lean(),\n    Pet.countDocuments(query)\n  ]);\n\n  // 計算分頁資訊\n  const totalPages = Math.ceil(totalItems / Number(limit));\n\n  res.json({\n    success: true,\n    data: {\n      pets,\n      pagination: {\n        currentPage: Number(page),\n        totalPages,\n        totalItems,\n        itemsPerPage: Number(limit),\n        hasNextPage: Number(page) < totalPages,\n        hasPrevPage: Number(page) > 1\n      },\n    },\n  });\n}));\n\n/**\n * @route   GET /api/pets/:id\n * @desc    獲取特定寵物資訊\n * @access  Public\n */\nrouter.get('/:id', asyncHandler(async (req, res) => {\n  const { id } = req.params;\n\n  if (!id || !mongoose.Types.ObjectId.isValid(id)) {\n    throw new ValidationError('請提供有效的寵物 ID');\n  }\n\n  logger.info('獲取寵物詳細資訊請求', { petId: id });\n\n  // 查找寵物並增加瀏覽次數\n  const pet = await Pet.findByIdAndUpdate(\n    id,\n    { $inc: { viewCount: 1 } },\n    { new: true }\n  ).populate('userId', 'name email').lean();\n\n  if (!pet) {\n    throw new NotFoundError('找不到指定的寵物資訊');\n  }\n\n  res.json({\n    success: true,\n    data: {\n      pet,\n    },\n  });\n}));\n\n/**\n * @route   POST /api/pets\n * @desc    新增寵物協尋案例\n * @access  Private\n */\nrouter.post('/', authenticate, requireActiveAccount, validateRequest(petSchema), asyncHandler(async (req, res) => {\n  const validatedData = req.validatedData;\n  const userId = req.user!.id;\n\n  logger.info('新增寵物協尋案例請求', { \n    userId,\n    name: validatedData.name, \n    type: validatedData.type, \n    status: validatedData.status, \n    lastSeenLocation: validatedData.lastSeenLocation \n  });\n\n  // 建立寵物資料\n  const petData = {\n    ...validatedData,\n    userId: new mongoose.Types.ObjectId(userId),\n    viewCount: 0,\n    shareCount: 0,\n  };\n\n  // 儲存到資料庫\n  const pet = new Pet(petData);\n  await pet.save();\n\n  // 填充用戶資訊\n  await pet.populate('userId', 'name email');\n\n  res.status(201).json({\n    success: true,\n    message: '寵物協尋案例新增成功',\n    data: {\n      pet: pet.toJSON(),\n    },\n  });\n}));\n\n/**\n * @route   PUT /api/pets/:id\n * @desc    更新寵物資訊\n * @access  Private\n */\nrouter.put('/:id', authenticate, requireActiveAccount, validateRequest(petUpdateSchema), asyncHandler(async (req, res) => {\n  const { id } = req.params;\n  const updateData = req.validatedData;\n  const userId = req.user!.id;\n\n  if (!id || !mongoose.Types.ObjectId.isValid(id)) {\n    throw new ValidationError('請提供有效的寵物 ID');\n  }\n\n  logger.info('更新寵物資訊請求', { petId: id, userId, updateData });\n\n  // 查找寵物並檢查權限\n  const pet = await Pet.findById(id);\n  if (!pet) {\n    throw new NotFoundError('找不到指定的寵物資訊');\n  }\n\n  // 檢查是否為寵物擁有者或管理員\n  if (pet.userId.toString() !== userId && !hasPermission(req.user!, Permission.PET_WRITE)) {\n    throw new ForbiddenError('您沒有權限修改此寵物資訊');\n  }\n\n  // 更新寵物資訊\n  const updatedPet = await Pet.findByIdAndUpdate(\n    id,\n    { $set: updateData },\n    { new: true, runValidators: true }\n  ).populate('userId', 'name email');\n\n  res.json({\n    success: true,\n    message: '寵物資訊更新成功',\n    data: {\n      pet: updatedPet,\n    },\n  });\n}));\n\n/**\n * @route   DELETE /api/pets/:id\n * @desc    刪除寵物協尋案例\n * @access  Private\n */\nrouter.delete('/:id', authenticate, requireActiveAccount, asyncHandler(async (req, res) => {\n  const { id } = req.params;\n  const userId = req.user!.id;\n\n  if (!id || !mongoose.Types.ObjectId.isValid(id)) {\n    throw new ValidationError('請提供有效的寵物 ID');\n  }\n\n  logger.info('刪除寵物協尋案例請求', { petId: id, userId });\n\n  // 查找寵物並檢查權限\n  const pet = await Pet.findById(id);\n  if (!pet) {\n    throw new NotFoundError('找不到指定的寵物資訊');\n  }\n\n  // 檢查是否為寵物擁有者或管理員\n  if (pet.userId.toString() !== userId && !hasPermission(req.user!, Permission.PET_DELETE)) {\n    throw new ForbiddenError('您沒有權限刪除此寵物資訊');\n  }\n\n  // 執行刪除（硬刪除）\n  await Pet.findByIdAndDelete(id);\n\n  res.json({\n    success: true,\n    message: '寵物協尋案例已刪除',\n  });\n}));\n\n/**\n * @route   POST /api/pets/:id/images\n * @desc    上傳寵物圖片\n * @access  Private\n */\nrouter.post('/:id/images', asyncHandler(async (req, res) => {\n  const { id } = req.params;\n\n  if (!id) {\n    throw new ValidationError('請提供寵物 ID');\n  }\n\n  // TODO: 實作圖片上傳邏輯\n  // - 權限檢查\n  // - 檔案驗證\n  // - 圖片處理（壓縮、縮放）\n  // - 上傳到雲端儲存\n\n  logger.info('上傳寵物圖片請求', { petId: id });\n\n  res.json({\n    success: true,\n    message: '圖片上傳成功',\n    data: {\n      imageUrls: [\n        'https://example.com/images/pet-new-1.jpg',\n        'https://example.com/images/pet-new-2.jpg',\n      ],\n    },\n  });\n}));\n\n/**\n * @route   POST /api/pets/:id/share\n * @desc    分享寵物協尋案例\n * @access  Public\n */\nrouter.post('/:id/share', asyncHandler(async (req, res) => {\n  const { id } = req.params;\n  const { platform } = req.body;\n\n  if (!id || !mongoose.Types.ObjectId.isValid(id)) {\n    throw new ValidationError('請提供有效的寵物 ID');\n  }\n\n  logger.info('分享寵物協尋案例請求', { petId: id, platform });\n\n  // 查找寵物並增加分享次數\n  const pet = await Pet.findByIdAndUpdate(\n    id,\n    { $inc: { shareCount: 1 } },\n    { new: true }\n  );\n\n  if (!pet) {\n    throw new NotFoundError('找不到指定的寵物資訊');\n  }\n\n  // 生成分享連結\n  const baseUrl = process.env.FRONTEND_URL || 'http://localhost:3000';\n  const shareUrl = `${baseUrl}/pets/${id}`;\n\n  res.json({\n    success: true,\n    message: '分享連結生成成功',\n    data: {\n      shareUrl,\n      shareCount: pet.shareCount,\n      platform,\n    },\n  });\n}));\n\n/**\n * @route   GET /api/pets/user/:userId\n * @desc    獲取指定用戶的寵物協尋案例\n * @access  Public\n */\nrouter.get('/user/:userId', asyncHandler(async (req, res) => {\n  const { userId } = req.params;\n  const { page = 1, limit = 12, status } = req.query;\n\n  if (!userId || !mongoose.Types.ObjectId.isValid(userId)) {\n    throw new ValidationError('請提供有效的用戶 ID');\n  }\n\n  logger.info('獲取用戶寵物列表請求', { userId });\n\n  // 建立查詢條件\n  const query: any = { userId: new mongoose.Types.ObjectId(userId) };\n  \n  // 狀態篩選\n  if (status) {\n    query.status = status;\n  }\n\n  // 計算分頁\n  const skip = (Number(page) - 1) * Number(limit);\n  \n  // 執行查詢\n  const [pets, totalItems] = await Promise.all([\n    Pet.find(query)\n      .sort({ isUrgent: -1, createdAt: -1 })\n      .skip(skip)\n      .limit(Number(limit))\n      .populate('userId', 'name email')\n      .lean(),\n    Pet.countDocuments(query)\n  ]);\n\n  // 計算分頁資訊\n  const totalPages = Math.ceil(totalItems / Number(limit));\n\n  res.json({\n    success: true,\n    data: {\n      pets,\n      pagination: {\n        currentPage: Number(page),\n        totalPages,\n        totalItems,\n        itemsPerPage: Number(limit),\n        hasNextPage: Number(page) < totalPages,\n        hasPrevPage: Number(page) > 1\n      },\n    },\n  });\n}));\n\n/**\n * @route   GET /api/pets/search/similar\n * @desc    搜尋相似寵物\n * @access  Public\n */\nrouter.get('/search/similar', asyncHandler(async (req, res) => {\n  const { type, breed, color, location, excludeId } = req.query;\n\n  logger.info('搜尋相似寵物請求', { type, breed, color, location, excludeId });\n\n  // 建立查詢條件\n  const query: any = {};\n  \n  // 排除指定的寵物\n  if (excludeId && mongoose.Types.ObjectId.isValid(excludeId as string)) {\n    query._id = { $ne: new mongoose.Types.ObjectId(excludeId as string) };\n  }\n  \n  // 寵物類型匹配（必須條件）\n  if (type) {\n    query.type = type;\n  }\n  \n  // 品種匹配（可選）\n  if (breed) {\n    query.breed = new RegExp(breed as string, 'i');\n  }\n  \n  // 顏色匹配（可選）\n  if (color) {\n    query.color = new RegExp(color as string, 'i');\n  }\n  \n  // 地點相近匹配（可選）\n  if (location) {\n    query.lastSeenLocation = new RegExp(location as string, 'i');\n  }\n\n  // 執行查詢，限制結果數量\n  const similarPets = await Pet.find(query)\n    .sort({ createdAt: -1 })\n    .limit(6)\n    .populate('userId', 'name')\n    .lean();\n\n  res.json({\n    success: true,\n    data: {\n      similarPets,\n    },\n  });\n}));\n\nexport { router as petRoutes };"],"version":3}