{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\test\\routes\\admin.test.ts","mappings":";;;;;AAAA,0DAAgC;AAChC,6CAAuC;AACvC,gDAAoD;AACpD,8CAAiD;AACjD,kDAAuD;AACvD,gDAAgE;AAChE,gEAA+B;AAE/B,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,IAAI,SAAgB,CAAC;IACrB,IAAI,WAAkB,CAAC;IACvB,IAAI,UAAkB,CAAC;IACvB,IAAI,SAAiB,CAAC;IACtB,IAAI,OAAa,CAAC;IAClB,IAAI,SAAiB,CAAC;IAEtB,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,WAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,SAAG,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACzB,MAAM,aAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAE3B,oBAAoB;QACpB,SAAS,GAAG,MAAM,IAAI,WAAI,CAAC;YACzB,GAAG,wBAAa;YAChB,KAAK,EAAE,mBAAmB;YAC1B,IAAI,EAAE,OAAO;YACb,eAAe,EAAE,IAAI;SACtB,CAAC,CAAC,IAAI,EAAE,CAAC;QAEV,sBAAsB;QACtB,WAAW,GAAG,MAAM,IAAI,WAAI,CAAC;YAC3B,GAAG,wBAAa;YAChB,eAAe,EAAE,IAAI;SACtB,CAAC,CAAC,IAAI,EAAE,CAAC;QAEV,UAAU,GAAG,sBAAG,CAAC,IAAI,CACnB,EAAE,MAAM,EAAE,SAAS,CAAC,GAAG,EAAE,EACzB,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,aAAa,EACvC,EAAE,SAAS,EAAE,IAAI,EAAE,CACpB,CAAC;QAEF,SAAS,GAAG,sBAAG,CAAC,IAAI,CAClB,EAAE,MAAM,EAAE,WAAW,CAAC,GAAG,EAAE,EAC3B,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,aAAa,EACvC,EAAE,SAAS,EAAE,IAAI,EAAE,CACpB,CAAC;QAEF,OAAO,GAAG,MAAM,IAAI,SAAG,CAAC;YACtB,GAAG,uBAAY;YACf,KAAK,EAAE,WAAW,CAAC,GAAG;SACvB,CAAC,CAAC,IAAI,EAAE,CAAC;QAEV,MAAM,QAAQ,GAAG,MAAM,IAAI,SAAG,CAAC;YAC7B,GAAG,uBAAY;YACf,IAAI,EAAE,WAAW;YACjB,MAAM,EAAE,OAAO;YACf,KAAK,EAAE,SAAS,CAAC,GAAG;SACrB,CAAC,CAAC,IAAI,EAAE,CAAC;QAEV,SAAS,GAAG,MAAM,IAAI,aAAK,CAAC;YAC1B,OAAO,EAAE,OAAO,CAAC,GAAG;YACpB,QAAQ,EAAE,QAAQ,CAAC,GAAG;YACtB,UAAU,EAAE,IAAI;YAChB,UAAU,EAAE,MAAM;YAClB,MAAM,EAAE,SAAS;SAClB,CAAC,CAAC,IAAI,EAAE,CAAC;IACZ,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,WAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC1B,MAAM,SAAG,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACzB,MAAM,aAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACxC,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;YAC/C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,sBAAsB,CAAC;iBAC3B,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACnD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YAClD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;YACrD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAC5D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,sBAAsB,CAAC;iBAC3B,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YAC5D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YAC9D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YACvD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACxD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YAC3D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;YAC7D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;YAC/D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,sBAAsB,CAAC;iBAC3B,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,EAAE,CAAC,CAAC;YAE/C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;YAC7C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YAE/B,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;QACpC,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,sCAAsC;YACtC,MAAM,IAAI,WAAI,CAAC;gBACb,GAAG,wBAAa;gBAChB,KAAK,EAAE,mBAAmB;gBAC1B,eAAe,EAAE,KAAK;aACvB,CAAC,CAAC,IAAI,EAAE,CAAC;YAEV,MAAM,IAAI,WAAI,CAAC;gBACb,GAAG,wBAAa;gBAChB,KAAK,EAAE,mBAAmB;gBAC1B,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC,IAAI,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;YACpC,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,kBAAkB,CAAC;iBACvB,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;YAC1D,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,wCAAwC,CAAC;iBAC7C,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1F,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;YACpD,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,iCAAiC,CAAC;iBACtC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;YAC5C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,+BAA+B,CAAC;iBACpC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;YACrC,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,iCAAiC,CAAC;iBACtC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;YAClD,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,kDAAkD,CAAC;iBACvD,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAEvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtC,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC;qBAC7C,sBAAsB,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;YACpE,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,kBAAkB,CAAC;iBACvB,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,EAAE,CAAC,CAAC;YAE/C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACxC,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;YACvC,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oBAAoB,WAAW,CAAC,GAAG,EAAE,CAAC;iBAC1C,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;YAChE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACzD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;YAC9C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YACvD,MAAM,aAAa,GAAG,0BAA0B,CAAC;YAEjD,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oBAAoB,aAAa,EAAE,CAAC;iBACxC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oBAAoB,WAAW,CAAC,GAAG,EAAE,CAAC;iBAC1C,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,EAAE,CAAC,CAAC;YAE/C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACxC,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC1C,MAAM,UAAU,GAAG;gBACjB,SAAS,EAAE,cAAc;gBACzB,eAAe,EAAE,IAAI;gBACrB,QAAQ,EAAE,KAAK;aAChB,CAAC;YAEF,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oBAAoB,WAAW,CAAC,GAAG,EAAE,CAAC;iBAC1C,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC;iBAC5C,IAAI,CAAC,UAAU,CAAC,CAAC;YAEpB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC1D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;YACvC,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oBAAoB,WAAW,CAAC,GAAG,EAAE,CAAC;iBAC1C,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC;iBAC5C,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;YAE/B,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;YAC/C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oBAAoB,WAAW,CAAC,GAAG,EAAE,CAAC;iBAC1C,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC;iBAC5C,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;YAE3C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;YAC3C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oBAAoB,WAAW,CAAC,GAAG,EAAE,CAAC;iBAC1C,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC;iBAC5C,IAAI,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAC;YAElC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oBAAoB,WAAW,CAAC,GAAG,EAAE,CAAC;iBAC1C,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,EAAE,CAAC;iBAC3C,IAAI,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;YAElC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;QAC3C,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;YAC/C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,MAAM,CAAC,oBAAoB,WAAW,CAAC,GAAG,EAAE,CAAC;iBAC7C,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEzC,yBAAyB;YACzB,MAAM,WAAW,GAAG,MAAM,WAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;YACrD,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,MAAM,CAAC,oBAAoB,SAAS,CAAC,GAAG,EAAE,CAAC;iBAC3C,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YACvD,MAAM,aAAa,GAAG,0BAA0B,CAAC;YAEjD,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,MAAM,CAAC,oBAAoB,aAAa,EAAE,CAAC;iBAC3C,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,MAAM,CAAC,oBAAoB,WAAW,CAAC,GAAG,EAAE,CAAC;iBAC7C,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,EAAE,CAAC,CAAC;YAE/C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACnC,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,qCAAqC;YACrC,MAAM,IAAI,SAAG,CAAC;gBACZ,GAAG,uBAAY;gBACf,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,WAAW,CAAC,GAAG;aACvB,CAAC,CAAC,IAAI,EAAE,CAAC;YAEV,MAAM,IAAI,SAAG,CAAC;gBACZ,GAAG,uBAAY;gBACf,IAAI,EAAE,cAAc;gBACpB,MAAM,EAAE,UAAU;gBAClB,KAAK,EAAE,SAAS,CAAC,GAAG;aACrB,CAAC,CAAC,IAAI,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;YACnC,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,iBAAiB,CAAC;iBACtB,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;YAC5C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,8BAA8B,CAAC;iBACnC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC1C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,0BAA0B,CAAC;iBAC/B,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC1C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,8BAA8B,CAAC;iBACnC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,iBAAiB,CAAC;iBACtB,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,EAAE,CAAC,CAAC;YAE/C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACvC,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;YACzC,MAAM,UAAU,GAAG;gBACjB,IAAI,EAAE,kBAAkB;gBACxB,MAAM,EAAE,UAAU;aACnB,CAAC;YAEF,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,mBAAmB,OAAO,CAAC,GAAG,EAAE,CAAC;iBACrC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC;iBAC5C,IAAI,CAAC,UAAU,CAAC,CAAC;YAEpB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACzD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;YAC7C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,mBAAmB,OAAO,CAAC,GAAG,EAAE,CAAC;iBACrC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC;iBAC5C,IAAI,CAAC,EAAE,MAAM,EAAE,gBAAgB,EAAE,CAAC,CAAC;YAEtC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,mBAAmB,OAAO,CAAC,GAAG,EAAE,CAAC;iBACrC,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,EAAE,CAAC;iBAC3C,IAAI,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;YAE7B,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;QAC1C,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,MAAM,CAAC,mBAAmB,OAAO,CAAC,GAAG,EAAE,CAAC;iBACxC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEzC,wBAAwB;YACxB,MAAM,UAAU,GAAG,MAAM,SAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACnD,MAAM,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,MAAM,CAAC,mBAAmB,OAAO,CAAC,GAAG,EAAE,CAAC;iBACxC,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,EAAE,CAAC,CAAC;YAE/C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACtC,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,wCAAwC;YACxC,MAAM,cAAc,GAAG,MAAM,IAAI,SAAG,CAAC;gBACnC,GAAG,uBAAY;gBACf,IAAI,EAAE,kBAAkB;gBACxB,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,WAAW,CAAC,GAAG;aACvB,CAAC,CAAC,IAAI,EAAE,CAAC;YAEV,MAAM,eAAe,GAAG,MAAM,IAAI,SAAG,CAAC;gBACpC,GAAG,uBAAY;gBACf,IAAI,EAAE,mBAAmB;gBACzB,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,SAAS,CAAC,GAAG;aACrB,CAAC,CAAC,IAAI,EAAE,CAAC;YAEV,MAAM,IAAI,aAAK,CAAC;gBACd,OAAO,EAAE,cAAc,CAAC,GAAG;gBAC3B,QAAQ,EAAE,eAAe,CAAC,GAAG;gBAC7B,UAAU,EAAE,IAAI;gBAChB,UAAU,EAAE,QAAQ;gBACpB,MAAM,EAAE,WAAW;aACpB,CAAC,CAAC,IAAI,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;YACtC,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oBAAoB,CAAC;iBACzB,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;YAC/C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,mCAAmC,CAAC;iBACxC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oCAAoC,CAAC;iBACzC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE,CAAC,KAAK,CAAC,UAAU,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oBAAoB,CAAC;iBACzB,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,EAAE,CAAC,CAAC;YAE/C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;QAC1C,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC1C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,sBAAsB,SAAS,CAAC,GAAG,EAAE,CAAC;iBAC1C,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC;iBAC5C,IAAI,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;YAEjC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;YAC7C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,sBAAsB,SAAS,CAAC,GAAG,EAAE,CAAC;iBAC1C,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC;iBAC5C,IAAI,CAAC,EAAE,MAAM,EAAE,gBAAgB,EAAE,CAAC,CAAC;YAEtC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,sBAAsB,SAAS,CAAC,GAAG,EAAE,CAAC;iBAC1C,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,EAAE,CAAC;iBAC3C,IAAI,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;YAEjC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACtC,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;YACzC,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oBAAoB,CAAC;iBACzB,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YACxD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;YAC3D,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;YAChE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,cAAc;YACjF,MAAM,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;YAE3B,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oBAAoB,CAAC;iBACzB,KAAK,CAAC;gBACL,SAAS,EAAE,SAAS,CAAC,WAAW,EAAE;gBAClC,OAAO,EAAE,OAAO,CAAC,WAAW,EAAE;aAC/B,CAAC;iBACD,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oBAAoB,CAAC;iBACzB,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,EAAE,CAAC,CAAC;YAE/C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAClD,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;YACjD,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,IAAI,CAAC,+BAA+B,CAAC;iBACrC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC;iBAC5C,IAAI,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;YAE/B,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,IAAI,CAAC,+BAA+B,CAAC;iBACrC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC;iBAC5C,IAAI,CAAC,EAAE,MAAM,EAAE,gBAAgB,EAAE,CAAC,CAAC;YAEtC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,IAAI,CAAC,+BAA+B,CAAC;iBACrC,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,EAAE,CAAC;iBAC3C,IAAI,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;YAE/B,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACnC,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;YACtC,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,iBAAiB,CAAC;iBACtB,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;YAC9C,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;YAC3C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,6BAA6B,CAAC;iBAClC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;YAChD,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,eAAe;YAC7E,MAAM,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;YAE3B,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,iBAAiB,CAAC;iBACtB,KAAK,CAAC;gBACL,SAAS,EAAE,SAAS,CAAC,WAAW,EAAE;gBAClC,OAAO,EAAE,OAAO,CAAC,WAAW,EAAE;aAC/B,CAAC;iBACD,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,iBAAiB,CAAC;iBACtB,GAAG,CAAC,eAAe,EAAE,UAAU,SAAS,EAAE,CAAC,CAAC;YAE/C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC9B,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;YACtD,wBAAwB;YACxB,IAAI,CAAC,KAAK,CAAC,WAAI,EAAE,MAAM,CAAC,CAAC,qBAAqB,CAAC,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAE5E,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,kBAAkB,CAAC;iBACvB,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;YAClD,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,+BAA+B,CAAC;iBACpC,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;YAC7D,+BAA+B;YAC/B,MAAM,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAC7C,IAAA,mBAAO,EAAC,YAAG,CAAC;iBACT,GAAG,CAAC,sBAAsB,CAAC;iBAC3B,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC,CAChD,CAAC;YAEF,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAE9C,uCAAuC;YACvC,MAAM,oBAAoB,GAAG,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC;YACzE,MAAM,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;YACxC,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,YAAG,CAAC;iBAChC,GAAG,CAAC,oBAAoB,WAAW,CAAC,GAAG,EAAE,CAAC;iBAC1C,GAAG,CAAC,eAAe,EAAE,UAAU,UAAU,EAAE,CAAC;iBAC5C,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;YAE7B,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAElC,iCAAiC;YACjC,yDAAyD;YACzD,0CAA0C;YAC1C,2BAA2B;YAC3B,4BAA4B;YAC5B,+BAA+B;YAC/B,iCAAiC;YACjC,MAAM;QACR,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\test\\routes\\admin.test.ts"],"sourcesContent":["import request from 'supertest';\nimport { app } from '../../src/server';\nimport { User, IUser } from '../../src/models/User';\nimport { Pet, IPet } from '../../src/models/Pet';\nimport { Match, IMatch } from '../../src/models/Match';\nimport { validUserData, validPetData } from '../utils/testData';\nimport jwt from 'jsonwebtoken';\n\ndescribe('Admin Routes', () => {\n  let adminUser: IUser;\n  let regularUser: IUser;\n  let adminToken: string;\n  let userToken: string;\n  let testPet: IPet;\n  let testMatch: IMatch;\n\n  beforeEach(async () => {\n    await User.deleteMany({});\n    await Pet.deleteMany({});\n    await Match.deleteMany({});\n    \n    // Create admin user\n    adminUser = await new User({\n      ...validUserData,\n      email: 'admin@example.com',\n      role: 'admin',\n      isEmailVerified: true\n    }).save();\n    \n    // Create regular user\n    regularUser = await new User({\n      ...validUserData,\n      isEmailVerified: true\n    }).save();\n    \n    adminToken = jwt.sign(\n      { userId: adminUser._id },\n      process.env.JWT_SECRET || 'test-secret',\n      { expiresIn: '1h' }\n    );\n    \n    userToken = jwt.sign(\n      { userId: regularUser._id },\n      process.env.JWT_SECRET || 'test-secret',\n      { expiresIn: '1h' }\n    );\n    \n    testPet = await new Pet({\n      ...validPetData,\n      owner: regularUser._id\n    }).save();\n    \n    const foundPet = await new Pet({\n      ...validPetData,\n      name: 'Found Pet',\n      status: 'found',\n      owner: adminUser._id\n    }).save();\n    \n    testMatch = await new Match({\n      lostPet: testPet._id,\n      foundPet: foundPet._id,\n      similarity: 0.85,\n      confidence: 'high',\n      status: 'pending'\n    }).save();\n  });\n\n  afterEach(async () => {\n    await User.deleteMany({});\n    await Pet.deleteMany({});\n    await Match.deleteMany({});\n  });\n\n  describe('GET /api/admin/dashboard', () => {\n    it('should get admin dashboard data', async () => {\n      const response = await request(app)\n        .get('/api/admin/dashboard')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data).toHaveProperty('users');\n      expect(response.body.data).toHaveProperty('pets');\n      expect(response.body.data).toHaveProperty('matches');\n      expect(response.body.data).toHaveProperty('recentActivity');\n      expect(response.body.data.users.total).toBe(2);\n      expect(response.body.data.pets.total).toBe(2);\n      expect(response.body.data.matches.total).toBe(1);\n    });\n\n    it('should include statistics breakdown', async () => {\n      const response = await request(app)\n        .get('/api/admin/dashboard')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.body.data.users).toHaveProperty('verified');\n      expect(response.body.data.users).toHaveProperty('unverified');\n      expect(response.body.data.pets).toHaveProperty('lost');\n      expect(response.body.data.pets).toHaveProperty('found');\n      expect(response.body.data.pets).toHaveProperty('reunited');\n      expect(response.body.data.matches).toHaveProperty('pending');\n      expect(response.body.data.matches).toHaveProperty('confirmed');\n      expect(response.body.data.matches).toHaveProperty('rejected');\n    });\n\n    it('should not allow regular users', async () => {\n      const response = await request(app)\n        .get('/api/admin/dashboard')\n        .set('Authorization', `Bearer ${userToken}`);\n      \n      expect(response.status).toBe(403);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should require authentication', async () => {\n      const response = await request(app)\n        .get('/api/admin/dashboard');\n      \n      expect(response.status).toBe(401);\n    });\n  });\n\n  describe('GET /api/admin/users', () => {\n    beforeEach(async () => {\n      // Create additional users for testing\n      await new User({\n        ...validUserData,\n        email: 'user2@example.com',\n        isEmailVerified: false\n      }).save();\n      \n      await new User({\n        ...validUserData,\n        email: 'user3@example.com',\n        isActive: false\n      }).save();\n    });\n\n    it('should get all users', async () => {\n      const response = await request(app)\n        .get('/api/admin/users')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.users).toHaveLength(4);\n      expect(response.body.data.total).toBe(4);\n    });\n\n    it('should filter users by verification status', async () => {\n      const response = await request(app)\n        .get('/api/admin/users?isEmailVerified=false')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.data.users.length).toBeGreaterThan(0);\n      expect(response.body.data.users.every((user: any) => !user.isEmailVerified)).toBe(true);\n    });\n\n    it('should filter users by active status', async () => {\n      const response = await request(app)\n        .get('/api/admin/users?isActive=false')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.data.users.length).toBeGreaterThan(0);\n      expect(response.body.data.users.every((user: any) => !user.isActive)).toBe(true);\n    });\n\n    it('should search users by email', async () => {\n      const response = await request(app)\n        .get('/api/admin/users?search=user2')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.data.users.length).toBeGreaterThan(0);\n      expect(response.body.data.users[0].email).toContain('user2');\n    });\n\n    it('should paginate users', async () => {\n      const response = await request(app)\n        .get('/api/admin/users?page=1&limit=2')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.data.users).toHaveLength(2);\n      expect(response.body.data.totalPages).toBe(2);\n    });\n\n    it('should sort users by creation date', async () => {\n      const response = await request(app)\n        .get('/api/admin/users?sortBy=createdAt&sortOrder=desc')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      const users = response.body.data.users;\n      \n      for (let i = 1; i < users.length; i++) {\n        expect(new Date(users[i-1].createdAt).getTime())\n          .toBeGreaterThanOrEqual(new Date(users[i].createdAt).getTime());\n      }\n    });\n\n    it('should not allow regular users', async () => {\n      const response = await request(app)\n        .get('/api/admin/users')\n        .set('Authorization', `Bearer ${userToken}`);\n      \n      expect(response.status).toBe(403);\n    });\n  });\n\n  describe('GET /api/admin/users/:id', () => {\n    it('should get user details', async () => {\n      const response = await request(app)\n        .get(`/api/admin/users/${regularUser._id}`)\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data._id).toBe(regularUser._id.toString());\n      expect(response.body.data.email).toBe(regularUser.email);\n      expect(response.body.data.pets).toBeDefined();\n      expect(response.body.data.matches).toBeDefined();\n    });\n\n    it('should return 404 for non-existent user', async () => {\n      const nonExistentId = '507f1f77bcf86cd799439011';\n      \n      const response = await request(app)\n        .get(`/api/admin/users/${nonExistentId}`)\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(404);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should not allow regular users', async () => {\n      const response = await request(app)\n        .get(`/api/admin/users/${regularUser._id}`)\n        .set('Authorization', `Bearer ${userToken}`);\n      \n      expect(response.status).toBe(403);\n    });\n  });\n\n  describe('PUT /api/admin/users/:id', () => {\n    it('should update user details', async () => {\n      const updateData = {\n        firstName: 'Updated Name',\n        isEmailVerified: true,\n        isActive: false\n      };\n      \n      const response = await request(app)\n        .put(`/api/admin/users/${regularUser._id}`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send(updateData);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.firstName).toBe('Updated Name');\n      expect(response.body.data.isEmailVerified).toBe(true);\n      expect(response.body.data.isActive).toBe(false);\n    });\n\n    it('should update user role', async () => {\n      const response = await request(app)\n        .put(`/api/admin/users/${regularUser._id}`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send({ role: 'moderator' });\n      \n      expect(response.status).toBe(200);\n      expect(response.body.data.role).toBe('moderator');\n    });\n\n    it('should not allow updating email', async () => {\n      const response = await request(app)\n        .put(`/api/admin/users/${regularUser._id}`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send({ email: 'newemail@example.com' });\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should validate role values', async () => {\n      const response = await request(app)\n        .put(`/api/admin/users/${regularUser._id}`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send({ role: 'invalid-role' });\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should not allow regular users', async () => {\n      const response = await request(app)\n        .put(`/api/admin/users/${regularUser._id}`)\n        .set('Authorization', `Bearer ${userToken}`)\n        .send({ firstName: 'Updated' });\n      \n      expect(response.status).toBe(403);\n    });\n  });\n\n  describe('DELETE /api/admin/users/:id', () => {\n    it('should delete user successfully', async () => {\n      const response = await request(app)\n        .delete(`/api/admin/users/${regularUser._id}`)\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      \n      // Verify user is deleted\n      const deletedUser = await User.findById(regularUser._id);\n      expect(deletedUser).toBeNull();\n    });\n\n    it('should not allow deleting admin users', async () => {\n      const response = await request(app)\n        .delete(`/api/admin/users/${adminUser._id}`)\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should return 404 for non-existent user', async () => {\n      const nonExistentId = '507f1f77bcf86cd799439011';\n      \n      const response = await request(app)\n        .delete(`/api/admin/users/${nonExistentId}`)\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(404);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should not allow regular users', async () => {\n      const response = await request(app)\n        .delete(`/api/admin/users/${regularUser._id}`)\n        .set('Authorization', `Bearer ${userToken}`);\n      \n      expect(response.status).toBe(403);\n    });\n  });\n\n  describe('GET /api/admin/pets', () => {\n    beforeEach(async () => {\n      // Create additional pets for testing\n      await new Pet({\n        ...validPetData,\n        name: 'Found Pet 2',\n        status: 'found',\n        owner: regularUser._id\n      }).save();\n      \n      await new Pet({\n        ...validPetData,\n        name: 'Reunited Pet',\n        status: 'reunited',\n        owner: adminUser._id\n      }).save();\n    });\n\n    it('should get all pets', async () => {\n      const response = await request(app)\n        .get('/api/admin/pets')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.pets).toHaveLength(4);\n      expect(response.body.data.total).toBe(4);\n    });\n\n    it('should filter pets by status', async () => {\n      const response = await request(app)\n        .get('/api/admin/pets?status=found')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.data.pets.length).toBeGreaterThan(0);\n      expect(response.body.data.pets.every((pet: any) => pet.status === 'found')).toBe(true);\n    });\n\n    it('should filter pets by type', async () => {\n      const response = await request(app)\n        .get('/api/admin/pets?type=dog')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.data.pets.length).toBeGreaterThan(0);\n      expect(response.body.data.pets.every((pet: any) => pet.type === 'dog')).toBe(true);\n    });\n\n    it('should search pets by name', async () => {\n      const response = await request(app)\n        .get('/api/admin/pets?search=Found')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.data.pets.length).toBeGreaterThan(0);\n    });\n\n    it('should not allow regular users', async () => {\n      const response = await request(app)\n        .get('/api/admin/pets')\n        .set('Authorization', `Bearer ${userToken}`);\n      \n      expect(response.status).toBe(403);\n    });\n  });\n\n  describe('PUT /api/admin/pets/:id', () => {\n    it('should update pet details', async () => {\n      const updateData = {\n        name: 'Updated Pet Name',\n        status: 'reunited'\n      };\n      \n      const response = await request(app)\n        .put(`/api/admin/pets/${testPet._id}`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send(updateData);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.name).toBe('Updated Pet Name');\n      expect(response.body.data.status).toBe('reunited');\n    });\n\n    it('should validate status values', async () => {\n      const response = await request(app)\n        .put(`/api/admin/pets/${testPet._id}`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send({ status: 'invalid-status' });\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should not allow regular users', async () => {\n      const response = await request(app)\n        .put(`/api/admin/pets/${testPet._id}`)\n        .set('Authorization', `Bearer ${userToken}`)\n        .send({ name: 'Updated' });\n      \n      expect(response.status).toBe(403);\n    });\n  });\n\n  describe('DELETE /api/admin/pets/:id', () => {\n    it('should delete pet successfully', async () => {\n      const response = await request(app)\n        .delete(`/api/admin/pets/${testPet._id}`)\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      \n      // Verify pet is deleted\n      const deletedPet = await Pet.findById(testPet._id);\n      expect(deletedPet).toBeNull();\n    });\n\n    it('should not allow regular users', async () => {\n      const response = await request(app)\n        .delete(`/api/admin/pets/${testPet._id}`)\n        .set('Authorization', `Bearer ${userToken}`);\n      \n      expect(response.status).toBe(403);\n    });\n  });\n\n  describe('GET /api/admin/matches', () => {\n    beforeEach(async () => {\n      // Create additional matches for testing\n      const anotherLostPet = await new Pet({\n        ...validPetData,\n        name: 'Another Lost Pet',\n        status: 'lost',\n        owner: regularUser._id\n      }).save();\n      \n      const anotherFoundPet = await new Pet({\n        ...validPetData,\n        name: 'Another Found Pet',\n        status: 'found',\n        owner: adminUser._id\n      }).save();\n      \n      await new Match({\n        lostPet: anotherLostPet._id,\n        foundPet: anotherFoundPet._id,\n        similarity: 0.75,\n        confidence: 'medium',\n        status: 'confirmed'\n      }).save();\n    });\n\n    it('should get all matches', async () => {\n      const response = await request(app)\n        .get('/api/admin/matches')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.matches).toHaveLength(2);\n      expect(response.body.data.total).toBe(2);\n    });\n\n    it('should filter matches by status', async () => {\n      const response = await request(app)\n        .get('/api/admin/matches?status=pending')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.data.matches.length).toBeGreaterThan(0);\n      expect(response.body.data.matches.every((match: any) => match.status === 'pending')).toBe(true);\n    });\n\n    it('should filter matches by confidence', async () => {\n      const response = await request(app)\n        .get('/api/admin/matches?confidence=high')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.data.matches.length).toBeGreaterThan(0);\n      expect(response.body.data.matches.every((match: any) => match.confidence === 'high')).toBe(true);\n    });\n\n    it('should not allow regular users', async () => {\n      const response = await request(app)\n        .get('/api/admin/matches')\n        .set('Authorization', `Bearer ${userToken}`);\n      \n      expect(response.status).toBe(403);\n    });\n  });\n\n  describe('PUT /api/admin/matches/:id', () => {\n    it('should update match status', async () => {\n      const response = await request(app)\n        .put(`/api/admin/matches/${testMatch._id}`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send({ status: 'confirmed' });\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.status).toBe('confirmed');\n    });\n\n    it('should validate status values', async () => {\n      const response = await request(app)\n        .put(`/api/admin/matches/${testMatch._id}`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send({ status: 'invalid-status' });\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should not allow regular users', async () => {\n      const response = await request(app)\n        .put(`/api/admin/matches/${testMatch._id}`)\n        .set('Authorization', `Bearer ${userToken}`)\n        .send({ status: 'confirmed' });\n      \n      expect(response.status).toBe(403);\n    });\n  });\n\n  describe('GET /api/admin/reports', () => {\n    it('should get system reports', async () => {\n      const response = await request(app)\n        .get('/api/admin/reports')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data).toHaveProperty('userGrowth');\n      expect(response.body.data).toHaveProperty('petStatistics');\n      expect(response.body.data).toHaveProperty('matchingEfficiency');\n      expect(response.body.data).toHaveProperty('systemHealth');\n    });\n\n    it('should filter reports by date range', async () => {\n      const startDate = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // 30 days ago\n      const endDate = new Date();\n      \n      const response = await request(app)\n        .get('/api/admin/reports')\n        .query({\n          startDate: startDate.toISOString(),\n          endDate: endDate.toISOString()\n        })\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n    });\n\n    it('should not allow regular users', async () => {\n      const response = await request(app)\n        .get('/api/admin/reports')\n        .set('Authorization', `Bearer ${userToken}`);\n      \n      expect(response.status).toBe(403);\n    });\n  });\n\n  describe('POST /api/admin/system/maintenance', () => {\n    it('should trigger system maintenance', async () => {\n      const response = await request(app)\n        .post('/api/admin/system/maintenance')\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send({ action: 'cleanup' });\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.message).toContain('維護任務已啟動');\n    });\n\n    it('should validate maintenance actions', async () => {\n      const response = await request(app)\n        .post('/api/admin/system/maintenance')\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send({ action: 'invalid-action' });\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should not allow regular users', async () => {\n      const response = await request(app)\n        .post('/api/admin/system/maintenance')\n        .set('Authorization', `Bearer ${userToken}`)\n        .send({ action: 'cleanup' });\n      \n      expect(response.status).toBe(403);\n    });\n  });\n\n  describe('GET /api/admin/logs', () => {\n    it('should get system logs', async () => {\n      const response = await request(app)\n        .get('/api/admin/logs')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.logs).toBeDefined();\n      expect(Array.isArray(response.body.data.logs)).toBe(true);\n    });\n\n    it('should filter logs by level', async () => {\n      const response = await request(app)\n        .get('/api/admin/logs?level=error')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n    });\n\n    it('should filter logs by date range', async () => {\n      const startDate = new Date(Date.now() - 24 * 60 * 60 * 1000); // 24 hours ago\n      const endDate = new Date();\n      \n      const response = await request(app)\n        .get('/api/admin/logs')\n        .query({\n          startDate: startDate.toISOString(),\n          endDate: endDate.toISOString()\n        })\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(200);\n      expect(response.body.success).toBe(true);\n    });\n\n    it('should not allow regular users', async () => {\n      const response = await request(app)\n        .get('/api/admin/logs')\n        .set('Authorization', `Bearer ${userToken}`);\n      \n      expect(response.status).toBe(403);\n    });\n  });\n\n  describe('Error Handling', () => {\n    it('should handle server errors gracefully', async () => {\n      // Mock a database error\n      jest.spyOn(User, 'find').mockRejectedValueOnce(new Error('Database error'));\n      \n      const response = await request(app)\n        .get('/api/admin/users')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(500);\n      expect(response.body.success).toBe(false);\n    });\n\n    it('should validate request parameters', async () => {\n      const response = await request(app)\n        .get('/api/admin/users?page=invalid')\n        .set('Authorization', `Bearer ${adminToken}`);\n      \n      expect(response.status).toBe(400);\n      expect(response.body.success).toBe(false);\n    });\n  });\n\n  describe('Rate Limiting', () => {\n    it('should apply rate limiting to admin endpoints', async () => {\n      // Make multiple rapid requests\n      const requests = Array(10).fill(null).map(() => \n        request(app)\n          .get('/api/admin/dashboard')\n          .set('Authorization', `Bearer ${adminToken}`)\n      );\n      \n      const responses = await Promise.all(requests);\n      \n      // Some requests should be rate limited\n      const rateLimitedResponses = responses.filter(res => res.status === 429);\n      expect(rateLimitedResponses.length).toBeGreaterThan(0);\n    });\n  });\n\n  describe('Audit Logging', () => {\n    it('should log admin actions', async () => {\n      const response = await request(app)\n        .put(`/api/admin/users/${regularUser._id}`)\n        .set('Authorization', `Bearer ${adminToken}`)\n        .send({ isActive: false });\n      \n      expect(response.status).toBe(200);\n      \n      // Check if audit log was created\n      // This would depend on your audit logging implementation\n      // expect(auditLog).toHaveBeenCalledWith({\n      //   action: 'USER_UPDATE',\n      //   adminId: adminUser._id,\n      //   targetId: regularUser._id,\n      //   changes: { isActive: false }\n      // });\n    });\n  });\n});"],"version":3}