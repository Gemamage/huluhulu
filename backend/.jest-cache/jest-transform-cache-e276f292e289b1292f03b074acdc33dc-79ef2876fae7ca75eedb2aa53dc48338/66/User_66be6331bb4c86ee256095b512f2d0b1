48a8c933e64f078a0d67148aa1f20e4e
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.User = void 0;
const mongoose_1 = __importStar(require("mongoose"));
const bcryptjs_1 = __importDefault(require("bcryptjs"));
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
const environment_1 = require("../config/environment");
// 用戶 Schema
const userSchema = new mongoose_1.Schema({
    email: {
        type: String,
        required: [true, "電子郵件為必填項目"],
        lowercase: true,
        trim: true,
        match: [/^[^\s@]+@[^\s@]+\.[^\s@]+$/, "請提供有效的電子郵件地址"],
    },
    password: {
        type: String,
        required: [true, "密碼為必填項目"],
        minlength: [6, "密碼長度至少需要 6 個字符"],
        select: false, // 預設不返回密碼
    },
    name: {
        type: String,
        required: [true, "姓名為必填項目"],
        trim: true,
        maxlength: [50, "姓名長度不能超過 50 個字符"],
    },
    phone: {
        type: String,
        trim: true,
        match: [/^[+]?[0-9\s\-()]+$/, "請提供有效的電話號碼"],
    },
    avatar: {
        type: String,
        default: null,
    },
    googleId: {
        type: String,
        sparse: true, // 允許多個 null 值
    },
    isEmailVerified: {
        type: Boolean,
        default: false,
    },
    isActive: {
        type: Boolean,
        default: true,
    },
    role: {
        type: String,
        enum: ["user", "moderator", "admin"],
        default: "user",
    },
    lastLoginAt: {
        type: Date,
    },
    passwordResetToken: {
        type: String,
        select: false,
    },
    passwordResetExpires: {
        type: Date,
        select: false,
    },
    emailVerificationToken: {
        type: String,
        select: false,
    },
    emailVerificationExpires: {
        type: Date,
        select: false,
    },
    authProvider: {
        type: String,
        enum: ["local", "google"],
        default: "local",
    },
    privacySettings: {
        showEmail: {
            type: Boolean,
            default: false,
        },
        showPhone: {
            type: Boolean,
            default: true,
        },
        allowDirectContact: {
            type: Boolean,
            default: true,
        },
        showFullName: {
            type: Boolean,
            default: false,
        },
        profileVisibility: {
            type: String,
            enum: ["public", "registered", "private"],
            default: "registered",
        },
        emailNotifications: {
            newMatches: {
                type: Boolean,
                default: true,
            },
            messages: {
                type: Boolean,
                default: true,
            },
            updates: {
                type: Boolean,
                default: false,
            },
            marketing: {
                type: Boolean,
                default: false,
            },
        },
        smsNotifications: {
            urgentAlerts: {
                type: Boolean,
                default: true,
            },
            matches: {
                type: Boolean,
                default: false,
            },
        },
    },
}, {
    timestamps: true,
    toJSON: {
        transform: function (doc, ret) {
            ret.id = ret._id;
            delete ret._id;
            delete ret.__v;
            delete ret.password;
            delete ret.passwordResetToken;
            delete ret.passwordResetExpires;
            delete ret.emailVerificationToken;
            delete ret.emailVerificationExpires;
            return ret;
        },
    },
});
// 密碼加密中介軟體
userSchema.pre("save", async function (next) {
    // 只有在密碼被修改時才進行加密
    if (!this.isModified("password"))
        return next();
    try {
        // 生成鹽值並加密密碼
        const salt = await bcryptjs_1.default.genSalt(12);
        this.password = await bcryptjs_1.default.hash(this.password, salt);
        next();
    }
    catch (error) {
        next(error);
    }
});
// 比較密碼方法
userSchema.methods.comparePassword = async function (candidatePassword) {
    return bcryptjs_1.default.compare(candidatePassword, this.password);
};
// 生成 JWT 認證令牌
userSchema.methods.generateAuthToken = function () {
    const payload = {
        id: this._id,
        email: this.email,
        role: this.role,
    };
    return jsonwebtoken_1.default.sign(payload, environment_1.config.jwt.secret, {
        expiresIn: environment_1.config.jwt.expiresIn,
    });
};
// 生成密碼重設令牌
userSchema.methods.generatePasswordResetToken = function () {
    const resetToken = jsonwebtoken_1.default.sign({ id: this._id, type: "password-reset" }, environment_1.config.jwt.secret, { expiresIn: "1h" });
    this.passwordResetToken = resetToken;
    this.passwordResetExpires = new Date(Date.now() + 60 * 60 * 1000); // 1 小時後過期
    return resetToken;
};
// 生成電子郵件驗證令牌
userSchema.methods.generateEmailVerificationToken = function () {
    const verificationToken = jsonwebtoken_1.default.sign({ id: this._id, type: "email-verification" }, environment_1.config.jwt.secret, { expiresIn: "24h" });
    this.emailVerificationToken = verificationToken;
    this.emailVerificationExpires = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 小時後過期
    return verificationToken;
};
// 建立索引
userSchema.index({ email: 1 }, { unique: true });
userSchema.index({ isActive: 1 });
userSchema.index({ createdAt: -1 });
userSchema.index({ "privacySettings.profileVisibility": 1 });
// 匯出用戶模型
exports.User = mongoose_1.default.model("User", userSchema);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,