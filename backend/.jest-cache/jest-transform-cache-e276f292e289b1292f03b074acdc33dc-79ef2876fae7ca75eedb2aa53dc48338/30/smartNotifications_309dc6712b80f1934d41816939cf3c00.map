{"file":"C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\smartNotifications.ts","mappings":"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","names":[],"sources":["C:\\Users\\User\\Desktop\\traeproject\\test2\\pet-finder-app\\backend\\src\\routes\\smartNotifications.ts"],"sourcesContent":["import { Router } from \"express\";\nimport { Request, Response } from \"express\";\nimport { SmartNotificationService } from \"../services/smartNotificationService\";\nimport { authenticate as auth } from \"../middleware/auth\";\nimport { validateRequest } from \"../utils/validation\";\nimport { body, query, param } from \"express-validator\";\nimport { logger } from \"../utils/logger\";\n\nconst router = Router();\n\n// 獲取智能通知統計\nrouter.get(\n  \"/statistics\",\n  auth,\n  [\n    query(\"startDate\").optional().isISO8601().withMessage(\"開始日期格式無效\"),\n    query(\"endDate\").optional().isISO8601().withMessage(\"結束日期格式無效\"),\n  ],\n  validateRequest,\n  async (req: Request, res: Response) => {\n    try {\n      const { startDate, endDate } = req.query;\n      const userId = req.user!._id.toString();\n\n      const statistics =\n        await SmartNotificationService.getSmartNotificationStatistics({\n          userId,\n          startDate: startDate ? new Date(startDate as string) : undefined,\n          endDate: endDate ? new Date(endDate as string) : undefined,\n        });\n\n      res.json({\n        success: true,\n        data: statistics,\n      });\n    } catch (error) {\n      logger.error(\"獲取智能通知統計失敗:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"獲取統計資料失敗\",\n      });\n    }\n  },\n);\n\n// 獲取智能通知配置\nrouter.get(\"/config\", auth, async (req: Request, res: Response) => {\n  try {\n    const userId = req.user!._id.toString();\n    const config = await SmartNotificationService.getConfig(userId);\n\n    res.json({\n      success: true,\n      data: config,\n    });\n  } catch (error) {\n    logger.error(\"獲取智能通知配置失敗:\", error);\n    res.status(500).json({\n      success: false,\n      message: \"獲取配置失敗\",\n    });\n  }\n});\n\n// 更新智能通知配置\nrouter.put(\n  \"/config\",\n  auth,\n  [\n    body(\"aiMatching\")\n      .optional()\n      .isObject()\n      .withMessage(\"AI 配對設定必須是物件\"),\n    body(\"aiMatching.enabled\")\n      .optional()\n      .isBoolean()\n      .withMessage(\"AI 配對啟用狀態必須是布林值\"),\n    body(\"aiMatching.minSimilarity\")\n      .optional()\n      .isFloat({ min: 0, max: 1 })\n      .withMessage(\"最小相似度必須在 0-1 之間\"),\n    body(\"aiMatching.checkInterval\")\n      .optional()\n      .isInt({ min: 1 })\n      .withMessage(\"檢查間隔必須是正整數\"),\n    body(\"aiMatching.maxNotificationsPerDay\")\n      .optional()\n      .isInt({ min: 1 })\n      .withMessage(\"每日最大通知數必須是正整數\"),\n\n    body(\"geofencing\")\n      .optional()\n      .isObject()\n      .withMessage(\"地理圍欄設定必須是物件\"),\n    body(\"geofencing.enabled\")\n      .optional()\n      .isBoolean()\n      .withMessage(\"地理圍欄啟用狀態必須是布林值\"),\n    body(\"geofencing.radius\")\n      .optional()\n      .isFloat({ min: 0.1 })\n      .withMessage(\"半徑必須大於 0.1\"),\n    body(\"geofencing.checkInterval\")\n      .optional()\n      .isInt({ min: 1 })\n      .withMessage(\"檢查間隔必須是正整數\"),\n\n    body(\"reminders\").optional().isObject().withMessage(\"提醒設定必須是物件\"),\n    body(\"reminders.enabled\")\n      .optional()\n      .isBoolean()\n      .withMessage(\"提醒啟用狀態必須是布林值\"),\n    body(\"reminders.updateReminder\")\n      .optional()\n      .isInt({ min: 1 })\n      .withMessage(\"更新提醒間隔必須是正整數\"),\n    body(\"reminders.searchReminder\")\n      .optional()\n      .isInt({ min: 1 })\n      .withMessage(\"搜尋提醒間隔必須是正整數\"),\n  ],\n  validateRequest,\n  async (req: Request, res: Response) => {\n    try {\n      const userId = req.user!._id.toString();\n      const configUpdate = req.body;\n\n      const updatedConfig = await SmartNotificationService.updateConfig(\n        userId,\n        configUpdate,\n      );\n\n      res.json({\n        success: true,\n        data: updatedConfig,\n        message: \"配置更新成功\",\n      });\n    } catch (error) {\n      logger.error(\"更新智能通知配置失敗:\", error);\n      res.status(500).json({\n        success: false,\n        message: \"更新配置失敗\",\n      });\n    }\n  },\n);\n\n// 創建地理圍欄\nrouter.post(\n  \"/geofence\",\n  auth,\n  [\n    body(\"petId\").isMongoId().withMessage(\"寵物 ID 格式無效\"),\n    body(\"latitude\")\n      .isFloat({ min: -90, max: 90 })\n      .withMessage(\"緯度必須在 -90 到 90 之間\"),\n    body(\"longitude\")\n      .isFloat({ min: -180, max: 180 })\n      .withMessage(\"經度必須在 -180 到 180 之間\"),\n    body(\"radius\")\n      .isFloat({ min: 0.1, max: 50 })\n      .withMessage(\"半徑必須在 0.1 到 50 公里之間\"),\n    body(\"name\")\n      .optional()\n      .isString()\n      .isLength({ max: 100 })\n      .withMessage(\"名稱長度不能超過 100 字元\"),\n  ],\n  validateRequest,\n  async (req: Request, res: Response) => {\n    try {\n      const userId = req.user!._id.toString();\n      const { petId, latitude, longitude, radius, name } = req.body;\n\n      const geofence = await SmartNotificationService.createGeofence({\n        userId,\n        petId,\n        latitude,\n        longitude,\n        radius,\n        name,\n      });\n\n      return res.status(201).json({\n        success: true,\n        data: geofence,\n        message: \"地理圍欄創建成功\",\n      });\n    } catch (error) {\n      logger.error(\"創建地理圍欄失敗:\", error);\n      return res.status(500).json({\n        success: false,\n        message: \"創建地理圍欄失敗\",\n      });\n    }\n  },\n);\n\n// 移除地理圍欄\nrouter.delete(\n  \"/geofence/:geofenceId\",\n  auth,\n  [param(\"geofenceId\").isMongoId().withMessage(\"地理圍欄 ID 格式無效\")],\n  validateRequest,\n  async (req: Request, res: Response) => {\n    try {\n      const userId = req.user!._id.toString();\n      const { geofenceId } = req.params;\n\n      if (!geofenceId) {\n        return res.status(400).json({\n          success: false,\n          message: \"地理圍欄 ID 為必填項目\",\n        });\n      }\n\n      await SmartNotificationService.removeGeofence(userId, geofenceId);\n\n      return res.json({\n        success: true,\n        message: \"地理圍欄移除成功\",\n      });\n    } catch (error) {\n      logger.error(\"移除地理圍欄失敗:\", error);\n      return res.status(500).json({\n        success: false,\n        message: \"移除地理圍欄失敗\",\n      });\n    }\n  },\n);\n\n// 獲取用戶的地理圍欄列表\nrouter.get(\"/geofences\", auth, async (req: Request, res: Response) => {\n  try {\n    const userId = req.user!._id.toString();\n    const geofences = await SmartNotificationService.getUserGeofences(userId);\n\n    return res.json({\n      success: true,\n      data: geofences,\n    });\n  } catch (error) {\n    logger.error(\"獲取地理圍欄列表失敗:\", error);\n    return res.status(500).json({\n      success: false,\n      message: \"獲取地理圍欄列表失敗\",\n    });\n  }\n});\n\n// 手動觸發 AI 配對檢查\nrouter.post(\n  \"/trigger-ai-matching\",\n  auth,\n  [body(\"petId\").optional().isMongoId().withMessage(\"寵物 ID 格式無效\")],\n  validateRequest,\n  async (req: Request, res: Response) => {\n    try {\n      const userId = req.user!._id.toString();\n      const { petId } = req.body;\n\n      const result = await SmartNotificationService.triggerAIMatching(\n        userId,\n        petId,\n      );\n\n      return res.json({\n        success: true,\n        data: result,\n        message: \"AI 配對檢查已觸發\",\n      });\n    } catch (error) {\n      logger.error(\"觸發 AI 配對檢查失敗:\", error);\n      return res.status(500).json({\n        success: false,\n        message: \"觸發 AI 配對檢查失敗\",\n      });\n    }\n  },\n);\n\n// 測試智能通知（僅開發環境）\nrouter.post(\n  \"/test\",\n  auth,\n  [\n    body(\"type\")\n      .isIn([\"ai_matching\", \"geofencing\", \"reminder\"])\n      .withMessage(\"通知類型無效\"),\n    body(\"petId\").optional().isMongoId().withMessage(\"寵物 ID 格式無效\"),\n  ],\n  validateRequest,\n  async (req: Request, res: Response) => {\n    try {\n      // 僅在非生產環境允許測試\n      if (process.env.NODE_ENV === \"production\") {\n        return res.status(403).json({\n          success: false,\n          message: \"生產環境不允許測試功能\",\n        });\n      }\n\n      const userId = req.user!._id.toString();\n      const { type, petId } = req.body;\n\n      let result;\n      switch (type) {\n        case \"ai_matching\":\n          result = await SmartNotificationService.triggerAIMatching(\n            userId,\n            petId,\n          );\n          break;\n        case \"geofencing\":\n          // 模擬地理圍欄觸發\n          result = { message: \"地理圍欄測試通知已發送\" };\n          break;\n        case \"reminder\":\n          // 模擬提醒通知\n          result = { message: \"提醒測試通知已發送\" };\n          break;\n        default:\n          return res.status(400).json({\n            success: false,\n            message: \"不支援的測試類型\",\n          });\n      }\n\n      return res.json({\n        success: true,\n        data: result,\n        message: `${type} 測試通知已發送`,\n      });\n    } catch (error) {\n      logger.error(\"發送測試通知失敗:\", error);\n      return res.status(500).json({\n        success: false,\n        message: \"發送測試通知失敗\",\n      });\n    }\n  },\n);\n\nexport { router as smartNotificationRoutes };\n"],"version":3}