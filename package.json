{
  "name": "huluhulu",
  "version": "1.0.0",
  "description": "呼嚕寵物協尋網站 - 整合 AI 功能的寵物協尋平台",
  "private": true,
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm run dev",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "start": "concurrently \"npm run start:backend\" \"npm run start:frontend\"",
    "start:backend": "cd backend && npm start",
    "start:frontend": "cd frontend && npm start",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "test:performance": "node backend/test/test-performance.js",
    "test:benchmark": "node backend/test/test-performance.js --benchmark",
    "test:e2e": "playwright test",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:accessibility": "playwright test tests/accessibility",
    "test:performance:e2e": "playwright test tests/performance",
    "test:visual": "playwright test --config=tests/visual/visual.config.ts",
    "test:visual:update": "UPDATE_SNAPSHOTS=true playwright test --config=tests/visual/visual.config.ts",
    "test:visual:headed": "playwright test --config=tests/visual/visual.config.ts --headed",
    "test:visual:debug": "playwright test --config=tests/visual/visual.config.ts --debug",
    "test:visual:ci": "playwright test --config=tests/visual/visual.config.ts --reporter=junit",
    "test:coverage:full": "npm run test:coverage && npm run test:e2e && npm run test:accessibility && npm run test:visual",
    "test:ci": "npm run test:optimized && npm run test:e2e -- --reporter=junit && npm run test:visual:ci",
    "test:all": "npm run test:coverage:full && npm run test:performance:e2e",
    "test:ai": "node test-ai-integration.js",
    "test:ai:backend": "cd backend && npm run test:ai",
    "install:all": "npm install && npm run install:backend && npm run install:frontend",
    "install:backend": "cd backend && npm install",
    "install:frontend": "cd frontend && npm install",
    "clean": "npm run clean:backend && npm run clean:frontend",
    "clean:backend": "cd backend && rm -rf node_modules dist",
    "clean:frontend": "cd frontend && rm -rf node_modules .next",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "setup": "npm run install:all && npm run docker:up",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "format": "npm run format:backend && npm run format:frontend",
    "format:backend": "cd backend && npm run format",
    "format:frontend": "cd frontend && npm run format",
    "quality:check": "node scripts/code-quality-check.js",
    "quality:report": "npm run quality:check && echo \"詳細報告已生成: code-quality-report.json\"",
    "quality:fix": "npm run lint && npm run format",
    "pre-commit": "npm run quality:check && npm run lint && npm run test",
    "refactor:check": "npm run quality:check -- --strict",
    "refactor:auto": "node scripts/auto-refactor.js",
    "refactor:preview": "node scripts/auto-refactor.js --dry-run",
    "hooks:setup": "node scripts/setup-git-hooks.js setup",
    "hooks:remove": "node scripts/setup-git-hooks.js remove",
    "hooks:check": "node scripts/setup-git-hooks.js check",
    "hooks:test": "node scripts/setup-git-hooks.js test",
    "dashboard": "node scripts/quality-dashboard.js",
    "dashboard:trends": "node scripts/quality-dashboard.js trends",
    "quality:full": "npm run quality:check && npm run dashboard",
    "postinstall": "npm run hooks:setup"
  },
  "keywords": [
    "pet-finder",
    "ai",
    "computer-vision",
    "google-vision-ai",
    "image-processing",
    "similarity-search",
    "nextjs",
    "nodejs",
    "mongodb",
    "typescript"
  ],
  "author": "Pet Finder Team",
  "license": "MIT",
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@playwright/test": "^1.53.2",
    "axios": "^1.6.0",
    "concurrently": "^8.2.2",
    "form-data": "^4.0.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/huluhulu.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/huluhulu/issues"
  },
  "homepage": "https://github.com/your-username/huluhulu#readme",
  "ai-features": {
    "google-vision-ai": "圖像內容分析和物件檢測",
    "breed-identification": "寵物品種智能識別",
    "image-optimization": "圖像壓縮和格式優化",
    "similarity-search": "基於特徵向量的相似度搜尋",
    "ai-search-suggestions": "智能搜尋建議和自動完成"
  },
  "dependencies": {
    "@mui/icons-material": "^7.2.0"
  }
}
